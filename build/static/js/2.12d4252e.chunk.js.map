{"version":3,"sources":["../static/js/2.12d4252e.chunk.js","../node_modules/monaco-editor/esm/vs/language/json/jsonMode.js","../node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/scanner.js","../node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/format.js","../node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/parser.js","../node_modules/monaco-editor/esm/vs/language/json/workerManager.js","../node_modules/monaco-editor/esm/vs/language/json/languageFeatures.js","../node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-languageserver-types/main.js","../node_modules/monaco-editor/esm/vs/language/json/tokenization.js","../node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/main.js","../node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/edit.js"],"names":["webpackJsonp","627","module","__webpack_exports__","__webpack_require__","setupMode","defaults","disposables","client","push","worker","uris","_i","arguments","length","getLanguageServiceWorker","apply","languageId","monaco","languages","registerCompletionItemProvider","registerHoverProvider","registerDocumentSymbolProvider","registerDocumentFormattingEditProvider","registerDocumentRangeFormattingEditProvider","setTokensProvider","setLanguageConfiguration","richEditConfiguration","registerColorProvider","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","708","createScanner","text","ignoreTrivia","scanHexDigits","count","exact","digits","value","ch","charCodeAt","pos","setPosition","newPosition","tokenOffset","token","scanError","scanNumber","start","isDigit","substring","end","scanString","result","len","isLineBreak","ch_1","String","fromCharCode","scanNext","code","isWhiteSpace","commentClosed","isUnknownContentCharacter","scanNextNonTrivia","getPosition","scan","getToken","getTokenValue","getTokenOffset","getTokenLength","getTokenError","750","format","documentText","range","options","newLineAndIndent","eol","repeat","indentValue","initialIndentLevel","indentLevel","scanner","lineBreak","hasError","addEdit","startOffset","endOffset","rangeEnd","rangeStart","editOperations","offset","content","formatText","formatTextStart","isEOL","computeIndentLevel","getEOL","insertSpaces","tabSize","firstToken","firstTokenStart","firstTokenEnd","secondToken","replaceContent","s","i","nChars","charAt","Math","floor","indexOf","751","getLocation","position","setPreviousNode","type","previousNodeInst","columnOffset","previousNode","segments","earlyReturnException","Object","isAtPropertyKey","visit","onObjectBegin","onObjectProperty","name","onObjectEnd","pop","onArrayBegin","onArrayEnd","onLiteralValue","getLiteralNodeType","onSeparator","sep","last","e","path","matches","pattern","k","parse","errors","onValue","Array","isArray","currentParent","currentProperty","previousParents","object","array","onError","error","parseTree","ensurePropertyComplete","parent","valueNode","children","findNodeAtLocation","root","node","path_1","segment","found","_a","_b","propertyNode","index","getNodeValue","map","obj","create","prop","visitor","toNoArgVisit","visitFunction","_scanner","toOneArgVisit","arg","handleError","disallowComments","onComment","skipUntilAfter","skipUntil","parseString","isValue","parseLiteral","JSON","parseProperty","parseValue","parseObject","needsComma","allowTrailingComma","parseArray","stripComments","replaceCh","kind","parts","replace","join","852","toShallowCancelPromise","p","completeCallback","errorCallback","r","Promise","c","then","WorkerManager","_this","this","_defaults","_worker","_idleCheckInterval","setInterval","_checkIfIdle","_lastUsedTime","_configChangeListener","onDidChange","_stopWorker","prototype","dispose","_client","clearInterval","Date","now","_getClient","editor","createWebWorker","moduleId","label","createData","languageSettings","diagnosticsOptions","getProxy","resources","_","withSyncedResources","853","toSeverity","lsSeverity","Error","MarkerSeverity","Warning","Information","Info","Hint","toDiagnostics","resource","diag","severity","startLineNumber","line","startColumn","character","endLineNumber","endColumn","message","source","fromPosition","column","lineNumber","fromRange","toRange","Range","toCompletionItemKind","mItemKind","CompletionItemKind","Text","Method","Function","Constructor","Field","Variable","Class","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","Color","File","Reference","toTextEdit","textEdit","newText","isMarkupContent","thing","toMarkdownString","entry","language","toMarkedStringArray","contents","toLocation","location","uri","Uri","toSymbolKind","mKind","SymbolKind","Namespace","Package","Constant","Number","Boolean","fromFormattingOptions","wireCancellationToken","promise","cancel","onCancellationRequested","DiagnosticsAdapter","_languageId","_disposables","_listener","onModelAdd","model","modeId","getModeId","handle","toString","onDidChangeContent","clearTimeout","setTimeout","_doValidate","onModelRemoved","setModelMarkers","uriStr","listener","onDidCreateModel","onWillDisposeModel","_resetSchema","onDidChangeModelLanguage","event","getModels","forEach","key","d","resetSchema","doValidation","diagnostics","markers","getModel","undefined","err","console","CompletionAdapter","defineProperty","get","enumerable","configurable","provideCompletionItems","getWordUntilPosition","doComplete","info","items","item","insertText","sortText","filterText","documentation","detail","insertTextFormat","isIncomplete","HoverAdapter","provideHover","doHover","DocumentSymbolAdapter","provideDocumentSymbols","findDocumentSymbols","containerName","DocumentFormattingEditProvider","provideDocumentFormattingEdits","edits","DocumentRangeFormattingEditProvider","provideDocumentRangeFormattingEdits","DocumentColorAdapter","provideDocumentColors","findDocumentColors","infos","color","provideColorPresentations","getColorPresentations","presentations","presentation","additionalTextEdits","854","Position","is","candidate","Is","defined","number","one","two","three","four","Location","string","DiagnosticSeverity","Diagnostic","Command","title","command","args","TextEdit","insert","del","TextDocumentEdit","textDocument","VersionedTextDocumentIdentifier","TextDocumentIdentifier","TextEditChangeImpl","delete","add","edit","all","clear","splice","WorkspaceChange","workspaceEdit","_textEditChanges","_workspaceEdit","documentChanges","textDocumentEdit","textEditChange","changes","keys","getTextEditChange","version","TextDocumentItem","MarkupKind","PlainText","Markdown","Folder","EnumMember","Struct","Event","Operator","TypeParameter","InsertTextFormat","CompletionItem","CompletionList","MarkedString","fromPlainText","plainText","ParameterInformation","SignatureInformation","parameters","DocumentHighlightKind","Read","Write","DocumentHighlight","Key","Null","SymbolInformation","CodeActionContext","typedArray","CodeLens","data","FormattingOptions","boolean","DocumentLink","target","TextDocument","FullTextDocument","lineCount","func","getText","positionAt","offsetAt","applyEdits","document","sortedEdits","mergeSort","a","b","lastModifiedOffset","compare","left","slice","right","leftIdx","rightIdx","ret","TextDocumentSaveReason","Manual","AfterDelay","FocusOut","_uri","_version","_content","_lineOffsets","update","getLineOffsets","lineOffsets","isLineStart","max","min","low","high","mid","lineOffset","nextLineOffset","call","check","every","855","createTokenizationSupport","supportComments","getInitialState","JSONState","tokenize","state","offsetDelta","stopAtOffset","numberOfInsertedCharacters","adjustOffset","lastWasColon","tokens","endState","clone","substr","TOKEN_DELIM_OBJECT","TOKEN_DELIM_ARRAY","TOKEN_DELIM_COLON","TOKEN_DELIM_COMMA","TOKEN_VALUE_BOOLEAN","TOKEN_VALUE_NULL","TOKEN_VALUE_STRING","TOKEN_PROPERTY_NAME","TOKEN_VALUE_NUMBER","TOKEN_COMMENT_LINE","TOKEN_COMMENT_BLOCK","getStateData","startIndex","scopes","_state","equals","other","setStateData","856","857","setProperty","formattingOptions","getInsertionIndex","lastSegment","existing","propertyIndex","removeBegin","removeEnd","previous","next","withFormatting","stringify","newProperty","removalIndex","toRemove","parentEndOffset","applyEdit","begin","edit_1"],"mappings":"AAAAA,cAAc,IAERC,IACA,SAAUC,EAAQC,EAAqBC,GAE7C,YCGO,SAASC,GAAUC,GACtB,GAAIC,MACAC,EAAS,GAAI,KAAcF,EAC/BC,GAAYE,KAAKD,EACjB,IAAIE,GAAS,WAET,IAAK,GADDC,MACKC,EAAK,EAAGA,EAAKC,UAAUC,OAAQF,IACpCD,EAAKC,GAAMC,UAAUD,EAEzB,OAAOJ,GAAOO,yBAAyBC,MAAMR,EAAQG,IAErDM,EAAaX,EAASW,UAC1BV,GAAYE,KAAKS,OAAOC,UAAUC,+BAA+BH,EAAY,GAAI,KAAmCP,KACpHH,EAAYE,KAAKS,OAAOC,UAAUE,sBAAsBJ,EAAY,GAAI,KAA8BP,KACtGH,EAAYE,KAAKS,OAAOC,UAAUG,+BAA+BL,EAAY,GAAI,KAAuCP,KACxHH,EAAYE,KAAKS,OAAOC,UAAUI,uCAAuCN,EAAY,GAAI,KAAgDP,KACzIH,EAAYE,KAAKS,OAAOC,UAAUK,4CAA4CP,EAAY,GAAI,KAAqDP,KACnJH,EAAYE,KAAK,GAAI,KAAoCQ,EAAYP,EAAQJ,IAC7EC,EAAYE,KAAKS,OAAOC,UAAUM,kBAAkBR,EAAY,aAA0B,KAC1FV,EAAYE,KAAKS,OAAOC,UAAUO,yBAAyBT,EAAYU,IACvEpB,EAAYE,KAAKS,OAAOC,UAAUS,sBAAsBX,EAAY,GAAI,KAAsCP,KA5BlH,8FA8BIiB,GACAE,YAAa,yCACbC,UACIC,YAAa,KACbC,cAAe,KAAM,OAEzBC,WACK,IAAK,MACL,IAAK,MAEVC,mBACMC,KAAM,IAAKC,MAAO,IAAKC,OAAQ,YAC/BF,KAAM,IAAKC,MAAO,IAAKC,OAAQ,YAC/BF,KAAM,IAAKC,MAAO,IAAKC,OAAQ,cDkBnCC,IACA,SAAUpC,EAAQC,EAAqBC,GAE7C,YEvDO,SAASmC,GAAcC,EAAMC,GAGhC,QAASC,GAAcC,EAAOC,GAG1B,IAFA,GAAIC,GAAS,EACTC,EAAQ,EACLD,EAASF,IAAUC,GAAO,CAC7B,GAAIG,GAAKP,EAAKQ,WAAWC,EACzB,IAAIF,GAAM,IAAeA,GAAM,GAC3BD,EAAgB,GAARA,EAAaC,EAAK,OAEzB,IAAIA,GAAM,IAAcA,GAAM,GAC/BD,EAAgB,GAARA,EAAaC,EAAK,GAAa,OAEtC,MAAIA,GAAM,IAAcA,GAAM,KAI/B,KAHAD,GAAgB,GAARA,EAAaC,EAAK,GAAa,GAK3CE,IACAJ,IAKJ,MAHIA,GAASF,IACTG,GAAS,GAENA,EAEX,QAASI,GAAYC,GACjBF,EAAME,EACNL,EAAQ,GACRM,EAAc,EACdC,EAAQ,GACRC,EAAY,EAEhB,QAASC,KACL,GAAIC,GAAQP,CACZ,IAA6B,KAAzBT,EAAKQ,WAAWC,GAChBA,QAIA,KADAA,IACOA,EAAMT,EAAK1B,QAAU2C,EAAQjB,EAAKQ,WAAWC,KAChDA,GAGR,IAAIA,EAAMT,EAAK1B,QAAmC,KAAzB0B,EAAKQ,WAAWC,GAAuB,CAE5D,OADAA,EACUT,EAAK1B,QAAU2C,EAAQjB,EAAKQ,WAAWC,KAQ7C,MADAK,GAAY,EACLd,EAAKkB,UAAUF,EAAOP,EAN7B,KADAA,IACOA,EAAMT,EAAK1B,QAAU2C,EAAQjB,EAAKQ,WAAWC,KAChDA,IAQZ,GAAIU,GAAMV,CACV,IAAIA,EAAMT,EAAK1B,SAAoC,KAAzB0B,EAAKQ,WAAWC,IAAgD,MAAzBT,EAAKQ,WAAWC,IAK7E,GAJAA,KACIA,EAAMT,EAAK1B,QAAmC,KAAzB0B,EAAKQ,WAAWC,IAAmD,KAAzBT,EAAKQ,WAAWC,KAC/EA,IAEAA,EAAMT,EAAK1B,QAAU2C,EAAQjB,EAAKQ,WAAWC,IAAO,CAEpD,IADAA,IACOA,EAAMT,EAAK1B,QAAU2C,EAAQjB,EAAKQ,WAAWC,KAChDA,GAEJU,GAAMV,MAGNK,GAAY,CAGpB,OAAOd,GAAKkB,UAAUF,EAAOG,GAEjC,QAASC,KAEL,IADA,GAAIC,GAAS,GAAIL,EAAQP,IACZ,CACT,GAAIA,GAAOa,EAAK,CACZD,GAAUrB,EAAKkB,UAAUF,EAAOP,GAChCK,EAAY,CACZ,OAEJ,GAAIP,GAAKP,EAAKQ,WAAWC,EACzB,IAAW,KAAPF,EAA6B,CAC7Bc,GAAUrB,EAAKkB,UAAUF,EAAOP,GAChCA,GACA,OAEJ,GAAW,KAAPF,EAAJ,CAgDA,GAAIA,GAAM,GAAKA,GAAM,GAAM,CACvB,GAAIgB,EAAYhB,GAAK,CACjBc,GAAUrB,EAAKkB,UAAUF,EAAOP,GAChCK,EAAY,CACZ,OAGAA,EAAY,EAIpBL,QA3DA,CAGI,GAFAY,GAAUrB,EAAKkB,UAAUF,EAAOP,KAChCA,GACWa,EAAK,CACZR,EAAY,CACZ,OAGJ,OADAP,EAAKP,EAAKQ,WAAWC,MAEjB,IAAK,IACDY,GAAU,GACV,MACJ,KAAK,IACDA,GAAU,IACV,MACJ,KAAK,IACDA,GAAU,GACV,MACJ,KAAK,IACDA,GAAU,IACV,MACJ,KAAK,KACDA,GAAU,IACV,MACJ,KAAK,KACDA,GAAU,IACV,MACJ,KAAK,KACDA,GAAU,IACV,MACJ,KAAK,KACDA,GAAU,IACV,MACJ,KAAK,KACD,GAAIG,GAAOtB,EAAc,GAAG,EACxBsB,IAAQ,EACRH,GAAUI,OAAOC,aAAaF,GAG9BV,EAAY,CAEhB,MACJ,SACIA,EAAY,EAEpBE,EAAQP,GAgBhB,MAAOY,GAEX,QAASM,KAIL,GAHArB,EAAQ,GACRQ,EAAY,EACZF,EAAcH,EACVA,GAAOa,EAGP,MADAV,GAAcU,EACPT,EAAQ,EAEnB,IAAIe,GAAO5B,EAAKQ,WAAWC,EAE3B,IAAIoB,EAAaD,GAAO,CACpB,GACInB,IACAH,GAASmB,OAAOC,aAAaE,GAC7BA,EAAO5B,EAAKQ,WAAWC,SAClBoB,EAAaD,GACtB,OAAOf,GAAQ,GAGnB,GAAIU,EAAYK,GAOZ,MANAnB,KACAH,GAASmB,OAAOC,aAAaE,GAChB,KAATA,GAA6D,KAAzB5B,EAAKQ,WAAWC,KACpDA,IACAH,GAAS,MAENO,EAAQ,EAEnB,QAAQe,GAEJ,IAAK,KAED,MADAnB,KACOI,EAAQ,CACnB,KAAK,KAED,MADAJ,KACOI,EAAQ,CACnB,KAAK,IAED,MADAJ,KACOI,EAAQ,CACnB,KAAK,IAED,MADAJ,KACOI,EAAQ,CACnB,KAAK,IAED,MADAJ,KACOI,EAAQ,CACnB,KAAK,IAED,MADAJ,KACOI,EAAQ,CAEnB,KAAK,IAGD,MAFAJ,KACAH,EAAQc,IACDP,EAAQ,EAEnB,KAAK,IACD,GAAIG,GAAQP,EAAM,CAElB,IAAiC,KAA7BT,EAAKQ,WAAWC,EAAM,GAAuB,CAE7C,IADAA,GAAO,EACAA,EAAMa,IACLC,EAAYvB,EAAKQ,WAAWC,KAGhCA,GAGJ,OADAH,GAAQN,EAAKkB,UAAUF,EAAOP,GACvBI,EAAQ,GAGnB,GAAiC,KAA7Bb,EAAKQ,WAAWC,EAAM,GAA0B,CAChDA,GAAO,CAEP,KADA,GAAIqB,IAAgB,EACbrB,EAAMa,GAAK,CAEd,GAAW,KADFtB,EAAKQ,WAAWC,IACQA,EAAM,EAAIa,GAAqC,KAA7BtB,EAAKQ,WAAWC,EAAM,GAAuB,CAC5FA,GAAO,EACPqB,GAAgB,CAChB,OAEJrB,IAOJ,MALKqB,KACDrB,IACAK,EAAY,GAEhBR,EAAQN,EAAKkB,UAAUF,EAAOP,GACvBI,EAAQ,GAKnB,MAFAP,IAASmB,OAAOC,aAAaE,GAC7BnB,IACOI,EAAQ,EAEnB,KAAK,IAGD,GAFAP,GAASmB,OAAOC,aAAaE,KAC7BnB,IACYa,IAAQL,EAAQjB,EAAKQ,WAAWC,IACxC,MAAOI,GAAQ,EAKvB,KAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IAED,MADAP,IAASS,IACFF,EAAQ,EAEnB,SAEI,KAAOJ,EAAMa,GAAOS,EAA0BH,IAC1CnB,IACAmB,EAAO5B,EAAKQ,WAAWC,EAE3B,IAAIG,IAAgBH,EAAK,CAGrB,OAFAH,EAAQN,EAAKkB,UAAUN,EAAaH,IAGhC,IAAK,OAAQ,MAAOI,GAAQ,CAC5B,KAAK,QAAS,MAAOA,GAAQ,CAC7B,KAAK,OAAQ,MAAOA,GAAQ,EAEhC,MAAOA,GAAQ,GAKnB,MAFAP,IAASmB,OAAOC,aAAaE,GAC7BnB,IACOI,EAAQ,IAG3B,QAASkB,GAA0BH,GAC/B,GAAIC,EAAaD,IAASL,EAAYK,GAClC,OAAO,CAEX,QAAQA,GACJ,IAAK,KACL,IAAK,IACL,IAAK,KACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACD,OAAO,EAEf,OAAO,EAEX,QAASI,KACL,GAAIX,EACJ,IACIA,EAASM,UACJN,GAAU,IAA8BA,GAAU,GAC3D,OAAOA,OAzTU,KAAjBpB,IAA2BA,GAAe,EAC9C,IAAIQ,GAAM,EAAGa,EAAMtB,EAAK1B,OAAQgC,EAAQ,GAAIM,EAAc,EAAGC,EAAQ,GAAkBC,EAAY,CA0TnG,QACIJ,YAAaA,EACbuB,YAAa,WAAc,MAAOxB,IAClCyB,KAAMjC,EAAe+B,EAAoBL,EACzCQ,SAAU,WAAc,MAAOtB,IAC/BuB,cAAe,WAAc,MAAO9B,IACpC+B,eAAgB,WAAc,MAAOzB,IACrC0B,eAAgB,WAAc,MAAO7B,GAAMG,GAC3C2B,cAAe,WAAc,MAAOzB,KAG5C,QAASe,GAAatB,GAClB,MAAc,MAAPA,GAAgC,IAAPA,GAA6B,KAAPA,GAAsC,KAAPA,GAC1E,MAAPA,GAA4C,OAAPA,GAA2BA,GAAM,MAAqBA,GAAM,MAC1F,OAAPA,GAA+C,OAAPA,GAA8C,QAAPA,GAA8C,QAAPA,EAE9H,QAASgB,GAAYhB,GACjB,MAAc,MAAPA,GAAmC,KAAPA,GAAyC,OAAPA,GAA0C,OAAPA,EAE5G,QAASU,GAAQV,GACb,MAAOA,IAAM,IAAeA,GAAM,GAzVtC,OFiaMiC,IACA,SAAU9E,EAAQC,EAAqBC,GAE7C,YG9ZO,SAAS6E,GAAOC,EAAcC,EAAOC,GAuCxC,QAASC,KACL,MAAOC,GAAMC,EAAOC,EAAaC,EAAqBC,GAE1D,QAASvB,KACL,GAAId,GAAQsC,EAAQjB,MAEpB,KADAkB,GAAY,EACK,KAAVvC,GAAuC,KAAVA,GAChCuC,EAAYA,GAAwB,KAAVvC,EAC1BA,EAAQsC,EAAQjB,MAGpB,OADAmB,GAAqB,KAAVxC,GAA0D,IAA5BsC,EAAQZ,gBAC1C1B,EAGX,QAASyC,GAAQtD,EAAMuD,EAAaC,IAC3BH,GAAYE,EAAcE,GAAYD,EAAYE,GAAchB,EAAaxB,UAAUqC,EAAaC,KAAexD,GACpH2D,EAAe1F,MAAO2F,OAAQL,EAAajF,OAAQkF,EAAYD,EAAaM,QAAS7D,IAtD7F,GAAIiD,GACAa,EACAC,EACAL,EACAD,CACJ,IAAId,EAAO,CAIP,IAHAe,EAAaf,EAAMiB,OACnBH,EAAWC,EAAaf,EAAMrE,OAC9ByF,EAAkBL,EACXK,EAAkB,IAAMC,EAAMtB,EAAcqB,EAAkB,IACjEA,GAGJ,KADA,GAAIP,GAAYC,EACTD,EAAYd,EAAapE,SAAW0F,EAAMtB,EAAcc,IAC3DA,GAEJM,GAAapB,EAAaxB,UAAU6C,EAAiBP,GACrDP,EAAqBgB,EAAmBH,EAAY,EAAGlB,OAGvDkB,GAAapB,EACbO,EAAqB,EACrBc,EAAkB,EAClBL,EAAa,EACbD,EAAWf,EAAapE,MAE5B,IAGI0E,GAHAF,EAAMoB,EAAOtB,EAASF,GACtBU,GAAY,EACZF,EAAc,CAGdF,GADAJ,EAAQuB,aACMpB,EAAO,IAAKH,EAAQwB,SAAW,GAG/B,IAElB,IAAIjB,GAAU,YAAcW,GAAY,GACpCT,GAAW,EAcXM,KAMAU,EAAa1C,GACjB,IAAmB,KAAf0C,EAA6B,CAC7B,GAAIC,GAAkBnB,EAAQd,iBAAmB0B,CAEjDT,GADoBP,EAAOC,EAAaC,GACjBc,EAAiBO,GAE5C,KAAsB,KAAfD,GAA6B,CAIhC,IAHA,GAAIE,GAAgBpB,EAAQd,iBAAmBc,EAAQb,iBAAmByB,EACtES,EAAc7C,IACd8C,EAAiB,IACbrB,IAA8B,KAAhBoB,GAA8D,KAAhBA,IAA8C,CAG9GlB,EAAQ,IAAKiB,EADWpB,EAAQd,iBAAmB0B,GAEnDQ,EAAgBpB,EAAQd,iBAAmBc,EAAQb,iBAAmByB,EACtEU,EAAiC,KAAhBD,EAA6C3B,IAAqB,GACnF2B,EAAc7C,IAElB,GAAoB,IAAhB6C,EACmB,IAAfH,IACAnB,IACAuB,EAAiB5B,SAGpB,IAAoB,IAAhB2B,EACc,IAAfH,IACAnB,IACAuB,EAAiB5B,SAGpB,CACD,OAAQwB,GACJ,IAAK,GACL,IAAK,GACDnB,IACAuB,EAAiB5B,GACjB,MACJ,KAAK,GACL,IAAK,IACD4B,EAAiB5B,GACjB,MACJ,KAAK,IAEG4B,EADArB,EACiBP,IAIA,GAErB,MACJ,KAAK,GACD4B,EAAiB,GACjB,MACJ,KAAK,IACD,GAAoB,IAAhBD,EAAoC,CACpCC,EAAiB,EACjB,OAGR,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,IACL,IAAK,GACL,IAAK,GACmB,KAAhBD,GAA8D,KAAhBA,EAC9CC,EAAiB,IAEI,IAAhBD,GAAsD,KAAhBA,IAC3CnB,GAAW,EAEf,MACJ,KAAK,IACDA,GAAW,GAGfD,GAA8B,KAAhBoB,GAA8D,KAAhBA,IAC5DC,EAAiB5B,KAIzBS,EAAQmB,EAAgBF,EADDpB,EAAQd,iBAAmB0B,GAElDM,EAAaG,EAEjB,MAAOb,GAEX,QAASZ,GAAO2B,EAAGvE,GAEf,IAAK,GADDkB,GAAS,GACJsD,EAAI,EAAGA,EAAIxE,EAAOwE,IACvBtD,GAAUqD,CAEd,OAAOrD,GAEX,QAAS4C,GAAmBJ,EAASD,EAAQhB,GAIzC,IAHA,GAAI+B,GAAI,EACJC,EAAS,EACTR,EAAUxB,EAAQwB,SAAW,EAC1BO,EAAId,EAAQvF,QAAQ,CACvB,GAAIiC,GAAKsD,EAAQgB,OAAOF,EACxB,IAAW,MAAPpE,EACAqE,QAEC,IAAW,OAAPrE,EAIL,KAHAqE,IAAUR,EAKdO,IAEJ,MAAOG,MAAKC,MAAMH,EAASR,GAE/B,QAASF,GAAOtB,EAAS5C,GACrB,IAAK,GAAI2E,GAAI,EAAGA,EAAI3E,EAAK1B,OAAQqG,IAAK,CAClC,GAAIpE,GAAKP,EAAK6E,OAAOF,EACrB,IAAW,OAAPpE,EACA,MAAIoE,GAAI,EAAI3E,EAAK1B,QAAiC,OAAvB0B,EAAK6E,OAAOF,EAAI,GAChC,OAEJ,IAEN,IAAW,OAAPpE,EACL,MAAO,KAGf,MAAQqC,IAAWA,EAAQE,KAAQ,KAEhC,QAASkB,GAAMhE,EAAM4D,GACxB,OAAgD,IAAzC,OAAOoB,QAAQhF,EAAK6E,OAAOjB,IAhMtC,0BH8mBMqB,IACA,SAAUvH,EAAQC,EAAqBC,GAE7C,YIxmBO,SAASsH,GAAYlF,EAAMmF,GAW9B,QAASC,GAAgB9E,EAAOsD,EAAQtF,EAAQ+G,GAC5CC,EAAiBhF,MAAQA,EACzBgF,EAAiB1B,OAASA,EAC1B0B,EAAiBhH,OAASA,EAC1BgH,EAAiBD,KAAOA,EACxBC,EAAiBC,iBAAe,GAChCC,EAAeF,EAhBnB,GAAIG,MACAC,EAAuB,GAAIC,QAC3BH,MAAe,GACfF,GACAhF,SACAsD,OAAQ,EACRtF,OAAQ,EACR+G,KAAM,UAENO,GAAkB,CAStB,KACIC,EAAM7F,GACF8F,cAAe,SAAUlC,EAAQtF,GAC7B,GAAI6G,GAAYvB,EACZ,KAAM8B,EAEVF,OAAe,GACfI,EAAkBT,EAAWvB,EAC7B6B,EAASxH,KAAK,KAElB8H,iBAAkB,SAAUC,EAAMpC,EAAQtF,GACtC,GAAI6G,EAAWvB,EACX,KAAM8B,EAIV,IAFAN,EAAgBY,EAAMpC,EAAQtF,EAAQ,YACtCmH,EAASA,EAASnH,OAAS,GAAK0H,EAC5Bb,GAAYvB,EAAStF,EACrB,KAAMoH,IAGdO,YAAa,SAAUrC,EAAQtF,GAC3B,GAAI6G,GAAYvB,EACZ,KAAM8B,EAEVF,OAAe,GACfC,EAASS,OAEbC,aAAc,SAAUvC,EAAQtF,GAC5B,GAAI6G,GAAYvB,EACZ,KAAM8B,EAEVF,OAAe,GACfC,EAASxH,KAAK,IAElBmI,WAAY,SAAUxC,EAAQtF,GAC1B,GAAI6G,GAAYvB,EACZ,KAAM8B,EAEVF,OAAe,GACfC,EAASS,OAEbG,eAAgB,SAAU/F,EAAOsD,EAAQtF,GACrC,GAAI6G,EAAWvB,EACX,KAAM8B,EAGV,IADAN,EAAgB9E,EAAOsD,EAAQtF,EAAQgI,EAAmBhG,IACtD6E,GAAYvB,EAAStF,EACrB,KAAMoH,IAGda,YAAa,SAAUC,EAAK5C,EAAQtF,GAChC,GAAI6G,GAAYvB,EACZ,KAAM8B,EAEV,IAAY,MAARc,GAAehB,GAAsC,aAAtBA,EAAaH,KAC5CG,EAAaD,aAAe3B,EAC5BgC,GAAkB,EAClBJ,MAAe,OAEd,IAAY,MAARgB,EAAa,CAClB,GAAIC,GAAOhB,EAASA,EAASnH,OAAS,EAClB,kBAATmI,GACPhB,EAASA,EAASnH,OAAS,GAAKmI,EAAO,GAGvCb,GAAkB,EAClBH,EAASA,EAASnH,OAAS,GAAK,IAEpCkH,MAAe,OAK/B,MAAOkB,GACH,GAAIA,IAAMhB,EACN,KAAMgB,GAGd,OACIC,KAAMlB,EACND,aAAcA,EACdI,gBAAiBA,EACjBgB,QAAS,SAAUC,GAEf,IAAK,GADDC,GAAI,EACCnC,EAAI,EAAGmC,EAAID,EAAQvI,QAAUqG,EAAIc,EAASnH,OAAQqG,IACvD,GAAIkC,EAAQC,KAAOrB,EAASd,IAAqB,MAAfkC,EAAQC,GACtCA,QAEC,IAAmB,OAAfD,EAAQC,GACb,OAAO,CAGf,OAAOA,KAAMD,EAAQvI,SAQ1B,QAASyI,GAAM/G,EAAMgH,EAAQpE,GAKhC,QAASqE,GAAQ3G,GACT4G,MAAMC,QAAQC,GACdA,EAAcnJ,KAAKqC,GAEd+G,IACLD,EAAcC,GAAmB/G,OAT1B,KAAX0G,IAAqBA,KACzB,IAAIK,GAAkB,KAClBD,KACAE,IAuCJ,OADAzB,GAAM7F,GA5BF8F,cAAe,WACX,GAAIyB,KACJN,GAAQM,GACRD,EAAgBrJ,KAAKmJ,GACrBA,EAAgBG,EAChBF,EAAkB,MAEtBtB,iBAAkB,SAAUC,GACxBqB,EAAkBrB,GAEtBC,YAAa,WACTmB,EAAgBE,EAAgBpB,OAEpCC,aAAc,WACV,GAAIqB,KACJP,GAAQO,GACRF,EAAgBrJ,KAAKmJ,GACrBA,EAAgBI,EAChBH,EAAkB,MAEtBjB,WAAY,WACRgB,EAAgBE,EAAgBpB,OAEpCG,eAAgBY,EAChBQ,QAAS,SAAUC,EAAO9D,EAAQtF,GAC9B0I,EAAO/I,MAAOyJ,MAAOA,EAAO9D,OAAQA,EAAQtF,OAAQA,MAGvCsE,GACdwE,EAAc,GAKlB,QAASO,GAAU3H,EAAMgH,EAAQpE,GAGpC,QAASgF,GAAuBpE,GACD,aAAvB4D,EAAc/B,OACd+B,EAAc9I,OAASkF,EAAY4D,EAAcxD,OACjDwD,EAAgBA,EAAcS,QAGtC,QAASZ,GAAQa,GAEb,MADAV,GAAcW,SAAS9J,KAAK6J,GACrBA,MAVI,KAAXd,IAAqBA,KACzB,IAAII,IAAkB/B,KAAM,QAASzB,QAAS,EAAGtF,QAAS,EAAGyJ,YAkD7DlC,GAAM7F,GAtCF8F,cAAe,SAAUlC,GACrBwD,EAAgBH,GAAU5B,KAAM,SAAUzB,OAAQA,EAAQtF,QAAS,EAAGuJ,OAAQT,EAAeW,eAEjGhC,iBAAkB,SAAUC,EAAMpC,EAAQtF,GACtC8I,EAAgBH,GAAU5B,KAAM,WAAYzB,OAAQA,EAAQtF,QAAS,EAAGuJ,OAAQT,EAAeW,cAC/FX,EAAcW,SAAS9J,MAAOoH,KAAM,SAAU/E,MAAO0F,EAAMpC,OAAQA,EAAQtF,OAAQA,EAAQuJ,OAAQT,KAEvGnB,YAAa,SAAUrC,EAAQtF,GAC3B8I,EAAc9I,OAASsF,EAAStF,EAAS8I,EAAcxD,OACvDwD,EAAgBA,EAAcS,OAC9BD,EAAuBhE,EAAStF,IAEpC6H,aAAc,SAAUvC,EAAQtF,GAC5B8I,EAAgBH,GAAU5B,KAAM,QAASzB,OAAQA,EAAQtF,QAAS,EAAGuJ,OAAQT,EAAeW,eAEhG3B,WAAY,SAAUxC,EAAQtF,GAC1B8I,EAAc9I,OAASsF,EAAStF,EAAS8I,EAAcxD,OACvDwD,EAAgBA,EAAcS,OAC9BD,EAAuBhE,EAAStF,IAEpC+H,eAAgB,SAAU/F,EAAOsD,EAAQtF,GACrC2I,GAAU5B,KAAMiB,EAAmBhG,GAAQsD,OAAQA,EAAQtF,OAAQA,EAAQuJ,OAAQT,EAAe9G,MAAOA,IACzGsH,EAAuBhE,EAAStF,IAEpCiI,YAAa,SAAUC,EAAK5C,EAAQtF,GACL,aAAvB8I,EAAc/B,OACF,MAARmB,EACAY,EAAc7B,aAAe3B,EAEhB,MAAR4C,GACLoB,EAAuBhE,KAInC6D,QAAS,SAAUC,EAAO9D,EAAQtF,GAC9B0I,EAAO/I,MAAOyJ,MAAOA,EAAO9D,OAAQA,EAAQtF,OAAQA,MAGvCsE,EACrB,IAAIvB,GAAS+F,EAAcW,SAAS,EAIpC,OAHI1G,UACOA,GAAOwG,OAEXxG,EAKJ,QAAS2G,GAAmBC,EAAMtB,GACrC,GAAKsB,EAAL,CAIA,IAAK,GADDC,GAAOD,EACF7J,EAAK,EAAG+J,EAASxB,EAAMvI,EAAK+J,EAAO7J,OAAQF,IAAM,CACtD,GAAIgK,GAAUD,EAAO/J,EACrB,IAAuB,iBAAZgK,GAAsB,CAC7B,GAAkB,WAAdF,EAAK7C,OAAsB6B,MAAMC,QAAQe,EAAKH,UAC9C,MAGJ,KAAK,GADDM,IAAQ,EACHC,EAAK,EAAGC,EAAKL,EAAKH,SAAUO,EAAKC,EAAGjK,OAAQgK,IAAM,CACvD,GAAIE,GAAeD,EAAGD,EACtB,IAAIpB,MAAMC,QAAQqB,EAAaT,WAAaS,EAAaT,SAAS,GAAGzH,QAAU8H,EAAS,CACpFF,EAAOM,EAAaT,SAAS,GAC7BM,GAAQ,CACR,QAGR,IAAKA,EACD,WAGH,CACD,GAAII,GAAQL,CACZ,IAAkB,UAAdF,EAAK7C,MAAoBoD,EAAQ,IAAMvB,MAAMC,QAAQe,EAAKH,WAAaU,GAASP,EAAKH,SAASzJ,OAC9F,MAEJ4J,GAAOA,EAAKH,SAASU,IAG7B,MAAOP,IAKJ,QAASQ,GAAaR,GACzB,GAAkB,UAAdA,EAAK7C,KACL,MAAO6C,GAAKH,SAASY,IAAID,EAExB,IAAkB,WAAdR,EAAK7C,KAAmB,CAE7B,IAAK,GADDuD,GAAMjD,OAAOkD,OAAO,MACfzK,EAAK,EAAGkK,EAAKJ,EAAKH,SAAU3J,EAAKkK,EAAGhK,OAAQF,IAAM,CACvD,GAAI0K,GAAOR,EAAGlK,EACdwK,GAAIE,EAAKf,SAAS,GAAGzH,OAASoI,EAAaI,EAAKf,SAAS,IAE7D,MAAOa,GAEX,MAAOV,GAAK5H,MAKT,QAASuF,GAAM7F,EAAM+I,EAASnG,GAEjC,QAASoG,GAAaC,GAClB,MAAOA,GAAgB,WAAc,MAAOA,GAAcC,EAAS7G,iBAAkB6G,EAAS5G,mBAAuB,WAAc,OAAO,GAE9I,QAAS6G,GAAcF,GACnB,MAAOA,GAAgB,SAAUG,GAAO,MAAOH,GAAcG,EAAKF,EAAS7G,iBAAkB6G,EAAS5G,mBAAuB,WAAc,OAAO,GAKtJ,QAASX,KACL,OAAa,CACT,GAAId,GAAQqI,EAAShH,MACrB,QAAQgH,EAAS3G,iBACb,IAAK,GACD8G,EAAY,GACZ,MACJ,KAAK,GACDA,EAAY,GACZ,MACJ,KAAK,GACDA,EAAY,GACZ,MACJ,KAAK,GACIC,GACDD,EAAY,GAEhB,MACJ,KAAK,GACDA,EAAY,GACZ,MACJ,KAAK,GACDA,EAAY,IAGpB,OAAQxI,GACJ,IAAK,IACL,IAAK,IACGyI,EACAD,EAAY,IAGZE,GAEJ,MACJ,KAAK,IACDF,EAAY,EACZ,MACJ,KAAK,IACL,IAAK,IACD,KACJ,SACI,MAAOxI,KAIvB,QAASwI,GAAY3B,EAAO8B,EAAgBC,GAIxC,OAHuB,KAAnBD,IAA6BA,UACf,KAAdC,IAAwBA,MAC5BhC,EAAQC,GACJ8B,EAAelL,OAASmL,EAAUnL,OAAS,EAE3C,IADA,GAAIuC,GAAQqI,EAAS/G,WACJ,KAAVtB,GAAwB,CAC3B,IAAuC,IAAnC2I,EAAexE,QAAQnE,GAAe,CACtCc,GACA,OAEC,IAAkC,IAA9B8H,EAAUzE,QAAQnE,GACvB,KAEJA,GAAQc,KAIpB,QAAS+H,GAAYC,GACjB,GAAIrJ,GAAQ4I,EAAS9G,eAQrB,OAPIuH,GACAtD,EAAe/F,GAGfyF,EAAiBzF,GAErBqB,KACO,EAEX,QAASiI,KACL,OAAQV,EAAS/G,YACb,IAAK,IACD,GAAI7B,GAAQ,CACZ,KACIA,EAAQuJ,KAAK9C,MAAMmC,EAAS9G,iBACP,iBAAV9B,KACP+I,EAAY,GACZ/I,EAAQ,GAGhB,MAAOoG,GACH2C,EAAY,GAEhBhD,EAAe/F,EACf,MACJ,KAAK,GACD+F,EAAe,KACf,MACJ,KAAK,GACDA,GAAe,EACf,MACJ,KAAK,GACDA,GAAe,EACf,MACJ,SACI,OAAO,EAGf,MADA1E,MACO,EAEX,QAASmI,KACL,MAA4B,MAAxBZ,EAAS/G,YACTkH,EAAY,MAAmC,EAAyB,KACjE,IAEXK,GAAY,GACgB,IAAxBR,EAAS/G,YACToE,EAAY,KACZ5E,IACKoI,KACDV,EAAY,MAA4B,EAAyB,KAIrEA,EAAY,MAA4B,EAAyB,KAE9D,GAEX,QAASW,KACLlE,IACAnE,GAEA,KADA,GAAIsI,IAAa,EACc,IAAxBf,EAAS/G,YAAkE,KAAxB+G,EAAS/G,YAA6B,CAC5F,GAA4B,IAAxB+G,EAAS/G,YAMT,GALK8H,GACDZ,EAAY,SAEhB9C,EAAY,KACZ5E,IAC4B,IAAxBuH,EAAS/G,YAA0C+H,EACnD,UAGCD,IACLZ,EAAY,QAEXS,MACDT,EAAY,MAA4B,EAAyB,IAErEY,GAAa,EASjB,MAPAhE,KAC4B,IAAxBiD,EAAS/G,WACTkH,EAAY,GAA6B,OAGzC1H,KAEG,EAEX,QAASwI,KACLhE,IACAxE,GAEA,KADA,GAAIsI,IAAa,EACc,IAAxBf,EAAS/G,YAAoE,KAAxB+G,EAAS/G,YAA6B,CAC9F,GAA4B,IAAxB+G,EAAS/G,YAMT,GALK8H,GACDZ,EAAY,SAEhB9C,EAAY,KACZ5E,IAC4B,IAAxBuH,EAAS/G,YAA4C+H,EACrD,UAGCD,IACLZ,EAAY,QAEXU,MACDV,EAAY,MAA4B,EAA2B,IAEvEY,GAAa,EASjB,MAPA7D,KAC4B,IAAxB8C,EAAS/G,WACTkH,EAAY,GAA+B,OAG3C1H,KAEG,EAEX,QAASoI,KACL,OAAQb,EAAS/G,YACb,IAAK,GACD,MAAOgI,IACX,KAAK,GACD,MAAOH,IACX,KAAK,IACD,MAAON,IAAY,EACvB,SACI,MAAOE,MA/MnB,GAAIV,GAAW,YAAclJ,GAAM,GAO/B8F,EAAgBkD,EAAaD,EAAQjD,eAAgBC,EAAmBoD,EAAcJ,EAAQhD,kBAAmBE,EAAc+C,EAAaD,EAAQ9C,aAAcE,EAAe6C,EAAaD,EAAQ5C,cAAeC,EAAa4C,EAAaD,EAAQ3C,YAAaC,EAAiB8C,EAAcJ,EAAQ1C,gBAAiBE,EAAc4C,EAAcJ,EAAQxC,aAAcgD,EAAYP,EAAaD,EAAQQ,WAAY9B,EAAU0B,EAAcJ,EAAQtB,SAC3b6B,EAAmB1G,GAAWA,EAAQ0G,iBACtCY,EAAqBtH,GAAWA,EAAQsH,kBA0M5C,OADAvI,KAC4B,KAAxBuH,EAAS/G,aAGR4H,KAIuB,KAAxBb,EAAS/G,YACTkH,EAAY,UAET,IANHA,EAAY,UACL,IAYR,QAASe,GAAcpK,EAAMqK,GAChC,GAAgDC,GAAkB7J,EAA9DyI,EAAW,YAAclJ,GAAOuK,KAAkB3G,EAAS,CAC/D,IAGI,OAFAnD,EAAMyI,EAASjH,cACfqI,EAAOpB,EAAShH,QAEZ,IAAK,IACL,IAAK,IACL,IAAK,IACG0B,IAAWnD,GACX8J,EAAMtM,KAAK+B,EAAKkB,UAAU0C,EAAQnD,QAEpB,KAAd4J,GACAE,EAAMtM,KAAKiL,EAAS9G,gBAAgBoI,QAAQ,WAAYH,IAE5DzG,EAASsF,EAASjH,qBAGZ,KAATqI,EACT,OAAOC,GAAME,KAAK,IAEtB,QAASnE,GAAmBhG,GACxB,aAAeA,IACX,IAAK,UAAW,MAAO,SACvB,KAAK,SAAU,MAAO,QACtB,KAAK,SAAU,MAAO,QACtB,SAAS,MAAO,QAniBxB,wDJoqCMoK,IACA,SAAUhN,EAAQC,EAAqBC,GAE7C,YKjmCA,SAAS+M,GAAuBC,GAC5B,GAAIC,GACAC,EACAC,EAAI,GAAIC,GAAQ,SAAUC,EAAGvE,GAC7BmE,EAAmBI,EACnBH,EAAgBpE,GACjB,aAEH,OADAkE,GAAEM,KAAKL,EAAkBC,GAClBC,EA9EX,+BAKA,IAAIC,GAAUtM,OAAOsM,QAEjBG,EAA+B,WAC/B,QAASA,GAAcrN,GACnB,GAAIsN,GAAQC,IACZA,MAAKC,UAAYxN,EACjBuN,KAAKE,QAAU,KACfF,KAAKG,mBAAqBC,YAAY,WAAc,MAAOL,GAAMM,gBAAmB,KACpFL,KAAKM,cAAgB,EACrBN,KAAKO,sBAAwBP,KAAKC,UAAUO,YAAY,WAAc,MAAOT,GAAMU,gBAqDvF,MAnDAX,GAAcY,UAAUD,YAAc,WAC9BT,KAAKE,UACLF,KAAKE,QAAQS,UACbX,KAAKE,QAAU,MAEnBF,KAAKY,QAAU,MAEnBd,EAAcY,UAAUC,QAAU,WAC9BE,cAAcb,KAAKG,oBACnBH,KAAKO,sBAAsBI,UAC3BX,KAAKS,eAETX,EAAcY,UAAUL,aAAe,WACnC,GAAKL,KAAKE,QAAV,CAG8BY,KAAKC,MAAQf,KAAKM,cA1B/B,MA4BbN,KAAKS,gBAGbX,EAAcY,UAAUM,WAAa,WAejC,MAdAhB,MAAKM,cAAgBQ,KAAKC,MACrBf,KAAKY,UACNZ,KAAKE,QAAU7M,OAAO4N,OAAOC,iBAEzBC,SAAU,8BACVC,MAAOpB,KAAKC,UAAU7M,WAEtBiO,YACIC,iBAAkBtB,KAAKC,UAAUsB,mBACjCnO,WAAY4M,KAAKC,UAAU7M,cAGnC4M,KAAKY,QAAUZ,KAAKE,QAAQsB,YAEzBxB,KAAKY,SAEhBd,EAAcY,UAAUxN,yBAA2B,WAG/C,IAAK,GAFD6M,GAAQC,KACRyB,KACK1O,EAAK,EAAGA,EAAKC,UAAUC,OAAQF,IACpC0O,EAAU1O,GAAMC,UAAUD,EAE9B,IAAI6N,EACJ,OAAOtB,GAAuBU,KAAKgB,aAAanB,KAAK,SAAUlN,GAC3DiO,EAAUjO,IACXkN,KAAK,SAAU6B,GACd,MAAO3B,GAAMG,QAAQyB,oBAAoBF,KAC1C5B,KAAK,SAAU6B,GAAK,MAAOd,OAE3Bd,ML0rCL8B,IACA,SAAUvP,EAAQC,EAAqBC,GAE7C,YMtqCA,SAASsP,GAAWC,GAChB,OAAQA,GACJ,IAAK,KAAsBC,MAAO,MAAO1O,QAAO2O,eAAeD,KAC/D,KAAK,KAAsBE,QAAS,MAAO5O,QAAO2O,eAAeC,OACjE,KAAK,KAAsBC,YAAa,MAAO7O,QAAO2O,eAAeG,IACrE,KAAK,KAAsBC,KAAM,MAAO/O,QAAO2O,eAAeI,IAC9D,SACI,MAAO/O,QAAO2O,eAAeG,MAGzC,QAASE,GAAcC,EAAUC,GAC7B,GAAIhM,GAA4B,iBAAdgM,GAAKhM,KAAoBH,OAAOmM,EAAKhM,MAAQgM,EAAKhM,IACpE,QACIiM,SAAUX,EAAWU,EAAKC,UAC1BC,gBAAiBF,EAAKjL,MAAM3B,MAAM+M,KAAO,EACzCC,YAAaJ,EAAKjL,MAAM3B,MAAMiN,UAAY,EAC1CC,cAAeN,EAAKjL,MAAMxB,IAAI4M,KAAO,EACrCI,UAAWP,EAAKjL,MAAMxB,IAAI8M,UAAY,EACtCG,QAASR,EAAKQ,QACdxM,KAAMA,EACNyM,OAAQT,EAAKS,QAIrB,QAASC,GAAanJ,GAClB,GAAKA,EAGL,OAAS8I,UAAW9I,EAASoJ,OAAS,EAAGR,KAAM5I,EAASqJ,WAAa,GAEzE,QAASC,GAAU9L,GACf,GAAKA,EAGL,OAAS3B,OAAS+M,KAAMpL,EAAMmL,gBAAkB,EAAGG,UAAWtL,EAAMqL,YAAc,GAAK7M,KAAO4M,KAAMpL,EAAMuL,cAAgB,EAAGD,UAAWtL,EAAMwL,UAAY,IAE9J,QAASO,GAAQ/L,GACb,GAAKA,EAGL,MAAO,IAAIgM,GAAMhM,EAAM3B,MAAM+M,KAAO,EAAGpL,EAAM3B,MAAMiN,UAAY,EAAGtL,EAAMxB,IAAI4M,KAAO,EAAGpL,EAAMxB,IAAI8M,UAAY,GAEhH,QAASW,GAAqBtE,GAC1B,GAAIuE,GAAYnQ,OAAOC,UAAUmQ,kBACjC,QAAQxE,GACJ,IAAK,KAAsByE,KAAM,MAAOF,GAAUE,IAClD,KAAK,KAAsBC,OAAQ,MAAOH,GAAUG,MACpD,KAAK,KAAsBC,SAAU,MAAOJ,GAAUI,QACtD,KAAK,KAAsBC,YAAa,MAAOL,GAAUK,WACzD,KAAK,KAAsBC,MAAO,MAAON,GAAUM,KACnD,KAAK,KAAsBC,SAAU,MAAOP,GAAUO,QACtD,KAAK,KAAsBC,MAAO,MAAOR,GAAUQ,KACnD,KAAK,KAAsBC,UAAW,MAAOT,GAAUS,SACvD,KAAK,KAAsBC,OAAQ,MAAOV,GAAUU,MACpD,KAAK,KAAsBC,SAAU,MAAOX,GAAUW,QACtD,KAAK,KAAsBC,KAAM,MAAOZ,GAAUY,IAClD,KAAK,KAAsBC,MAAO,MAAOb,GAAUa,KACnD,KAAK,KAAsBC,KAAM,MAAOd,GAAUc,IAClD,KAAK,KAAsBC,QAAS,MAAOf,GAAUe,OACrD,KAAK,KAAsBC,QAAS,MAAOhB,GAAUgB,OACrD,KAAK,KAAsBC,MAAO,MAAOjB,GAAUiB,KACnD,KAAK,KAAsBC,KAAM,MAAOlB,GAAUkB,IAClD,KAAK,KAAsBC,UAAW,MAAOnB,GAAUmB,UAE3D,MAAOnB,GAAUW,SA0BrB,QAASS,GAAWC,GAChB,GAAKA,EAGL,OACIvN,MAAO+L,EAAQwB,EAASvN,OACxB3C,KAAMkQ,EAASC,SA4FvB,QAASC,GAAgBC,GACrB,MAAOA,IAA0B,iBAAVA,IAA4C,iBAAfA,GAAM/F,KAE9D,QAASgG,GAAiBC,GACtB,MAAqB,iBAAVA,IAEHjQ,MAAOiQ,GAGXH,EAAgBG,GACG,cAAfA,EAAMjG,MAEFhK,MAAOiQ,EAAMjQ,MAAMkK,QAAQ,wBAAyB,UAIxDlK,MAAOiQ,EAAMjQ,QAGZA,MAAO,MAAQiQ,EAAMC,SAAW,KAAOD,EAAMjQ,MAAQ,WAElE,QAASmQ,GAAoBC,GACzB,GAAKA,EAGL,MAAIxJ,OAAMC,QAAQuJ,GACPA,EAAS/H,IAAI2H,IAEhBA,EAAiBI,IAyB7B,QAASC,GAAWC,GAChB,OACIC,IAAKC,EAAI/J,MAAM6J,EAASC,KACxBlO,MAAO+L,EAAQkC,EAASjO,QAIhC,QAASoO,GAAazG,GAClB,GAAI0G,GAAQtS,OAAOC,UAAUsS,UAC7B,QAAQ3G,GACJ,IAAK,KAAcyF,KAAM,MAAOiB,GAAM9J,KACtC,KAAK,KAAcqI,OAAQ,MAAOyB,GAAMzB,MACxC,KAAK,KAAc2B,UAAW,MAAOF,GAAME,SAC3C,KAAK,KAAcC,QAAS,MAAOH,GAAMG,OACzC,KAAK,KAAc9B,MAAO,MAAO2B,GAAM3B,KACvC,KAAK,KAAcL,OAAQ,MAAOgC,GAAMhC,MACxC,KAAK,KAAcQ,SAAU,MAAOwB,GAAMxB,QAC1C,KAAK,KAAcL,MAAO,MAAO6B,GAAM7B,KACvC,KAAK,KAAcD,YAAa,MAAO8B,GAAM9B,WAC7C,KAAK,KAAcS,KAAM,MAAOqB,GAAMrB,IACtC,KAAK,KAAcL,UAAW,MAAO0B,GAAM1B,SAC3C,KAAK,KAAcL,SAAU,MAAO+B,GAAM/B,QAC1C,KAAK,KAAcG,SAAU,MAAO4B,GAAM5B,QAC1C,KAAK,KAAcgC,SAAU,MAAOJ,GAAMI,QAC1C,KAAK,KAAc3P,OAAQ,MAAOuP,GAAMvP,MACxC,KAAK,KAAc4P,OAAQ,MAAOL,GAAMK,MACxC,KAAK,KAAcC,QAAS,MAAON,GAAMM,OACzC,KAAK,KAAcpK,MAAO,MAAO8J,GAAM9J,MAE3C,MAAO8J,GAAM/B,SAuBjB,QAASsC,GAAsB3O,GAC3B,OACIwB,QAASxB,EAAQwB,QACjBD,aAAcvB,EAAQuB,cAiF9B,QAASqN,GAAsB3Q,EAAO4Q,GAIlC,MAHIA,GAAQC,QACR7Q,EAAM8Q,wBAAwB,WAAc,MAAOF,GAAQC,WAExDD,EAvdX,6OAMIX,EAAMpS,OAAOoS,IACbnC,EAAQjQ,OAAOiQ,MAEfiD,EAAoC,WACpC,QAASA,GAAmBC,EAAatG,EAASzN,GAC9C,GAAIsN,GAAQC,IACZA,MAAKwG,YAAcA,EACnBxG,KAAKE,QAAUA,EACfF,KAAKyG,gBACLzG,KAAK0G,UAAYpM,OAAOkD,OAAO,KAC/B,IAAImJ,GAAa,SAAUC,GACvB,GAAIC,GAASD,EAAME,WACnB,IAAID,IAAW9G,EAAMyG,YAArB,CAGA,GAAIO,EACJhH,GAAM2G,UAAUE,EAAMpB,IAAIwB,YAAcJ,EAAMK,mBAAmB,WAC7DC,aAAaH,GACbA,EAASI,WAAW,WAAc,MAAOpH,GAAMqH,YAAYR,EAAMpB,IAAKqB,IAAY,OAEtF9G,EAAMqH,YAAYR,EAAMpB,IAAKqB,KAE7BQ,EAAiB,SAAUT,GAC3BvT,OAAO4N,OAAOqG,gBAAgBV,EAAO7G,EAAMyG,eAC3C,IAAIe,GAASX,EAAMpB,IAAIwB,WACnBQ,EAAWzH,EAAM2G,UAAUa,EAC3BC,KACAA,EAAS7G,gBACFZ,GAAM2G,UAAUa,IAG/BvH,MAAKyG,aAAa7T,KAAKS,OAAO4N,OAAOwG,iBAAiBd,IACtD3G,KAAKyG,aAAa7T,KAAKS,OAAO4N,OAAOyG,mBAAmB,SAAUd,GAC9DS,EAAeT,GACf7G,EAAM4H,aAAaf,EAAMpB,QAE7BxF,KAAKyG,aAAa7T,KAAKS,OAAO4N,OAAO2G,yBAAyB,SAAUC,GACpER,EAAeQ,EAAMjB,OACrBD,EAAWkB,EAAMjB,OACjB7G,EAAM4H,aAAaE,EAAMjB,MAAMpB,QAEnCxF,KAAKyG,aAAa7T,KAAKH,EAAS+N,YAAY,SAAUkB,GAClDrO,OAAO4N,OAAO6G,YAAYC,QAAQ,SAAUnB,GACpCA,EAAME,cAAgB/G,EAAMyG,cAC5Ba,EAAeT,GACfD,EAAWC,SAIvB5G,KAAKyG,aAAa7T,MACd+N,QAAS,WACLtN,OAAO4N,OAAO6G,YAAYC,QAAQV,EAClC,KAAK,GAAIW,KAAOjI,GAAM2G,UAClB3G,EAAM2G,UAAUsB,GAAKrH,aAIjCtN,OAAO4N,OAAO6G,YAAYC,QAAQpB,GAwBtC,MAtBAJ,GAAmB7F,UAAUC,QAAU,WACnCX,KAAKyG,aAAasB,QAAQ,SAAUE,GAAK,MAAOA,IAAKA,EAAEtH,YACvDX,KAAKyG,iBAETF,EAAmB7F,UAAUiH,aAAe,SAAUrF,GAClDtC,KAAKE,UAAUL,KAAK,SAAUhN,GAC1BA,EAAOqV,YAAY5F,EAAS0E,eAGpCT,EAAmB7F,UAAU0G,YAAc,SAAU9E,EAAUlP,GAC3D4M,KAAKE,QAAQoC,GAAUzC,KAAK,SAAUhN,GAClC,MAAOA,GAAOsV,aAAa7F,EAAS0E,YAAYnH,KAAK,SAAUuI,GAC3D,GAAIC,GAAUD,EAAY9K,IAAI,SAAU2K,GAAK,MAAO5F,GAAcC,EAAU2F,KACxErB,EAAQvT,OAAO4N,OAAOqH,SAAShG,EAC/BsE,GAAME,cAAgB1T,GACtBC,OAAO4N,OAAOqG,gBAAgBV,EAAOxT,EAAYiV,OAG1DxI,SAAK0I,GAAW,SAAUC,GACzBC,QAAQpM,MAAMmM,MAGfjC,KA+IPmC,EAAmC,WACnC,QAASA,GAAkBxI,GACvBF,KAAKE,QAAUA,EA2CnB,MAzCA5F,QAAOqO,eAAeD,EAAkBhI,UAAW,qBAC/CkI,IAAK,WACD,OAAQ,IAAK,MAEjBC,YAAY,EACZC,cAAc,IAElBJ,EAAkBhI,UAAUqI,uBAAyB,SAAUnC,EAAO9M,EAAUtE,GAC5E,GACI8M,IADWsE,EAAMoC,qBAAqBlP,GAC3B8M,EAAMpB,IACrB,OAAOW,GAAsB3Q,EAAOwK,KAAKE,QAAQoC,GAAUzC,KAAK,SAAUhN,GACtE,MAAOA,GAAOoW,WAAW3G,EAAS0E,WAAY/D,EAAanJ,MAC5D+F,KAAK,SAAUqJ,GACd,GAAKA,EAAL,CAGA,GAAIC,GAAQD,EAAKC,MAAM7L,IAAI,SAAU4H,GACjC,GAAIkE,IACAhI,MAAO8D,EAAM9D,MACbiI,WAAYnE,EAAMmE,WAClBC,SAAUpE,EAAMoE,SAChBC,WAAYrE,EAAMqE,WAClBC,cAAetE,EAAMsE,cACrBC,OAAQvE,EAAMuE,OACdxK,KAAMsE,EAAqB2B,EAAMjG,MASrC,OAPIiG,GAAML,WACNuE,EAAK9R,MAAQ+L,EAAQ6B,EAAML,SAASvN,OACpC8R,EAAKC,WAAanE,EAAML,SAASC,SAEjCI,EAAMwE,mBAAqB,IAAoBlF,UAC/C4E,EAAKC,YAAepU,MAAOmU,EAAKC,aAE7BD,GAEX,QACIO,aAAcT,EAAKS,aACnBR,MAAOA,QAIZT,KAkCPkB,EAA8B,WAC9B,QAASA,GAAa1J,GAClBF,KAAKE,QAAUA,EAgBnB,MAdA0J,GAAalJ,UAAUmJ,aAAe,SAAUjD,EAAO9M,EAAUtE,GAC7D,GAAI8M,GAAWsE,EAAMpB,GACrB,OAAOW,GAAsB3Q,EAAOwK,KAAKE,QAAQoC,GAAUzC,KAAK,SAAUhN,GACtE,MAAOA,GAAOiX,QAAQxH,EAAS0E,WAAY/D,EAAanJ,MACzD+F,KAAK,SAAUqJ,GACd,GAAKA,EAGL,OACI5R,MAAO+L,EAAQ6F,EAAK5R,OACpB+N,SAAUD,EAAoB8D,EAAK7D,eAIxCuE,KAmCPG,EAAuC,WACvC,QAASA,GAAsB7J,GAC3BF,KAAKE,QAAUA,EAgBnB,MAdA6J,GAAsBrJ,UAAUsJ,uBAAyB,SAAUpD,EAAOpR,GACtE,GAAI8M,GAAWsE,EAAMpB,GACrB,OAAOW,GAAsB3Q,EAAOwK,KAAKE,QAAQoC,GAAUzC,KAAK,SAAUhN,GAAU,MAAOA,GAAOoX,oBAAoB3H,EAAS0E,cAAgBnH,KAAK,SAAUsJ,GAC1J,GAAKA,EAGL,MAAOA,GAAM7L,IAAI,SAAU8L,GAAQ,OAC/BzO,KAAMyO,EAAKzO,KACXuP,cAAed,EAAKc,cACpBjL,KAAMyG,EAAa0D,EAAKnK,MACxBsG,SAAUD,EAAW8D,EAAK7D,iBAI/BwE,KASPI,EAAgD,WAChD,QAASA,GAA+BjK,GACpCF,KAAKE,QAAUA,EAanB,MAXAiK,GAA+BzJ,UAAU0J,+BAAiC,SAAUxD,EAAOrP,EAAS/B,GAChG,GAAI8M,GAAWsE,EAAMpB,GACrB,OAAOW,GAAsB3Q,EAAOwK,KAAKE,QAAQoC,GAAUzC,KAAK,SAAUhN,GACtE,MAAOA,GAAOuE,OAAOkL,EAAS0E,WAAY,KAAMd,EAAsB3O,IAAUsI,KAAK,SAAUwK,GAC3F,GAAKA,GAA0B,IAAjBA,EAAMpX,OAGpB,MAAOoX,GAAM/M,IAAIsH,SAItBuF,KAGPG,EAAqD,WACrD,QAASA,GAAoCpK,GACzCF,KAAKE,QAAUA,EAanB,MAXAoK,GAAoC5J,UAAU6J,oCAAsC,SAAU3D,EAAOtP,EAAOC,EAAS/B,GACjH,GAAI8M,GAAWsE,EAAMpB,GACrB,OAAOW,GAAsB3Q,EAAOwK,KAAKE,QAAQoC,GAAUzC,KAAK,SAAUhN,GACtE,MAAOA,GAAOuE,OAAOkL,EAAS0E,WAAY5D,EAAU9L,GAAQ4O,EAAsB3O,IAAUsI,KAAK,SAAUwK,GACvG,GAAKA,GAA0B,IAAjBA,EAAMpX,OAGpB,MAAOoX,GAAM/M,IAAIsH,SAItB0F,KAGPE,EAAsC,WACtC,QAASA,GAAqBtK,GAC1BF,KAAKE,QAAUA,EAkCnB,MAhCAsK,GAAqB9J,UAAU+J,sBAAwB,SAAU7D,EAAOpR,GACpE,GAAI8M,GAAWsE,EAAMpB,GACrB,OAAOW,GAAsB3Q,EAAOwK,KAAKE,QAAQoC,GAAUzC,KAAK,SAAUhN,GAAU,MAAOA,GAAO6X,mBAAmBpI,EAAS0E,cAAgBnH,KAAK,SAAU8K,GACzJ,GAAKA,EAGL,MAAOA,GAAMrN,IAAI,SAAU8L,GAAQ,OAC/BwB,MAAOxB,EAAKwB,MACZtT,MAAO+L,EAAQ+F,EAAK9R,cAIhCkT,EAAqB9J,UAAUmK,0BAA4B,SAAUjE,EAAOsC,EAAM1T,GAC9E,GAAI8M,GAAWsE,EAAMpB,GACrB,OAAOW,GAAsB3Q,EAAOwK,KAAKE,QAAQoC,GAAUzC,KAAK,SAAUhN,GAAU,MAAOA,GAAOiY,sBAAsBxI,EAAS0E,WAAYkC,EAAK0B,MAAOxH,EAAU8F,EAAK5R,UAAYuI,KAAK,SAAUkL,GAC/L,GAAKA,EAGL,MAAOA,GAAczN,IAAI,SAAU0N,GAC/B,GAAI5B,IACAhI,MAAO4J,EAAa5J,MAQxB,OANI4J,GAAanG,WACbuE,EAAKvE,SAAWD,EAAWoG,EAAanG,WAExCmG,EAAaC,sBACb7B,EAAK6B,oBAAsBD,EAAaC,oBAAoB3N,IAAIsH,IAE7DwE,QAIZoB,MNyxCLU,IACA,SAAU7Y,EAAQC,EAAqBC,GAE7C,YOzuDA,gMASO,IAAI4Y,IACX,SAAWA,GAMP,QAAS3N,GAAOkF,EAAME,GAClB,OAASF,KAAMA,EAAME,UAAWA,GAMpC,QAASwI,GAAGnW,GACR,GAAIoW,GAAYpW,CAChB,OAAOqW,GAAGC,QAAQF,IAAcC,EAAGE,OAAOH,EAAU3I,OAAS4I,EAAGE,OAAOH,EAAUzI,WANrFuI,EAAS3N,OAASA,EAQlB2N,EAASC,GAAKA,GACfD,IAAaA,MAKT,IAAI7H,IACX,SAAWA,GACP,QAAS9F,GAAOiO,EAAKC,EAAKC,EAAOC,GAC7B,GAAIN,EAAGE,OAAOC,IAAQH,EAAGE,OAAOE,IAAQJ,EAAGE,OAAOG,IAAUL,EAAGE,OAAOI,GAClE,OAASjW,MAAOwV,EAAS3N,OAAOiO,EAAKC,GAAM5V,IAAKqV,EAAS3N,OAAOmO,EAAOC,GAEtE,IAAIT,EAASC,GAAGK,IAAQN,EAASC,GAAGM,GACrC,OAAS/V,MAAO8V,EAAK3V,IAAK4V,EAG1B,MAAM,IAAI3J,OAAM,8CAAgD0J,EAAM,KAAOC,EAAM,KAAOC,EAAQ,KAAOC,EAAO,KAOxH,QAASR,GAAGnW,GACR,GAAIoW,GAAYpW,CAChB,OAAOqW,GAAGC,QAAQF,IAAcF,EAASC,GAAGC,EAAU1V,QAAUwV,EAASC,GAAGC,EAAUvV,KAN1FwN,EAAM9F,OAASA,EAQf8F,EAAM8H,GAAKA,GACZ9H,IAAUA,MAKN,IAAIuI,IACX,SAAWA,GAMP,QAASrO,GAAOgI,EAAKlO,GACjB,OAASkO,IAAKA,EAAKlO,MAAOA,GAM9B,QAAS8T,GAAGnW,GACR,GAAIoW,GAAYpW,CAChB,OAAOqW,GAAGC,QAAQF,IAAc/H,EAAM8H,GAAGC,EAAU/T,SAAWgU,EAAGQ,OAAOT,EAAU7F,MAAQ8F,EAAG/C,UAAU8C,EAAU7F,MANrHqG,EAASrO,OAASA,EAQlBqO,EAAST,GAAKA,GACfS,IAAaA,MAIT,IAAIE,IACX,SAAWA,GAIPA,EAAmBhK,MAAQ,EAI3BgK,EAAmB9J,QAAU,EAI7B8J,EAAmB7J,YAAc,EAIjC6J,EAAmB3J,KAAO,GAC3B2J,IAAuBA,MAKnB,IAAIC,IACX,SAAWA,GAIP,QAASxO,GAAOlG,EAAOyL,EAASP,EAAUjM,EAAMyM,GAC5C,GAAIhN,IAAWsB,MAAOA,EAAOyL,QAASA,EAUtC,OATIuI,GAAGC,QAAQ/I,KACXxM,EAAOwM,SAAWA,GAElB8I,EAAGC,QAAQhV,KACXP,EAAOO,KAAOA,GAEd+U,EAAGC,QAAQvI,KACXhN,EAAOgN,OAASA,GAEbhN,EAMX,QAASoV,GAAGnW,GACR,GAAIoW,GAAYpW,CAChB,OAAOqW,GAAGC,QAAQF,IACX/H,EAAM8H,GAAGC,EAAU/T,QACnBgU,EAAGQ,OAAOT,EAAUtI,WACnBuI,EAAGE,OAAOH,EAAU7I,WAAa8I,EAAG/C,UAAU8C,EAAU7I,aACxD8I,EAAGE,OAAOH,EAAU9U,OAAS+U,EAAGQ,OAAOT,EAAU9U,OAAS+U,EAAG/C,UAAU8C,EAAU9U,SACjF+U,EAAGQ,OAAOT,EAAUrI,SAAWsI,EAAG/C,UAAU8C,EAAUrI,SAXlEgJ,EAAWxO,OAASA,EAapBwO,EAAWZ,GAAKA,GACjBY,IAAeA,MAKX,IAAIC,IACX,SAAWA,GAIP,QAASzO,GAAO0O,EAAOC,GAEnB,IAAK,GADDC,MACKrZ,EAAK,EAAGA,EAAKC,UAAUC,OAAQF,IACpCqZ,EAAKrZ,EAAK,GAAKC,UAAUD,EAE7B,IAAIiD,IAAWkW,MAAOA,EAAOC,QAASA,EAItC,OAHIb,GAAGC,QAAQa,IAASA,EAAKnZ,OAAS,IAClC+C,EAAOhD,UAAYoZ,GAEhBpW,EAMX,QAASoV,GAAGnW,GACR,GAAIoW,GAAYpW,CAChB,OAAOqW,GAAGC,QAAQF,IAAcC,EAAGQ,OAAOT,EAAUa,QAAUZ,EAAGQ,OAAOT,EAAUa,OANtFD,EAAQzO,OAASA,EAQjByO,EAAQb,GAAKA,GACda,IAAYA,MAKR,IAAII,IACX,SAAWA,GAMP,QAASlN,GAAQ7H,EAAOwN,GACpB,OAASxN,MAAOA,EAAOwN,QAASA,GAQpC,QAASwH,GAAOxS,EAAUgL,GACtB,OAASxN,OAAS3B,MAAOmE,EAAUhE,IAAKgE,GAAYgL,QAASA,GAOjE,QAASyH,GAAIjV,GACT,OAASA,MAAOA,EAAOwN,QAAS,IAfpCuH,EAASlN,QAAUA,EASnBkN,EAASC,OAASA,EAQlBD,EAASE,IAAMA,GAChBF,IAAaA,MAKT,IAAIG,IACX,SAAWA,GAIP,QAAShP,GAAOiP,EAAcpC,GAC1B,OAASoC,aAAcA,EAAcpC,MAAOA,GAGhD,QAASe,GAAGnW,GACR,GAAIoW,GAAYpW,CAChB,OAAOqW,GAAGC,QAAQF,IACXqB,EAAgCtB,GAAGC,EAAUoB,eAC7C5Q,MAAMC,QAAQuP,EAAUhB,OALnCmC,EAAiBhP,OAASA,EAO1BgP,EAAiBpB,GAAKA,GACvBoB,IAAqBA,MACxB,IA4GWG,GA5GPC,EAAoC,WACpC,QAASA,GAAmBvC,GACxBrK,KAAKqK,MAAQA,EAoBjB,MAlBAuC,GAAmBlM,UAAU4L,OAAS,SAAUxS,EAAUgL,GACtD9E,KAAKqK,MAAMzX,KAAKyZ,EAASC,OAAOxS,EAAUgL,KAE9C8H,EAAmBlM,UAAUvB,QAAU,SAAU7H,EAAOwN,GACpD9E,KAAKqK,MAAMzX,KAAKyZ,EAASlN,QAAQ7H,EAAOwN,KAE5C8H,EAAmBlM,UAAUmM,OAAS,SAAUvV,GAC5C0I,KAAKqK,MAAMzX,KAAKyZ,EAASE,IAAIjV,KAEjCsV,EAAmBlM,UAAUoM,IAAM,SAAUC,GACzC/M,KAAKqK,MAAMzX,KAAKma,IAEpBH,EAAmBlM,UAAUsM,IAAM,WAC/B,MAAOhN,MAAKqK,OAEhBuC,EAAmBlM,UAAUuM,MAAQ,WACjCjN,KAAKqK,MAAM6C,OAAO,EAAGlN,KAAKqK,MAAMpX,SAE7B2Z,MAK0B,WACjC,QAASO,GAAgBC,GACrB,GAAIrN,GAAQC,IACZA,MAAKqN,iBAAmB/S,OAAOkD,OAAO,MAClC4P,IACApN,KAAKsN,eAAiBF,EAClBA,EAAcG,gBACdH,EAAcG,gBAAgBxF,QAAQ,SAAUyF,GAC5C,GAAIC,GAAiB,GAAIb,GAAmBY,EAAiBnD,MAC7DtK,GAAMsN,iBAAiBG,EAAiBf,aAAajH,KAAOiI,IAG3DL,EAAcM,SACnBpT,OAAOqT,KAAKP,EAAcM,SAAS3F,QAAQ,SAAUC,GACjD,GAAIyF,GAAiB,GAAIb,GAAmBQ,EAAcM,QAAQ1F,GAClEjI,GAAMsN,iBAAiBrF,GAAOyF,KAK9CnT,OAAOqO,eAAewE,EAAgBzM,UAAW,QAK7CkI,IAAK,WACD,MAAO5I,MAAKsN,gBAEhBzE,YAAY,EACZC,cAAc,IAElBqE,EAAgBzM,UAAUkN,kBAAoB,SAAU5F,GACpD,GAAI0E,EAAgCtB,GAAGpD,GAAM,CAMzC,GALKhI,KAAKsN,iBACNtN,KAAKsN,gBACDC,sBAGHvN,KAAKsN,eAAeC,gBACrB,KAAM,IAAIxL,OAAM,mEAEpB,IAAI0K,GAAezE,EACfhS,EAASgK,KAAKqN,iBAAiBZ,EAAajH,IAChD,KAAKxP,EAAQ,CACT,GAAIqU,MACAmD,GACAf,aAAcA,EACdpC,MAAOA,EAEXrK,MAAKsN,eAAeC,gBAAgB3a,KAAK4a,GACzCxX,EAAS,GAAI4W,GAAmBvC,GAChCrK,KAAKqN,iBAAiBZ,EAAajH,KAAOxP,EAE9C,MAAOA,GAQP,GALKgK,KAAKsN,iBACNtN,KAAKsN,gBACDI,QAASpT,OAAOkD,OAAO,SAG1BwC,KAAKsN,eAAeI,QACrB,KAAM,IAAI3L,OAAM,iEAEpB,IAAI/L,GAASgK,KAAKqN,iBAAiBrF,EACnC,KAAKhS,EAAQ,CACT,GAAIqU,KACJrK,MAAKsN,eAAeI,QAAQ1F,GAAOqC,EACnCrU,EAAS,GAAI4W,GAAmBvC,GAChCrK,KAAKqN,iBAAiBrF,GAAOhS,EAEjC,MAAOA,QAWnB,SAAW2W,GAKP,QAASnP,GAAOgI,GACZ,OAASA,IAAKA,GAMlB,QAAS4F,GAAGnW,GACR,GAAIoW,GAAYpW,CAChB,OAAOqW,GAAGC,QAAQF,IAAcC,EAAGQ,OAAOT,EAAU7F,KANxDmH,EAAuBnP,OAASA,EAQhCmP,EAAuBvB,GAAKA,GAC7BuB,IAA2BA,MAKvB,IAAID,IACX,SAAWA,GAMP,QAASlP,GAAOgI,EAAKqI,GACjB,OAASrI,IAAKA,EAAKqI,QAASA,GAMhC,QAASzC,GAAGnW,GACR,GAAIoW,GAAYpW,CAChB,OAAOqW,GAAGC,QAAQF,IAAcC,EAAGQ,OAAOT,EAAU7F,MAAQ8F,EAAGE,OAAOH,EAAUwC,SANpFnB,EAAgClP,OAASA,EAQzCkP,EAAgCtB,GAAKA,GACtCsB,IAAoCA,MAKhC,IAAIoB,IACX,SAAWA,GAQP,QAAStQ,GAAOgI,EAAKpS,EAAYya,EAASlZ,GACtC,OAAS6Q,IAAKA,EAAKpS,WAAYA,EAAYya,QAASA,EAASlZ,KAAMA,GAMvE,QAASyW,GAAGnW,GACR,GAAIoW,GAAYpW,CAChB,OAAOqW,GAAGC,QAAQF,IAAcC,EAAGQ,OAAOT,EAAU7F,MAAQ8F,EAAGQ,OAAOT,EAAUjY,aAAekY,EAAGE,OAAOH,EAAUwC,UAAYvC,EAAGQ,OAAOT,EAAU1W,MANvJmZ,EAAiBtQ,OAASA,EAQ1BsQ,EAAiB1C,GAAKA,GACvB0C,IAAqBA,MAQjB,IAAIC,IACX,SAAWA,GAIPA,EAAWC,UAAY,YAIvBD,EAAWE,SAAW,YACvBF,IAAeA,MAIX,IAAItK,IACX,SAAWA,GACPA,EAAmBC,KAAO,EAC1BD,EAAmBE,OAAS,EAC5BF,EAAmBG,SAAW,EAC9BH,EAAmBI,YAAc,EACjCJ,EAAmBK,MAAQ,EAC3BL,EAAmBM,SAAW,EAC9BN,EAAmBO,MAAQ,EAC3BP,EAAmBQ,UAAY,EAC/BR,EAAmBS,OAAS,EAC5BT,EAAmBU,SAAW,GAC9BV,EAAmBW,KAAO,GAC1BX,EAAmBY,MAAQ,GAC3BZ,EAAmBa,KAAO,GAC1Bb,EAAmBc,QAAU,GAC7Bd,EAAmBe,QAAU,GAC7Bf,EAAmBgB,MAAQ,GAC3BhB,EAAmBiB,KAAO,GAC1BjB,EAAmBkB,UAAY,GAC/BlB,EAAmByK,OAAS,GAC5BzK,EAAmB0K,WAAa,GAChC1K,EAAmBsC,SAAW,GAC9BtC,EAAmB2K,OAAS,GAC5B3K,EAAmB4K,MAAQ,GAC3B5K,EAAmB6K,SAAW,GAC9B7K,EAAmB8K,cAAgB,IACpC9K,IAAuBA,MAKnB,IAAI+K,IACX,SAAWA,GAIPA,EAAiBR,UAAY,EAW7BQ,EAAiBhK,QAAU,GAC5BgK,IAAqBA,MAKjB,IAAIC,IACX,SAAWA,GAKP,QAASjR,GAAO4D,GACZ,OAASA,MAAOA,GAEpBqN,EAAejR,OAASA,GACzBiR,IAAmBA,MAKf,IAAIC,IACX,SAAWA,GAOP,QAASlR,GAAO2L,EAAOQ,GACnB,OAASR,MAAOA,MAAoBQ,eAAgBA,GAExD+E,EAAelR,OAASA,GACzBkR,IAAmBA,MACf,IAAIC,IACX,SAAWA,GAMP,QAASC,GAAcC,GACnB,MAAOA,GAAU1P,QAAQ,wBAAyB,QAEtDwP,EAAaC,cAAgBA,GAC9BD,IAAiBA,MAKb,IAAIG,IACX,SAAWA,GAOP,QAAStR,GAAO4D,EAAOoI,GACnB,MAAOA,IAAkBpI,MAAOA,EAAOoI,cAAeA,IAAoBpI,MAAOA,GAErF0N,EAAqBtR,OAASA,GAE/BsR,IAAyBA,MAKrB,IAAIC,IACX,SAAWA,GACP,QAASvR,GAAO4D,EAAOoI,GAEnB,IAAK,GADDwF,MACKjc,EAAK,EAAGA,EAAKC,UAAUC,OAAQF,IACpCic,EAAWjc,EAAK,GAAKC,UAAUD,EAEnC,IAAIiD,IAAWoL,MAAOA,EAUtB,OATIkK,GAAGC,QAAQ/B,KACXxT,EAAOwT,cAAgBA,GAEvB8B,EAAGC,QAAQyD,GACXhZ,EAAOgZ,WAAaA,EAGpBhZ,EAAOgZ,cAEJhZ,EAEX+Y,EAAqBvR,OAASA,GAC/BuR,IAAyBA,MAIrB,IAAIE,IACX,SAAWA,GAIPA,EAAsBvL,KAAO,EAI7BuL,EAAsBC,KAAO,EAI7BD,EAAsBE,MAAQ,GAC/BF,IAA0BA,MAKtB,IAAIG,IACX,SAAWA,GAKP,QAAS5R,GAAOlG,EAAO2H,GACnB,GAAIjJ,IAAWsB,MAAOA,EAItB,OAHIgU,GAAGE,OAAOvM,KACVjJ,EAAOiJ,KAAOA,GAEXjJ,EAEXoZ,EAAkB5R,OAASA,GAC5B4R,IAAsBA,MAIlB,IAAIxJ,IACX,SAAWA,GACPA,EAAWlB,KAAO,EAClBkB,EAAW1B,OAAS,EACpB0B,EAAWC,UAAY,EACvBD,EAAWE,QAAU,EACrBF,EAAW5B,MAAQ,EACnB4B,EAAWjC,OAAS,EACpBiC,EAAWzB,SAAW,EACtByB,EAAW9B,MAAQ,EACnB8B,EAAW/B,YAAc,EACzB+B,EAAWtB,KAAO,GAClBsB,EAAW3B,UAAY,GACvB2B,EAAWhC,SAAW,GACtBgC,EAAW7B,SAAW,GACtB6B,EAAWG,SAAW,GACtBH,EAAWxP,OAAS,GACpBwP,EAAWI,OAAS,GACpBJ,EAAWK,QAAU,GACrBL,EAAW/J,MAAQ,GACnB+J,EAAWtL,OAAS,GACpBsL,EAAWyJ,IAAM,GACjBzJ,EAAW0J,KAAO,GAClB1J,EAAWuI,WAAa,GACxBvI,EAAWwI,OAAS,GACpBxI,EAAWyI,MAAQ,GACnBzI,EAAW0I,SAAW,GACtB1I,EAAW2I,cAAgB,IAC5B3I,IAAeA,MACX,IAAI2J,IACX,SAAWA,GAUP,QAAS/R,GAAO7C,EAAMsE,EAAM3H,EAAOkO,EAAK0E,GACpC,GAAIlU,IACA2E,KAAMA,EACNsE,KAAMA,EACNsG,UAAYC,IAAKA,EAAKlO,MAAOA,GAKjC,OAHI4S,KACAlU,EAAOkU,cAAgBA,GAEpBlU,EAEXuZ,EAAkB/R,OAASA,GAC5B+R,IAAsBA,MAKlB,IAAIC,IACX,SAAWA,GAIP,QAAShS,GAAO4K,GACZ,OAASA,YAAaA,GAM1B,QAASgD,GAAGnW,GACR,GAAIoW,GAAYpW,CAChB,OAAOqW,GAAGC,QAAQF,IAAcC,EAAGmE,WAAWpE,EAAUjD,YAAa4D,EAAWZ,IANpFoE,EAAkBhS,OAASA,EAQ3BgS,EAAkBpE,GAAKA,GACxBoE,IAAsBA,MAKlB,IAAIE,IACX,SAAWA,GAIP,QAASlS,GAAOlG,EAAOqY,GACnB,GAAI3Z,IAAWsB,MAAOA,EAGtB,OAFIgU,GAAGC,QAAQoE,KACX3Z,EAAO2Z,KAAOA,GACX3Z,EAMX,QAASoV,GAAGnW,GACR,GAAIoW,GAAYpW,CAChB,OAAOqW,GAAGC,QAAQF,IAAc/H,EAAM8H,GAAGC,EAAU/T,SAAWgU,EAAG/C,UAAU8C,EAAUc,UAAYF,EAAQb,GAAGC,EAAUc,UAN1HuD,EAASlS,OAASA,EAQlBkS,EAAStE,GAAKA,GACfsE,IAAaA,MAKT,IAAIE,IACX,SAAWA,GAIP,QAASpS,GAAOzE,EAASD,GACrB,OAASC,QAASA,EAASD,aAAcA,GAM7C,QAASsS,GAAGnW,GACR,GAAIoW,GAAYpW,CAChB,OAAOqW,GAAGC,QAAQF,IAAcC,EAAGE,OAAOH,EAAUtS,UAAYuS,EAAGuE,QAAQxE,EAAUvS,cANzF8W,EAAkBpS,OAASA,EAQ3BoS,EAAkBxE,GAAKA,GACxBwE,IAAsBA,MAKzB,IAAIE,GAA8B,WAC9B,QAASA,MAET,MAAOA,OAOX,SAAWA,GAIP,QAAStS,GAAOlG,EAAOyY,GACnB,OAASzY,MAAOA,EAAOyY,OAAQA,GAMnC,QAAS3E,GAAGnW,GACR,GAAIoW,GAAYpW,CAChB,OAAOqW,GAAGC,QAAQF,IAAc/H,EAAM8H,GAAGC,EAAU/T,SAAWgU,EAAG/C,UAAU8C,EAAU0E,SAAWzE,EAAGQ,OAAOT,EAAU0E,SANxHD,EAAatS,OAASA,EAQtBsS,EAAa1E,GAAKA,GACnB0E,IAAiBA,MACb,IACIE,IACX,SAAWA,GAOP,QAASxS,GAAOgI,EAAKpS,EAAYya,EAASrV,GACtC,MAAO,IAAIyX,GAAiBzK,EAAKpS,EAAYya,EAASrV,GAM1D,QAAS4S,GAAGnW,GACR,GAAIoW,GAAYpW,CAChB,UAAOqW,EAAGC,QAAQF,IAAcC,EAAGQ,OAAOT,EAAU7F,OAAS8F,EAAG/C,UAAU8C,EAAUjY,aAAekY,EAAGQ,OAAOT,EAAUjY,cAAgBkY,EAAGE,OAAOH,EAAU6E,YACpJ5E,EAAG6E,KAAK9E,EAAU+E,UAAY9E,EAAG6E,KAAK9E,EAAUgF,aAAe/E,EAAG6E,KAAK9E,EAAUiF,WAG5F,QAASC,GAAWC,EAAUnG,GAU1B,IAAK,GATD1V,GAAO6b,EAASJ,UAChBK,EAAcC,EAAUrG,EAAO,SAAUsG,EAAGC,GAE5C,MAAa,KADFD,EAAErZ,MAAM3B,MAAM+M,KAAOkO,EAAEtZ,MAAM3B,MAAM+M,KAEnCiO,EAAErZ,MAAM3B,MAAMiN,UAAYgO,EAAEtZ,MAAM3B,MAAMiN,UAE5C,IAEPiO,EAAqBlc,EAAK1B,OACrBqG,EAAImX,EAAYxd,OAAS,EAAGqG,GAAK,EAAGA,IAAK,CAC9C,GAAI+B,GAAIoV,EAAYnX,GAChBpB,EAAcsY,EAASF,SAASjV,EAAE/D,MAAM3B,OACxCwC,EAAYqY,EAASF,SAASjV,EAAE/D,MAAMxB,IAC1C,MAAIqC,GAAa0Y,GAIb,KAAM,IAAI9O,OAAM,kBAHhBpN,GAAOA,EAAKkB,UAAU,EAAGqC,GAAemD,EAAEyJ,QAAUnQ,EAAKkB,UAAUsC,EAAWxD,EAAK1B,QAKvF4d,EAAqB3Y,EAEzB,MAAOvD,GAGX,QAAS+b,GAAUf,EAAMmB,GACrB,GAAInB,EAAK1c,QAAU,EAEf,MAAO0c,EAEX,IAAIpQ,GAAKoQ,EAAK1c,OAAS,EAAK,EACxB8d,EAAOpB,EAAKqB,MAAM,EAAGzR,GACrB0R,EAAQtB,EAAKqB,MAAMzR,EACvBmR,GAAUK,EAAMD,GAChBJ,EAAUO,EAAOH,EAIjB,KAHA,GAAII,GAAU,EACVC,EAAW,EACX7X,EAAI,EACD4X,EAAUH,EAAK9d,QAAUke,EAAWF,EAAMhe,QAAQ,CACrD,GAAIme,GAAMN,EAAQC,EAAKG,GAAUD,EAAME,GAGnCxB,GAAKrW,KAFL8X,GAAO,EAEKL,EAAKG,KAILD,EAAME,KAG1B,KAAOD,EAAUH,EAAK9d,QAClB0c,EAAKrW,KAAOyX,EAAKG,IAErB,MAAOC,EAAWF,EAAMhe,QACpB0c,EAAKrW,KAAO2X,EAAME,IAEtB,OAAOxB,GAjEXK,EAAaxS,OAASA,EAStBwS,EAAa5E,GAAKA,EAyBlB4E,EAAaO,WAAaA,GAiC3BP,IAAiBA,MAIb,IAAIqB,IACX,SAAWA,GAKPA,EAAuBC,OAAS,EAIhCD,EAAuBE,WAAa,EAIpCF,EAAuBG,SAAW,GACnCH,IAA2BA,MAC9B,IA2GI/F,GA3GA2E,EAAkC,WAClC,QAASA,GAAiBzK,EAAKpS,EAAYya,EAASrV,GAChDwH,KAAKyR,KAAOjM,EACZxF,KAAKwG,YAAcpT,EACnB4M,KAAK0R,SAAW7D,EAChB7N,KAAK2R,SAAWnZ,EAChBwH,KAAK4R,aAAe,KAmGxB,MAjGAtX,QAAOqO,eAAesH,EAAiBvP,UAAW,OAC9CkI,IAAK,WACD,MAAO5I,MAAKyR,MAEhB5I,YAAY,EACZC,cAAc,IAElBxO,OAAOqO,eAAesH,EAAiBvP,UAAW,cAC9CkI,IAAK,WACD,MAAO5I,MAAKwG,aAEhBqC,YAAY,EACZC,cAAc,IAElBxO,OAAOqO,eAAesH,EAAiBvP,UAAW,WAC9CkI,IAAK,WACD,MAAO5I,MAAK0R,UAEhB7I,YAAY,EACZC,cAAc,IAElBmH,EAAiBvP,UAAU0P,QAAU,SAAU9Y,GAC3C,GAAIA,EAAO,CACP,GAAI3B,GAAQqK,KAAKsQ,SAAShZ,EAAM3B,OAC5BG,EAAMkK,KAAKsQ,SAAShZ,EAAMxB,IAC9B,OAAOkK,MAAK2R,SAAS9b,UAAUF,EAAOG,GAE1C,MAAOkK,MAAK2R,UAEhB1B,EAAiBvP,UAAUmR,OAAS,SAAUhK,EAAOgG,GACjD7N,KAAK2R,SAAW9J,EAAMlT,KACtBqL,KAAK0R,SAAW7D,EAChB7N,KAAK4R,aAAe,MAExB3B,EAAiBvP,UAAUoR,eAAiB,WACxC,GAA0B,OAAtB9R,KAAK4R,aAAuB,CAI5B,IAAK,GAHDG,MACApd,EAAOqL,KAAK2R,SACZK,GAAc,EACT1Y,EAAI,EAAGA,EAAI3E,EAAK1B,OAAQqG,IAAK,CAC9B0Y,IACAD,EAAYnf,KAAK0G,GACjB0Y,GAAc,EAElB,IAAI9c,GAAKP,EAAK6E,OAAOF,EACrB0Y,GAAsB,OAAP9c,GAAsB,OAAPA,EACnB,OAAPA,GAAeoE,EAAI,EAAI3E,EAAK1B,QAAiC,OAAvB0B,EAAK6E,OAAOF,EAAI,IACtDA,IAGJ0Y,GAAerd,EAAK1B,OAAS,GAC7B8e,EAAYnf,KAAK+B,EAAK1B,QAE1B+M,KAAK4R,aAAeG,EAExB,MAAO/R,MAAK4R,cAEhB3B,EAAiBvP,UAAU2P,WAAa,SAAU9X,GAC9CA,EAASkB,KAAKwY,IAAIxY,KAAKyY,IAAI3Z,EAAQyH,KAAK2R,SAAS1e,QAAS,EAC1D,IAAI8e,GAAc/R,KAAK8R,iBACnBK,EAAM,EAAGC,EAAOL,EAAY9e,MAChC,IAAa,IAATmf,EACA,MAAOjH,GAAS3N,OAAO,EAAGjF,EAE9B,MAAO4Z,EAAMC,GAAM,CACf,GAAIC,GAAM5Y,KAAKC,OAAOyY,EAAMC,GAAQ,EAChCL,GAAYM,GAAO9Z,EACnB6Z,EAAOC,EAGPF,EAAME,EAAM,EAKpB,GAAI3P,GAAOyP,EAAM,CACjB,OAAOhH,GAAS3N,OAAOkF,EAAMnK,EAASwZ,EAAYrP,KAEtDuN,EAAiBvP,UAAU4P,SAAW,SAAUxW,GAC5C,GAAIiY,GAAc/R,KAAK8R,gBACvB,IAAIhY,EAAS4I,MAAQqP,EAAY9e,OAC7B,MAAO+M,MAAK2R,SAAS1e,MAEpB,IAAI6G,EAAS4I,KAAO,EACrB,MAAO,EAEX,IAAI4P,GAAaP,EAAYjY,EAAS4I,MAClC6P,EAAkBzY,EAAS4I,KAAO,EAAIqP,EAAY9e,OAAU8e,EAAYjY,EAAS4I,KAAO,GAAK1C,KAAK2R,SAAS1e,MAC/G,OAAOwG,MAAKwY,IAAIxY,KAAKyY,IAAII,EAAaxY,EAAS8I,UAAW2P,GAAiBD,IAE/EhY,OAAOqO,eAAesH,EAAiBvP,UAAW,aAC9CkI,IAAK,WACD,MAAO5I,MAAK8R,iBAAiB7e,QAEjC4V,YAAY,EACZC,cAAc,IAEXmH,MAGX,SAAW3E,GAEP,QAASC,GAAQtW,GACb,MAAwB,oBAAVA,GAGlB,QAASsT,GAAUtT,GACf,MAAwB,oBAAVA,GAGlB,QAAS4a,GAAQ5a,GACb,OAAiB,IAAVA,IAA4B,IAAVA,EAG7B,QAAS6W,GAAO7W,GACZ,MAAgC,oBAAzB+R,EAASwL,KAAKvd,GAGzB,QAASuW,GAAOvW,GACZ,MAAgC,oBAAzB+R,EAASwL,KAAKvd,GAGzB,QAASkb,GAAKlb,GACV,MAAgC,sBAAzB+R,EAASwL,KAAKvd,GAGzB,QAASwa,GAAWxa,EAAOwd,GACvB,MAAO5W,OAAMC,QAAQ7G,IAAUA,EAAMyd,MAAMD,GA1B/C,GAAIzL,GAAW1M,OAAOoG,UAAUsG,QAIhCsE,GAAGC,QAAUA,EAIbD,EAAG/C,UAAYA,EAIf+C,EAAGuE,QAAUA,EAIbvE,EAAGQ,OAASA,EAIZR,EAAGE,OAASA,EAIZF,EAAG6E,KAAOA,EAIV7E,EAAGmE,WAAaA,GACjBnE,IAAOA,QP8wDJqH,IACA,SAAUtgB,EAAQC,EAAqBC,GAE7C,YQvuFO,SAASqgB,GAA0BC,GACtC,OACIC,gBAAiB,WAAc,MAAO,IAAIC,GAAU,KAAM,MAAM,IAChEC,SAAU,SAAUtQ,EAAMuQ,EAAOC,EAAaC,GAAgB,MAAOH,GAASH,EAAiBnQ,EAAMuQ,EAAOC,EAAaC,KAyCjI,QAASH,GAAS/e,EAAUyO,EAAMuQ,EAAOC,EAAaC,OAC9B,KAAhBD,IAA0BA,EAAc,EAE5C,IAAIE,GAA6B,EAAGC,GAAe,CACnD,QAAQJ,EAAMxd,WACV,IAAK,GACDiN,EAAO,IAAMA,EACb0Q,EAA6B,CAC7B,MACJ,KAAK,GACD1Q,EAAO,KAAOA,EACd0Q,EAA6B,EAGrC,GAAwCnU,GAAMmS,EAA1CtZ,EAAU,IAAmB4K,GAAkB4Q,EAAeL,EAAMK,YAKxE,KAJAlC,GACImC,UACAC,SAAUP,EAAMQ,WAEP,CACT,GAAIlb,GAAS2a,EAAcpb,EAAQlB,cAAeoD,EAAO,EAEzD,IAAa,MADbiF,EAAOnH,EAAQjB,QAEX,KAGJ,IAAI0B,IAAW2a,EAAcpb,EAAQlB,cACjC,KAAM,IAAImL,OAAM,mDAAqDW,EAAKgR,OAAO5b,EAAQlB,cAAe,GAS5G,QALIyc,IACA9a,GAAU6a,GAEdC,EAAeD,EAA6B,EAEpCnU,GACJ,IAAK,GAIL,IAAK,GACDjF,EAAO2Z,EACPL,GAAe,CACf,MACJ,KAAK,GAIL,IAAK,GACDtZ,EAAO4Z,EACPN,GAAe,CACf,MACJ,KAAK,GACDtZ,EAAO6Z,EACPP,GAAe,CACf,MACJ,KAAK,GACDtZ,EAAO8Z,EACPR,GAAe,CACf,MACJ,KAAK,GACL,IAAK,GACDtZ,EAAO+Z,EACPT,GAAe,CACf,MACJ,KAAK,GACDtZ,EAAOga,EACPV,GAAe,CACf,MACJ,KAAK,IACDtZ,EAAOsZ,EAAeW,EAAqBC,EAC3CZ,GAAe,CACf,MACJ,KAAK,IACDtZ,EAAOma,EACPb,GAAe,EAIvB,GAAIrf,EACA,OAAQgL,GACJ,IAAK,IACDjF,EAAOoa,CACP,MACJ,KAAK,IACDpa,EAAOqa,EAInBjD,EAAIoC,SAAW,GAAIT,GAAUE,EAAMqB,eAAgBxc,EAAQZ,gBAAiBoc,GAC5ElC,EAAImC,OAAO3gB,MACP2hB,WAAYhc,EACZic,OAAQxa,IAGhB,MAAOoX,GAlJX,mBAYWuC,EAAqB,yBACrBC,EAAoB,uBACpBC,EAAoB,uBACpBC,EAAoB,uBACpBC,EAAsB,eACtBC,EAAmB,eACnBC,EAAqB,oBACrBE,EAAqB,cACrBD,EAAsB,kBACtBG,EAAsB,qBACtBD,EAAqB,oBAC5BrB,EAA2B,WAC3B,QAASA,GAAUE,EAAOxd,EAAW6d,GACjCtT,KAAKyU,OAASxB,EACdjT,KAAKvK,UAAYA,EACjBuK,KAAKsT,aAAeA,EAqBxB,MAnBAP,GAAUrS,UAAU+S,MAAQ,WACxB,MAAO,IAAIV,GAAU/S,KAAKyU,OAAQzU,KAAKvK,UAAWuK,KAAKsT,eAE3DP,EAAUrS,UAAUgU,OAAS,SAAUC,GACnC,MAAIA,KAAU3U,SAGT2U,GAAWA,YAAiB5B,MAG1B/S,KAAKvK,YAAckf,EAAMlf,WAC5BuK,KAAKsT,eAAiBqB,EAAMrB,eAEpCP,EAAUrS,UAAU4T,aAAe,WAC/B,MAAOtU,MAAKyU,QAEhB1B,EAAUrS,UAAUkU,aAAe,SAAU3B,GACzCjT,KAAKyU,OAASxB,GAEXF,MRm2FL8B,IACA,SAAUxiB,EAAQC,EAAqBC,GAE7C,YSt5FA,uEAaWmC,EAAgB,GAIF,KAKN,IAII,IAIS,IAIN,IAIP,IAMQ,KTq9FrBogB,IACA,SAAUziB,EAAQC,EAAqBC,GAE7C,YU1/FO,SAASwiB,GAAYpgB,EAAM2G,EAAMrG,EAAO+f,EAAmBC,GAK9D,IAJA,GAAItZ,MACAiB,EAAO,YAAUjI,EAAMgH,GACvBa,MAAS,GACT0Y,MAAc,GACX5Z,EAAKrI,OAAS,IACjBiiB,EAAc5Z,EAAKT,UAEJ,MADf2B,EAAS,YAAmBI,EAAMtB,SACC,KAAVrG,IACM,iBAAhBigB,IACEjY,KAASA,EAAGiY,GAAejgB,EAApCA,EAA2CgI,GAG3ChI,GAASA,EAOrB,IAAKuH,EAOA,IAAoB,WAAhBA,EAAOxC,MAA4C,iBAAhBkb,IAA4BrZ,MAAMC,QAAQU,EAAOE,UAAW,CACpG,GAAIyY,GAAW,YAAmB3Y,GAAS0Y,GAC3C,QAAiB,KAAbC,EAAqB,CACrB,OAAc,KAAVlgB,EAAkB,CAClB,IAAKkgB,EAAS3Y,OACV,KAAM,IAAIuF,OAAM,gBAEpB,IAAIqT,GAAgB5Y,EAAOE,SAAS/C,QAAQwb,EAAS3Y,QACjD6Y,MAAc,GACdC,EAAYH,EAAS3Y,OAAOjE,OAAS4c,EAAS3Y,OAAOvJ,MACzD,IAAImiB,EAAgB,EAAG,CAEnB,GAAIG,GAAW/Y,EAAOE,SAAS0Y,EAAgB,EAC/CC,GAAcE,EAAShd,OAASgd,EAAStiB,WAIzC,IADAoiB,EAAc7Y,EAAOjE,OAAS,EAC1BiE,EAAOE,SAASzJ,OAAS,EAAG,CAE5B,GAAIuiB,GAAOhZ,EAAOE,SAAS,EAC3B4Y,GAAYE,EAAKjd,OAGzB,MAAOkd,GAAe9gB,GAAQ4D,OAAQ8c,EAAapiB,OAAQqiB,EAAYD,EAAa7c,QAAS,IAAMwc,GAInG,MAAOS,GAAe9gB,GAAQ4D,OAAQ4c,EAAS5c,OAAQtF,OAAQkiB,EAASliB,OAAQuF,QAASgG,KAAKkX,UAAUzgB,IAAU+f,GAItH,OAAc,KAAV/f,EACA,QAEJ,IAAI0gB,GAAcnX,KAAKkX,UAAUR,GAAe,KAAO1W,KAAKkX,UAAUzgB,GAClEmI,EAAQ6X,EAAoBA,EAAkBzY,EAAOE,SAASY,IAAI,SAAUiC,GAAK,MAAOA,GAAE7C,SAAS,GAAGzH,SAAauH,EAAOE,SAASzJ,OACnI8Z,MAAO,EACX,IAAI3P,EAAQ,EAAG,CACX,GAAImY,GAAW/Y,EAAOE,SAASU,EAAQ,EACvC2P,IAASxU,OAAQgd,EAAShd,OAASgd,EAAStiB,OAAQA,OAAQ,EAAGuF,QAAS,IAAMmd,OAG9E5I,GADgC,IAA3BvQ,EAAOE,SAASzJ,QACZsF,OAAQiE,EAAOjE,OAAS,EAAGtF,OAAQ,EAAGuF,QAASmd,IAG/Cpd,OAAQiE,EAAOjE,OAAS,EAAGtF,OAAQ,EAAGuF,QAASmd,EAAc,IAE1E,OAAOF,GAAe9gB,EAAMoY,EAAMiI,GAGrC,GAAoB,UAAhBxY,EAAOxC,MAA2C,iBAAhBkb,IAA4BrZ,MAAMC,QAAQU,EAAOE,UAAW,CAEnG,IAAqB,IADHwY,EACM,CAEpB,GAAIS,GAAc,GAAKnX,KAAKkX,UAAUzgB,GAClC8X,MAAO,EACX,IAA+B,IAA3BvQ,EAAOE,SAASzJ,OAChB8Z,GAASxU,OAAQiE,EAAOjE,OAAS,EAAGtF,OAAQ,EAAGuF,QAASmd,OAEvD,CACD,GAAIJ,GAAW/Y,EAAOE,SAASF,EAAOE,SAASzJ,OAAS,EACxD8Z,IAASxU,OAAQgd,EAAShd,OAASgd,EAAStiB,OAAQA,OAAQ,EAAGuF,QAAS,IAAMmd,GAElF,MAAOF,GAAe9gB,EAAMoY,EAAMiI,GAGlC,OAAc,KAAV/f,GAAoBuH,EAAOE,SAASzJ,QAAU,EAAG,CAEjD,GAAI2iB,GAAeV,EACfW,EAAWrZ,EAAOE,SAASkZ,GAC3B7I,MAAO,EACX,IAA+B,IAA3BvQ,EAAOE,SAASzJ,OAEhB8Z,GAASxU,OAAQiE,EAAOjE,OAAS,EAAGtF,OAAQuJ,EAAOvJ,OAAS,EAAGuF,QAAS,QAEvE,IAAIgE,EAAOE,SAASzJ,OAAS,IAAM2iB,EAAc,CAElD,GAAIL,GAAW/Y,EAAOE,SAASkZ,EAAe,GAC1Crd,EAASgd,EAAShd,OAASgd,EAAStiB,OACpC6iB,EAAkBtZ,EAAOjE,OAASiE,EAAOvJ,MAC7C8Z,IAASxU,OAAQA,EAAQtF,OAAQ6iB,EAAkB,EAAIvd,EAAQC,QAAS,QAGxEuU,IAASxU,OAAQsd,EAAStd,OAAQtF,OAAQuJ,EAAOE,SAASkZ,EAAe,GAAGrd,OAASsd,EAAStd,OAAQC,QAAS,GAEnH,OAAOid,GAAe9gB,EAAMoY,EAAMiI,GAGlC,KAAM,IAAIjT,OAAM,wCAKxB,KAAM,IAAIA,OAAM,gBAAyC,iBAAhBmT,GAA2B,QAAU,YAAc,sBAAwB1Y,EAAOxC,MAlG3H,OAAc,KAAV/E,EACA,KAAM,IAAI8M,OAAM,mCAEpB,OAAO0T,GAAe9gB,GAAQ4D,OAAQqE,EAAOA,EAAKrE,OAAS,EAAGtF,OAAQ2J,EAAOA,EAAK3J,OAAS,EAAGuF,QAASgG,KAAKkX,UAAUzgB,IAAU+f,EAiGpI,IAAI/X,GAER,QAASwY,GAAe9gB,EAAMoY,EAAMiI,GAEhC,GAAIlQ,GAAUiR,EAAUphB,EAAMoY,GAE1BiJ,EAAQjJ,EAAKxU,OACbzC,EAAMiX,EAAKxU,OAASwU,EAAKvU,QAAQvF,MACrC,IAAoB,IAAhB8Z,EAAK9Z,QAAwC,IAAxB8Z,EAAKvU,QAAQvF,OAAc,CAChD,KAAO+iB,EAAQ,IAAM,YAAMlR,EAASkR,EAAQ,IACxCA,GAEJ,MAAOlgB,EAAMgP,EAAQ7R,SAAW,YAAM6R,EAAShP,IAC3CA,IAKR,IAAK,GAFDuU,GAAQ,YAAOvF,GAAWvM,OAAQyd,EAAO/iB,OAAQ6C,EAAMkgB,GAAShB,GAE3D1b,EAAI+Q,EAAMpX,OAAS,EAAGqG,GAAK,EAAGA,IAAK,CACxC,GAAI2c,GAAS5L,EAAM/Q,EACnBwL,GAAUiR,EAAUjR,EAASmR,GAC7BD,EAAQvc,KAAKyY,IAAI8D,EAAOC,EAAO1d,QAC/BzC,EAAM2D,KAAKwY,IAAInc,EAAKmgB,EAAO1d,OAAS0d,EAAOhjB,QAC3C6C,GAAOmgB,EAAOzd,QAAQvF,OAASgjB,EAAOhjB,OAI1C,QAAUsF,OAAQyd,EAAO/iB,OADR0B,EAAK1B,QAAU6R,EAAQ7R,OAAS6C,GAAOkgB,EACXxd,QAASsM,EAAQjP,UAAUmgB,EAAOlgB,KAE5E,QAASigB,GAAUphB,EAAMoY,GAC5B,MAAOpY,GAAKkB,UAAU,EAAGkX,EAAKxU,QAAUwU,EAAKvU,QAAU7D,EAAKkB,UAAUkX,EAAKxU,OAASwU,EAAK9Z,QAlK7F","file":"static/js/2.12d4252e.chunk.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ 627:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (immutable) */ __webpack_exports__[\"setupMode\"] = setupMode;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__workerManager_js__ = __webpack_require__(852);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__ = __webpack_require__(853);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__tokenization_js__ = __webpack_require__(855);\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\nfunction setupMode(defaults) {\n    var disposables = [];\n    var client = new __WEBPACK_IMPORTED_MODULE_0__workerManager_js__[\"a\" /* WorkerManager */](defaults);\n    disposables.push(client);\n    var worker = function () {\n        var uris = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            uris[_i] = arguments[_i];\n        }\n        return client.getLanguageServiceWorker.apply(client, uris);\n    };\n    var languageId = defaults.languageId;\n    disposables.push(monaco.languages.registerCompletionItemProvider(languageId, new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"a\" /* CompletionAdapter */](worker)));\n    disposables.push(monaco.languages.registerHoverProvider(languageId, new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"g\" /* HoverAdapter */](worker)));\n    disposables.push(monaco.languages.registerDocumentSymbolProvider(languageId, new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"f\" /* DocumentSymbolAdapter */](worker)));\n    disposables.push(monaco.languages.registerDocumentFormattingEditProvider(languageId, new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"d\" /* DocumentFormattingEditProvider */](worker)));\n    disposables.push(monaco.languages.registerDocumentRangeFormattingEditProvider(languageId, new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"e\" /* DocumentRangeFormattingEditProvider */](worker)));\n    disposables.push(new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"b\" /* DiagnosticsAdapter */](languageId, worker, defaults));\n    disposables.push(monaco.languages.setTokensProvider(languageId, Object(__WEBPACK_IMPORTED_MODULE_2__tokenization_js__[\"a\" /* createTokenizationSupport */])(true)));\n    disposables.push(monaco.languages.setLanguageConfiguration(languageId, richEditConfiguration));\n    disposables.push(monaco.languages.registerColorProvider(languageId, new __WEBPACK_IMPORTED_MODULE_1__languageFeatures_js__[\"c\" /* DocumentColorAdapter */](worker)));\n}\nvar richEditConfiguration = {\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\[\\{\\]\\}\\:\\\"\\,\\s]+)/g,\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/']\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}', notIn: ['string'] },\n        { open: '[', close: ']', notIn: ['string'] },\n        { open: '\"', close: '\"', notIn: ['string'] }\n    ]\n};\n\n\n/***/ }),\n\n/***/ 708:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createScanner;\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nfunction createScanner(text, ignoreTrivia) {\n    if (ignoreTrivia === void 0) { ignoreTrivia = false; }\n    var pos = 0, len = text.length, value = '', tokenOffset = 0, token = 16 /* Unknown */, scanError = 0 /* None */;\n    function scanHexDigits(count, exact) {\n        var digits = 0;\n        var value = 0;\n        while (digits < count || !exact) {\n            var ch = text.charCodeAt(pos);\n            if (ch >= 48 /* _0 */ && ch <= 57 /* _9 */) {\n                value = value * 16 + ch - 48 /* _0 */;\n            }\n            else if (ch >= 65 /* A */ && ch <= 70 /* F */) {\n                value = value * 16 + ch - 65 /* A */ + 10;\n            }\n            else if (ch >= 97 /* a */ && ch <= 102 /* f */) {\n                value = value * 16 + ch - 97 /* a */ + 10;\n            }\n            else {\n                break;\n            }\n            pos++;\n            digits++;\n        }\n        if (digits < count) {\n            value = -1;\n        }\n        return value;\n    }\n    function setPosition(newPosition) {\n        pos = newPosition;\n        value = '';\n        tokenOffset = 0;\n        token = 16 /* Unknown */;\n        scanError = 0 /* None */;\n    }\n    function scanNumber() {\n        var start = pos;\n        if (text.charCodeAt(pos) === 48 /* _0 */) {\n            pos++;\n        }\n        else {\n            pos++;\n            while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n            }\n        }\n        if (pos < text.length && text.charCodeAt(pos) === 46 /* dot */) {\n            pos++;\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n            }\n            else {\n                scanError = 3 /* UnexpectedEndOfNumber */;\n                return text.substring(start, pos);\n            }\n        }\n        var end = pos;\n        if (pos < text.length && (text.charCodeAt(pos) === 69 /* E */ || text.charCodeAt(pos) === 101 /* e */)) {\n            pos++;\n            if (pos < text.length && text.charCodeAt(pos) === 43 /* plus */ || text.charCodeAt(pos) === 45 /* minus */) {\n                pos++;\n            }\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n                end = pos;\n            }\n            else {\n                scanError = 3 /* UnexpectedEndOfNumber */;\n            }\n        }\n        return text.substring(start, end);\n    }\n    function scanString() {\n        var result = '', start = pos;\n        while (true) {\n            if (pos >= len) {\n                result += text.substring(start, pos);\n                scanError = 2 /* UnexpectedEndOfString */;\n                break;\n            }\n            var ch = text.charCodeAt(pos);\n            if (ch === 34 /* doubleQuote */) {\n                result += text.substring(start, pos);\n                pos++;\n                break;\n            }\n            if (ch === 92 /* backslash */) {\n                result += text.substring(start, pos);\n                pos++;\n                if (pos >= len) {\n                    scanError = 2 /* UnexpectedEndOfString */;\n                    break;\n                }\n                ch = text.charCodeAt(pos++);\n                switch (ch) {\n                    case 34 /* doubleQuote */:\n                        result += '\\\"';\n                        break;\n                    case 92 /* backslash */:\n                        result += '\\\\';\n                        break;\n                    case 47 /* slash */:\n                        result += '/';\n                        break;\n                    case 98 /* b */:\n                        result += '\\b';\n                        break;\n                    case 102 /* f */:\n                        result += '\\f';\n                        break;\n                    case 110 /* n */:\n                        result += '\\n';\n                        break;\n                    case 114 /* r */:\n                        result += '\\r';\n                        break;\n                    case 116 /* t */:\n                        result += '\\t';\n                        break;\n                    case 117 /* u */:\n                        var ch_1 = scanHexDigits(4, true);\n                        if (ch_1 >= 0) {\n                            result += String.fromCharCode(ch_1);\n                        }\n                        else {\n                            scanError = 4 /* InvalidUnicode */;\n                        }\n                        break;\n                    default:\n                        scanError = 5 /* InvalidEscapeCharacter */;\n                }\n                start = pos;\n                continue;\n            }\n            if (ch >= 0 && ch <= 0x1f) {\n                if (isLineBreak(ch)) {\n                    result += text.substring(start, pos);\n                    scanError = 2 /* UnexpectedEndOfString */;\n                    break;\n                }\n                else {\n                    scanError = 6 /* InvalidCharacter */;\n                    // mark as error but continue with string\n                }\n            }\n            pos++;\n        }\n        return result;\n    }\n    function scanNext() {\n        value = '';\n        scanError = 0 /* None */;\n        tokenOffset = pos;\n        if (pos >= len) {\n            // at the end\n            tokenOffset = len;\n            return token = 17 /* EOF */;\n        }\n        var code = text.charCodeAt(pos);\n        // trivia: whitespace\n        if (isWhiteSpace(code)) {\n            do {\n                pos++;\n                value += String.fromCharCode(code);\n                code = text.charCodeAt(pos);\n            } while (isWhiteSpace(code));\n            return token = 15 /* Trivia */;\n        }\n        // trivia: newlines\n        if (isLineBreak(code)) {\n            pos++;\n            value += String.fromCharCode(code);\n            if (code === 13 /* carriageReturn */ && text.charCodeAt(pos) === 10 /* lineFeed */) {\n                pos++;\n                value += '\\n';\n            }\n            return token = 14 /* LineBreakTrivia */;\n        }\n        switch (code) {\n            // tokens: []{}:,\n            case 123 /* openBrace */:\n                pos++;\n                return token = 1 /* OpenBraceToken */;\n            case 125 /* closeBrace */:\n                pos++;\n                return token = 2 /* CloseBraceToken */;\n            case 91 /* openBracket */:\n                pos++;\n                return token = 3 /* OpenBracketToken */;\n            case 93 /* closeBracket */:\n                pos++;\n                return token = 4 /* CloseBracketToken */;\n            case 58 /* colon */:\n                pos++;\n                return token = 6 /* ColonToken */;\n            case 44 /* comma */:\n                pos++;\n                return token = 5 /* CommaToken */;\n            // strings\n            case 34 /* doubleQuote */:\n                pos++;\n                value = scanString();\n                return token = 10 /* StringLiteral */;\n            // comments\n            case 47 /* slash */:\n                var start = pos - 1;\n                // Single-line comment\n                if (text.charCodeAt(pos + 1) === 47 /* slash */) {\n                    pos += 2;\n                    while (pos < len) {\n                        if (isLineBreak(text.charCodeAt(pos))) {\n                            break;\n                        }\n                        pos++;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 12 /* LineCommentTrivia */;\n                }\n                // Multi-line comment\n                if (text.charCodeAt(pos + 1) === 42 /* asterisk */) {\n                    pos += 2;\n                    var commentClosed = false;\n                    while (pos < len) {\n                        var ch = text.charCodeAt(pos);\n                        if (ch === 42 /* asterisk */ && (pos + 1 < len) && text.charCodeAt(pos + 1) === 47 /* slash */) {\n                            pos += 2;\n                            commentClosed = true;\n                            break;\n                        }\n                        pos++;\n                    }\n                    if (!commentClosed) {\n                        pos++;\n                        scanError = 1 /* UnexpectedEndOfComment */;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 13 /* BlockCommentTrivia */;\n                }\n                // just a single slash\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* Unknown */;\n            // numbers\n            case 45 /* minus */:\n                value += String.fromCharCode(code);\n                pos++;\n                if (pos === len || !isDigit(text.charCodeAt(pos))) {\n                    return token = 16 /* Unknown */;\n                }\n            // found a minus, followed by a number so\n            // we fall through to proceed with scanning\n            // numbers\n            case 48 /* _0 */:\n            case 49 /* _1 */:\n            case 50 /* _2 */:\n            case 51 /* _3 */:\n            case 52 /* _4 */:\n            case 53 /* _5 */:\n            case 54 /* _6 */:\n            case 55 /* _7 */:\n            case 56 /* _8 */:\n            case 57 /* _9 */:\n                value += scanNumber();\n                return token = 11 /* NumericLiteral */;\n            // literals and unknown symbols\n            default:\n                // is a literal? Read the full word.\n                while (pos < len && isUnknownContentCharacter(code)) {\n                    pos++;\n                    code = text.charCodeAt(pos);\n                }\n                if (tokenOffset !== pos) {\n                    value = text.substring(tokenOffset, pos);\n                    // keywords: true, false, null\n                    switch (value) {\n                        case 'true': return token = 8 /* TrueKeyword */;\n                        case 'false': return token = 9 /* FalseKeyword */;\n                        case 'null': return token = 7 /* NullKeyword */;\n                    }\n                    return token = 16 /* Unknown */;\n                }\n                // some\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* Unknown */;\n        }\n    }\n    function isUnknownContentCharacter(code) {\n        if (isWhiteSpace(code) || isLineBreak(code)) {\n            return false;\n        }\n        switch (code) {\n            case 125 /* closeBrace */:\n            case 93 /* closeBracket */:\n            case 123 /* openBrace */:\n            case 91 /* openBracket */:\n            case 34 /* doubleQuote */:\n            case 58 /* colon */:\n            case 44 /* comma */:\n                return false;\n        }\n        return true;\n    }\n    function scanNextNonTrivia() {\n        var result;\n        do {\n            result = scanNext();\n        } while (result >= 12 /* LineCommentTrivia */ && result <= 15 /* Trivia */);\n        return result;\n    }\n    return {\n        setPosition: setPosition,\n        getPosition: function () { return pos; },\n        scan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n        getToken: function () { return token; },\n        getTokenValue: function () { return value; },\n        getTokenOffset: function () { return tokenOffset; },\n        getTokenLength: function () { return pos - tokenOffset; },\n        getTokenError: function () { return scanError; }\n    };\n}\nfunction isWhiteSpace(ch) {\n    return ch === 32 /* space */ || ch === 9 /* tab */ || ch === 11 /* verticalTab */ || ch === 12 /* formFeed */ ||\n        ch === 160 /* nonBreakingSpace */ || ch === 5760 /* ogham */ || ch >= 8192 /* enQuad */ && ch <= 8203 /* zeroWidthSpace */ ||\n        ch === 8239 /* narrowNoBreakSpace */ || ch === 8287 /* mathematicalSpace */ || ch === 12288 /* ideographicSpace */ || ch === 65279 /* byteOrderMark */;\n}\nfunction isLineBreak(ch) {\n    return ch === 10 /* lineFeed */ || ch === 13 /* carriageReturn */ || ch === 8232 /* lineSeparator */ || ch === 8233 /* paragraphSeparator */;\n}\nfunction isDigit(ch) {\n    return ch >= 48 /* _0 */ && ch <= 57 /* _9 */;\n}\n//# sourceMappingURL=scanner.js.map\n\n/***/ }),\n\n/***/ 750:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = format;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = isEOL;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__scanner_js__ = __webpack_require__(708);\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nfunction format(documentText, range, options) {\n    var initialIndentLevel;\n    var formatText;\n    var formatTextStart;\n    var rangeStart;\n    var rangeEnd;\n    if (range) {\n        rangeStart = range.offset;\n        rangeEnd = rangeStart + range.length;\n        formatTextStart = rangeStart;\n        while (formatTextStart > 0 && !isEOL(documentText, formatTextStart - 1)) {\n            formatTextStart--;\n        }\n        var endOffset = rangeEnd;\n        while (endOffset < documentText.length && !isEOL(documentText, endOffset)) {\n            endOffset++;\n        }\n        formatText = documentText.substring(formatTextStart, endOffset);\n        initialIndentLevel = computeIndentLevel(formatText, 0, options);\n    }\n    else {\n        formatText = documentText;\n        initialIndentLevel = 0;\n        formatTextStart = 0;\n        rangeStart = 0;\n        rangeEnd = documentText.length;\n    }\n    var eol = getEOL(options, documentText);\n    var lineBreak = false;\n    var indentLevel = 0;\n    var indentValue;\n    if (options.insertSpaces) {\n        indentValue = repeat(' ', options.tabSize || 4);\n    }\n    else {\n        indentValue = '\\t';\n    }\n    var scanner = Object(__WEBPACK_IMPORTED_MODULE_0__scanner_js__[\"a\" /* createScanner */])(formatText, false);\n    var hasError = false;\n    function newLineAndIndent() {\n        return eol + repeat(indentValue, initialIndentLevel + indentLevel);\n    }\n    function scanNext() {\n        var token = scanner.scan();\n        lineBreak = false;\n        while (token === 15 /* Trivia */ || token === 14 /* LineBreakTrivia */) {\n            lineBreak = lineBreak || (token === 14 /* LineBreakTrivia */);\n            token = scanner.scan();\n        }\n        hasError = token === 16 /* Unknown */ || scanner.getTokenError() !== 0 /* None */;\n        return token;\n    }\n    var editOperations = [];\n    function addEdit(text, startOffset, endOffset) {\n        if (!hasError && startOffset < rangeEnd && endOffset > rangeStart && documentText.substring(startOffset, endOffset) !== text) {\n            editOperations.push({ offset: startOffset, length: endOffset - startOffset, content: text });\n        }\n    }\n    var firstToken = scanNext();\n    if (firstToken !== 17 /* EOF */) {\n        var firstTokenStart = scanner.getTokenOffset() + formatTextStart;\n        var initialIndent = repeat(indentValue, initialIndentLevel);\n        addEdit(initialIndent, formatTextStart, firstTokenStart);\n    }\n    while (firstToken !== 17 /* EOF */) {\n        var firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n        var secondToken = scanNext();\n        var replaceContent = '';\n        while (!lineBreak && (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */)) {\n            // comments on the same line: keep them on the same line, but ignore them otherwise\n            var commentTokenStart = scanner.getTokenOffset() + formatTextStart;\n            addEdit(' ', firstTokenEnd, commentTokenStart);\n            firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n            replaceContent = secondToken === 12 /* LineCommentTrivia */ ? newLineAndIndent() : '';\n            secondToken = scanNext();\n        }\n        if (secondToken === 2 /* CloseBraceToken */) {\n            if (firstToken !== 1 /* OpenBraceToken */) {\n                indentLevel--;\n                replaceContent = newLineAndIndent();\n            }\n        }\n        else if (secondToken === 4 /* CloseBracketToken */) {\n            if (firstToken !== 3 /* OpenBracketToken */) {\n                indentLevel--;\n                replaceContent = newLineAndIndent();\n            }\n        }\n        else {\n            switch (firstToken) {\n                case 3 /* OpenBracketToken */:\n                case 1 /* OpenBraceToken */:\n                    indentLevel++;\n                    replaceContent = newLineAndIndent();\n                    break;\n                case 5 /* CommaToken */:\n                case 12 /* LineCommentTrivia */:\n                    replaceContent = newLineAndIndent();\n                    break;\n                case 13 /* BlockCommentTrivia */:\n                    if (lineBreak) {\n                        replaceContent = newLineAndIndent();\n                    }\n                    else {\n                        // symbol following comment on the same line: keep on same line, separate with ' '\n                        replaceContent = ' ';\n                    }\n                    break;\n                case 6 /* ColonToken */:\n                    replaceContent = ' ';\n                    break;\n                case 10 /* StringLiteral */:\n                    if (secondToken === 6 /* ColonToken */) {\n                        replaceContent = '';\n                        break;\n                    }\n                // fall through\n                case 7 /* NullKeyword */:\n                case 8 /* TrueKeyword */:\n                case 9 /* FalseKeyword */:\n                case 11 /* NumericLiteral */:\n                case 2 /* CloseBraceToken */:\n                case 4 /* CloseBracketToken */:\n                    if (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */) {\n                        replaceContent = ' ';\n                    }\n                    else if (secondToken !== 5 /* CommaToken */ && secondToken !== 17 /* EOF */) {\n                        hasError = true;\n                    }\n                    break;\n                case 16 /* Unknown */:\n                    hasError = true;\n                    break;\n            }\n            if (lineBreak && (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */)) {\n                replaceContent = newLineAndIndent();\n            }\n        }\n        var secondTokenStart = scanner.getTokenOffset() + formatTextStart;\n        addEdit(replaceContent, firstTokenEnd, secondTokenStart);\n        firstToken = secondToken;\n    }\n    return editOperations;\n}\nfunction repeat(s, count) {\n    var result = '';\n    for (var i = 0; i < count; i++) {\n        result += s;\n    }\n    return result;\n}\nfunction computeIndentLevel(content, offset, options) {\n    var i = 0;\n    var nChars = 0;\n    var tabSize = options.tabSize || 4;\n    while (i < content.length) {\n        var ch = content.charAt(i);\n        if (ch === ' ') {\n            nChars++;\n        }\n        else if (ch === '\\t') {\n            nChars += tabSize;\n        }\n        else {\n            break;\n        }\n        i++;\n    }\n    return Math.floor(nChars / tabSize);\n}\nfunction getEOL(options, text) {\n    for (var i = 0; i < text.length; i++) {\n        var ch = text.charAt(i);\n        if (ch === '\\r') {\n            if (i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                return '\\r\\n';\n            }\n            return '\\r';\n        }\n        else if (ch === '\\n') {\n            return '\\n';\n        }\n    }\n    return (options && options.eol) || '\\n';\n}\nfunction isEOL(text, offset) {\n    return '\\r\\n'.indexOf(text.charAt(offset)) !== -1;\n}\n//# sourceMappingURL=format.js.map\n\n/***/ }),\n\n/***/ 751:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = getLocation;\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = parse;\n/* harmony export (immutable) */ __webpack_exports__[\"e\"] = parseTree;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = findNodeAtLocation;\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = getNodeValue;\n/* harmony export (immutable) */ __webpack_exports__[\"g\"] = visit;\n/* harmony export (immutable) */ __webpack_exports__[\"f\"] = stripComments;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__scanner_js__ = __webpack_require__(708);\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nfunction getLocation(text, position) {\n    var segments = []; // strings or numbers\n    var earlyReturnException = new Object();\n    var previousNode = void 0;\n    var previousNodeInst = {\n        value: {},\n        offset: 0,\n        length: 0,\n        type: 'object'\n    };\n    var isAtPropertyKey = false;\n    function setPreviousNode(value, offset, length, type) {\n        previousNodeInst.value = value;\n        previousNodeInst.offset = offset;\n        previousNodeInst.length = length;\n        previousNodeInst.type = type;\n        previousNodeInst.columnOffset = void 0;\n        previousNode = previousNodeInst;\n    }\n    try {\n        visit(text, {\n            onObjectBegin: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                isAtPropertyKey = position > offset;\n                segments.push(''); // push a placeholder (will be replaced)\n            },\n            onObjectProperty: function (name, offset, length) {\n                if (position < offset) {\n                    throw earlyReturnException;\n                }\n                setPreviousNode(name, offset, length, 'property');\n                segments[segments.length - 1] = name;\n                if (position <= offset + length) {\n                    throw earlyReturnException;\n                }\n            },\n            onObjectEnd: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                segments.pop();\n            },\n            onArrayBegin: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                segments.push(0);\n            },\n            onArrayEnd: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                segments.pop();\n            },\n            onLiteralValue: function (value, offset, length) {\n                if (position < offset) {\n                    throw earlyReturnException;\n                }\n                setPreviousNode(value, offset, length, getLiteralNodeType(value));\n                if (position <= offset + length) {\n                    throw earlyReturnException;\n                }\n            },\n            onSeparator: function (sep, offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                if (sep === ':' && previousNode && previousNode.type === 'property') {\n                    previousNode.columnOffset = offset;\n                    isAtPropertyKey = false;\n                    previousNode = void 0;\n                }\n                else if (sep === ',') {\n                    var last = segments[segments.length - 1];\n                    if (typeof last === 'number') {\n                        segments[segments.length - 1] = last + 1;\n                    }\n                    else {\n                        isAtPropertyKey = true;\n                        segments[segments.length - 1] = '';\n                    }\n                    previousNode = void 0;\n                }\n            }\n        });\n    }\n    catch (e) {\n        if (e !== earlyReturnException) {\n            throw e;\n        }\n    }\n    return {\n        path: segments,\n        previousNode: previousNode,\n        isAtPropertyKey: isAtPropertyKey,\n        matches: function (pattern) {\n            var k = 0;\n            for (var i = 0; k < pattern.length && i < segments.length; i++) {\n                if (pattern[k] === segments[i] || pattern[k] === '*') {\n                    k++;\n                }\n                else if (pattern[k] !== '**') {\n                    return false;\n                }\n            }\n            return k === pattern.length;\n        }\n    };\n}\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nfunction parse(text, errors, options) {\n    if (errors === void 0) { errors = []; }\n    var currentProperty = null;\n    var currentParent = [];\n    var previousParents = [];\n    function onValue(value) {\n        if (Array.isArray(currentParent)) {\n            currentParent.push(value);\n        }\n        else if (currentProperty) {\n            currentParent[currentProperty] = value;\n        }\n    }\n    var visitor = {\n        onObjectBegin: function () {\n            var object = {};\n            onValue(object);\n            previousParents.push(currentParent);\n            currentParent = object;\n            currentProperty = null;\n        },\n        onObjectProperty: function (name) {\n            currentProperty = name;\n        },\n        onObjectEnd: function () {\n            currentParent = previousParents.pop();\n        },\n        onArrayBegin: function () {\n            var array = [];\n            onValue(array);\n            previousParents.push(currentParent);\n            currentParent = array;\n            currentProperty = null;\n        },\n        onArrayEnd: function () {\n            currentParent = previousParents.pop();\n        },\n        onLiteralValue: onValue,\n        onError: function (error, offset, length) {\n            errors.push({ error: error, offset: offset, length: length });\n        }\n    };\n    visit(text, visitor, options);\n    return currentParent[0];\n}\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nfunction parseTree(text, errors, options) {\n    if (errors === void 0) { errors = []; }\n    var currentParent = { type: 'array', offset: -1, length: -1, children: [] }; // artificial root\n    function ensurePropertyComplete(endOffset) {\n        if (currentParent.type === 'property') {\n            currentParent.length = endOffset - currentParent.offset;\n            currentParent = currentParent.parent;\n        }\n    }\n    function onValue(valueNode) {\n        currentParent.children.push(valueNode);\n        return valueNode;\n    }\n    var visitor = {\n        onObjectBegin: function (offset) {\n            currentParent = onValue({ type: 'object', offset: offset, length: -1, parent: currentParent, children: [] });\n        },\n        onObjectProperty: function (name, offset, length) {\n            currentParent = onValue({ type: 'property', offset: offset, length: -1, parent: currentParent, children: [] });\n            currentParent.children.push({ type: 'string', value: name, offset: offset, length: length, parent: currentParent });\n        },\n        onObjectEnd: function (offset, length) {\n            currentParent.length = offset + length - currentParent.offset;\n            currentParent = currentParent.parent;\n            ensurePropertyComplete(offset + length);\n        },\n        onArrayBegin: function (offset, length) {\n            currentParent = onValue({ type: 'array', offset: offset, length: -1, parent: currentParent, children: [] });\n        },\n        onArrayEnd: function (offset, length) {\n            currentParent.length = offset + length - currentParent.offset;\n            currentParent = currentParent.parent;\n            ensurePropertyComplete(offset + length);\n        },\n        onLiteralValue: function (value, offset, length) {\n            onValue({ type: getLiteralNodeType(value), offset: offset, length: length, parent: currentParent, value: value });\n            ensurePropertyComplete(offset + length);\n        },\n        onSeparator: function (sep, offset, length) {\n            if (currentParent.type === 'property') {\n                if (sep === ':') {\n                    currentParent.columnOffset = offset;\n                }\n                else if (sep === ',') {\n                    ensurePropertyComplete(offset);\n                }\n            }\n        },\n        onError: function (error, offset, length) {\n            errors.push({ error: error, offset: offset, length: length });\n        }\n    };\n    visit(text, visitor, options);\n    var result = currentParent.children[0];\n    if (result) {\n        delete result.parent;\n    }\n    return result;\n}\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nfunction findNodeAtLocation(root, path) {\n    if (!root) {\n        return void 0;\n    }\n    var node = root;\n    for (var _i = 0, path_1 = path; _i < path_1.length; _i++) {\n        var segment = path_1[_i];\n        if (typeof segment === 'string') {\n            if (node.type !== 'object' || !Array.isArray(node.children)) {\n                return void 0;\n            }\n            var found = false;\n            for (var _a = 0, _b = node.children; _a < _b.length; _a++) {\n                var propertyNode = _b[_a];\n                if (Array.isArray(propertyNode.children) && propertyNode.children[0].value === segment) {\n                    node = propertyNode.children[1];\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) {\n                return void 0;\n            }\n        }\n        else {\n            var index = segment;\n            if (node.type !== 'array' || index < 0 || !Array.isArray(node.children) || index >= node.children.length) {\n                return void 0;\n            }\n            node = node.children[index];\n        }\n    }\n    return node;\n}\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nfunction getNodeValue(node) {\n    if (node.type === 'array') {\n        return node.children.map(getNodeValue);\n    }\n    else if (node.type === 'object') {\n        var obj = Object.create(null);\n        for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n            var prop = _a[_i];\n            obj[prop.children[0].value] = getNodeValue(prop.children[1]);\n        }\n        return obj;\n    }\n    return node.value;\n}\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nfunction visit(text, visitor, options) {\n    var _scanner = Object(__WEBPACK_IMPORTED_MODULE_0__scanner_js__[\"a\" /* createScanner */])(text, false);\n    function toNoArgVisit(visitFunction) {\n        return visitFunction ? function () { return visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength()); } : function () { return true; };\n    }\n    function toOneArgVisit(visitFunction) {\n        return visitFunction ? function (arg) { return visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength()); } : function () { return true; };\n    }\n    var onObjectBegin = toNoArgVisit(visitor.onObjectBegin), onObjectProperty = toOneArgVisit(visitor.onObjectProperty), onObjectEnd = toNoArgVisit(visitor.onObjectEnd), onArrayBegin = toNoArgVisit(visitor.onArrayBegin), onArrayEnd = toNoArgVisit(visitor.onArrayEnd), onLiteralValue = toOneArgVisit(visitor.onLiteralValue), onSeparator = toOneArgVisit(visitor.onSeparator), onComment = toNoArgVisit(visitor.onComment), onError = toOneArgVisit(visitor.onError);\n    var disallowComments = options && options.disallowComments;\n    var allowTrailingComma = options && options.allowTrailingComma;\n    function scanNext() {\n        while (true) {\n            var token = _scanner.scan();\n            switch (_scanner.getTokenError()) {\n                case 4 /* InvalidUnicode */:\n                    handleError(14 /* InvalidUnicode */);\n                    break;\n                case 5 /* InvalidEscapeCharacter */:\n                    handleError(15 /* InvalidEscapeCharacter */);\n                    break;\n                case 3 /* UnexpectedEndOfNumber */:\n                    handleError(13 /* UnexpectedEndOfNumber */);\n                    break;\n                case 1 /* UnexpectedEndOfComment */:\n                    if (!disallowComments) {\n                        handleError(11 /* UnexpectedEndOfComment */);\n                    }\n                    break;\n                case 2 /* UnexpectedEndOfString */:\n                    handleError(12 /* UnexpectedEndOfString */);\n                    break;\n                case 6 /* InvalidCharacter */:\n                    handleError(16 /* InvalidCharacter */);\n                    break;\n            }\n            switch (token) {\n                case 12 /* LineCommentTrivia */:\n                case 13 /* BlockCommentTrivia */:\n                    if (disallowComments) {\n                        handleError(10 /* InvalidCommentToken */);\n                    }\n                    else {\n                        onComment();\n                    }\n                    break;\n                case 16 /* Unknown */:\n                    handleError(1 /* InvalidSymbol */);\n                    break;\n                case 15 /* Trivia */:\n                case 14 /* LineBreakTrivia */:\n                    break;\n                default:\n                    return token;\n            }\n        }\n    }\n    function handleError(error, skipUntilAfter, skipUntil) {\n        if (skipUntilAfter === void 0) { skipUntilAfter = []; }\n        if (skipUntil === void 0) { skipUntil = []; }\n        onError(error);\n        if (skipUntilAfter.length + skipUntil.length > 0) {\n            var token = _scanner.getToken();\n            while (token !== 17 /* EOF */) {\n                if (skipUntilAfter.indexOf(token) !== -1) {\n                    scanNext();\n                    break;\n                }\n                else if (skipUntil.indexOf(token) !== -1) {\n                    break;\n                }\n                token = scanNext();\n            }\n        }\n    }\n    function parseString(isValue) {\n        var value = _scanner.getTokenValue();\n        if (isValue) {\n            onLiteralValue(value);\n        }\n        else {\n            onObjectProperty(value);\n        }\n        scanNext();\n        return true;\n    }\n    function parseLiteral() {\n        switch (_scanner.getToken()) {\n            case 11 /* NumericLiteral */:\n                var value = 0;\n                try {\n                    value = JSON.parse(_scanner.getTokenValue());\n                    if (typeof value !== 'number') {\n                        handleError(2 /* InvalidNumberFormat */);\n                        value = 0;\n                    }\n                }\n                catch (e) {\n                    handleError(2 /* InvalidNumberFormat */);\n                }\n                onLiteralValue(value);\n                break;\n            case 7 /* NullKeyword */:\n                onLiteralValue(null);\n                break;\n            case 8 /* TrueKeyword */:\n                onLiteralValue(true);\n                break;\n            case 9 /* FalseKeyword */:\n                onLiteralValue(false);\n                break;\n            default:\n                return false;\n        }\n        scanNext();\n        return true;\n    }\n    function parseProperty() {\n        if (_scanner.getToken() !== 10 /* StringLiteral */) {\n            handleError(3 /* PropertyNameExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            return false;\n        }\n        parseString(false);\n        if (_scanner.getToken() === 6 /* ColonToken */) {\n            onSeparator(':');\n            scanNext(); // consume colon\n            if (!parseValue()) {\n                handleError(4 /* ValueExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            }\n        }\n        else {\n            handleError(5 /* ColonExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n        }\n        return true;\n    }\n    function parseObject() {\n        onObjectBegin();\n        scanNext(); // consume open brace\n        var needsComma = false;\n        while (_scanner.getToken() !== 2 /* CloseBraceToken */ && _scanner.getToken() !== 17 /* EOF */) {\n            if (_scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    handleError(4 /* ValueExpected */, [], []);\n                }\n                onSeparator(',');\n                scanNext(); // consume comma\n                if (_scanner.getToken() === 2 /* CloseBraceToken */ && allowTrailingComma) {\n                    break;\n                }\n            }\n            else if (needsComma) {\n                handleError(6 /* CommaExpected */, [], []);\n            }\n            if (!parseProperty()) {\n                handleError(4 /* ValueExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            }\n            needsComma = true;\n        }\n        onObjectEnd();\n        if (_scanner.getToken() !== 2 /* CloseBraceToken */) {\n            handleError(7 /* CloseBraceExpected */, [2 /* CloseBraceToken */], []);\n        }\n        else {\n            scanNext(); // consume close brace\n        }\n        return true;\n    }\n    function parseArray() {\n        onArrayBegin();\n        scanNext(); // consume open bracket\n        var needsComma = false;\n        while (_scanner.getToken() !== 4 /* CloseBracketToken */ && _scanner.getToken() !== 17 /* EOF */) {\n            if (_scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    handleError(4 /* ValueExpected */, [], []);\n                }\n                onSeparator(',');\n                scanNext(); // consume comma\n                if (_scanner.getToken() === 4 /* CloseBracketToken */ && allowTrailingComma) {\n                    break;\n                }\n            }\n            else if (needsComma) {\n                handleError(6 /* CommaExpected */, [], []);\n            }\n            if (!parseValue()) {\n                handleError(4 /* ValueExpected */, [], [4 /* CloseBracketToken */, 5 /* CommaToken */]);\n            }\n            needsComma = true;\n        }\n        onArrayEnd();\n        if (_scanner.getToken() !== 4 /* CloseBracketToken */) {\n            handleError(8 /* CloseBracketExpected */, [4 /* CloseBracketToken */], []);\n        }\n        else {\n            scanNext(); // consume close bracket\n        }\n        return true;\n    }\n    function parseValue() {\n        switch (_scanner.getToken()) {\n            case 3 /* OpenBracketToken */:\n                return parseArray();\n            case 1 /* OpenBraceToken */:\n                return parseObject();\n            case 10 /* StringLiteral */:\n                return parseString(true);\n            default:\n                return parseLiteral();\n        }\n    }\n    scanNext();\n    if (_scanner.getToken() === 17 /* EOF */) {\n        return true;\n    }\n    if (!parseValue()) {\n        handleError(4 /* ValueExpected */, [], []);\n        return false;\n    }\n    if (_scanner.getToken() !== 17 /* EOF */) {\n        handleError(9 /* EndOfFileExpected */, [], []);\n    }\n    return true;\n}\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nfunction stripComments(text, replaceCh) {\n    var _scanner = Object(__WEBPACK_IMPORTED_MODULE_0__scanner_js__[\"a\" /* createScanner */])(text), parts = [], kind, offset = 0, pos;\n    do {\n        pos = _scanner.getPosition();\n        kind = _scanner.scan();\n        switch (kind) {\n            case 12 /* LineCommentTrivia */:\n            case 13 /* BlockCommentTrivia */:\n            case 17 /* EOF */:\n                if (offset !== pos) {\n                    parts.push(text.substring(offset, pos));\n                }\n                if (replaceCh !== void 0) {\n                    parts.push(_scanner.getTokenValue().replace(/[^\\r\\n]/g, replaceCh));\n                }\n                offset = _scanner.getPosition();\n                break;\n        }\n    } while (kind !== 17 /* EOF */);\n    return parts.join('');\n}\nfunction getLiteralNodeType(value) {\n    switch (typeof value) {\n        case 'boolean': return 'boolean';\n        case 'number': return 'number';\n        case 'string': return 'string';\n        default: return 'null';\n    }\n}\n//# sourceMappingURL=parser.js.map\n\n/***/ }),\n\n/***/ 852:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return WorkerManager; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar Promise = monaco.Promise;\nvar STOP_WHEN_IDLE_FOR = 2 * 60 * 1000; // 2min\nvar WorkerManager = /** @class */ (function () {\n    function WorkerManager(defaults) {\n        var _this = this;\n        this._defaults = defaults;\n        this._worker = null;\n        this._idleCheckInterval = setInterval(function () { return _this._checkIfIdle(); }, 30 * 1000);\n        this._lastUsedTime = 0;\n        this._configChangeListener = this._defaults.onDidChange(function () { return _this._stopWorker(); });\n    }\n    WorkerManager.prototype._stopWorker = function () {\n        if (this._worker) {\n            this._worker.dispose();\n            this._worker = null;\n        }\n        this._client = null;\n    };\n    WorkerManager.prototype.dispose = function () {\n        clearInterval(this._idleCheckInterval);\n        this._configChangeListener.dispose();\n        this._stopWorker();\n    };\n    WorkerManager.prototype._checkIfIdle = function () {\n        if (!this._worker) {\n            return;\n        }\n        var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\n        if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\n            this._stopWorker();\n        }\n    };\n    WorkerManager.prototype._getClient = function () {\n        this._lastUsedTime = Date.now();\n        if (!this._client) {\n            this._worker = monaco.editor.createWebWorker({\n                // module that exports the create() method and returns a `JSONWorker` instance\n                moduleId: 'vs/language/json/jsonWorker',\n                label: this._defaults.languageId,\n                // passed in to the create() method\n                createData: {\n                    languageSettings: this._defaults.diagnosticsOptions,\n                    languageId: this._defaults.languageId\n                }\n            });\n            this._client = this._worker.getProxy();\n        }\n        return this._client;\n    };\n    WorkerManager.prototype.getLanguageServiceWorker = function () {\n        var _this = this;\n        var resources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            resources[_i] = arguments[_i];\n        }\n        var _client;\n        return toShallowCancelPromise(this._getClient().then(function (client) {\n            _client = client;\n        }).then(function (_) {\n            return _this._worker.withSyncedResources(resources);\n        }).then(function (_) { return _client; }));\n    };\n    return WorkerManager;\n}());\n\nfunction toShallowCancelPromise(p) {\n    var completeCallback;\n    var errorCallback;\n    var r = new Promise(function (c, e) {\n        completeCallback = c;\n        errorCallback = e;\n    }, function () { });\n    p.then(completeCallback, errorCallback);\n    return r;\n}\n\n\n/***/ }),\n\n/***/ 853:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return DiagnosticsAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return CompletionAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return HoverAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return DocumentSymbolAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return DocumentFormattingEditProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return DocumentRangeFormattingEditProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return DocumentColorAdapter; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__ = __webpack_require__(854);\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nvar Uri = monaco.Uri;\nvar Range = monaco.Range;\n// --- diagnostics --- ---\nvar DiagnosticsAdapter = /** @class */ (function () {\n    function DiagnosticsAdapter(_languageId, _worker, defaults) {\n        var _this = this;\n        this._languageId = _languageId;\n        this._worker = _worker;\n        this._disposables = [];\n        this._listener = Object.create(null);\n        var onModelAdd = function (model) {\n            var modeId = model.getModeId();\n            if (modeId !== _this._languageId) {\n                return;\n            }\n            var handle;\n            _this._listener[model.uri.toString()] = model.onDidChangeContent(function () {\n                clearTimeout(handle);\n                handle = setTimeout(function () { return _this._doValidate(model.uri, modeId); }, 500);\n            });\n            _this._doValidate(model.uri, modeId);\n        };\n        var onModelRemoved = function (model) {\n            monaco.editor.setModelMarkers(model, _this._languageId, []);\n            var uriStr = model.uri.toString();\n            var listener = _this._listener[uriStr];\n            if (listener) {\n                listener.dispose();\n                delete _this._listener[uriStr];\n            }\n        };\n        this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\n        this._disposables.push(monaco.editor.onWillDisposeModel(function (model) {\n            onModelRemoved(model);\n            _this._resetSchema(model.uri);\n        }));\n        this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\n            onModelRemoved(event.model);\n            onModelAdd(event.model);\n            _this._resetSchema(event.model.uri);\n        }));\n        this._disposables.push(defaults.onDidChange(function (_) {\n            monaco.editor.getModels().forEach(function (model) {\n                if (model.getModeId() === _this._languageId) {\n                    onModelRemoved(model);\n                    onModelAdd(model);\n                }\n            });\n        }));\n        this._disposables.push({\n            dispose: function () {\n                monaco.editor.getModels().forEach(onModelRemoved);\n                for (var key in _this._listener) {\n                    _this._listener[key].dispose();\n                }\n            }\n        });\n        monaco.editor.getModels().forEach(onModelAdd);\n    }\n    DiagnosticsAdapter.prototype.dispose = function () {\n        this._disposables.forEach(function (d) { return d && d.dispose(); });\n        this._disposables = [];\n    };\n    DiagnosticsAdapter.prototype._resetSchema = function (resource) {\n        this._worker().then(function (worker) {\n            worker.resetSchema(resource.toString());\n        });\n    };\n    DiagnosticsAdapter.prototype._doValidate = function (resource, languageId) {\n        this._worker(resource).then(function (worker) {\n            return worker.doValidation(resource.toString()).then(function (diagnostics) {\n                var markers = diagnostics.map(function (d) { return toDiagnostics(resource, d); });\n                var model = monaco.editor.getModel(resource);\n                if (model.getModeId() === languageId) {\n                    monaco.editor.setModelMarkers(model, languageId, markers);\n                }\n            });\n        }).then(undefined, function (err) {\n            console.error(err);\n        });\n    };\n    return DiagnosticsAdapter;\n}());\n\nfunction toSeverity(lsSeverity) {\n    switch (lsSeverity) {\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* DiagnosticSeverity */].Error: return monaco.MarkerSeverity.Error;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* DiagnosticSeverity */].Warning: return monaco.MarkerSeverity.Warning;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* DiagnosticSeverity */].Information: return monaco.MarkerSeverity.Info;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"b\" /* DiagnosticSeverity */].Hint: return monaco.MarkerSeverity.Hint;\n        default:\n            return monaco.MarkerSeverity.Info;\n    }\n}\nfunction toDiagnostics(resource, diag) {\n    var code = typeof diag.code === 'number' ? String(diag.code) : diag.code;\n    return {\n        severity: toSeverity(diag.severity),\n        startLineNumber: diag.range.start.line + 1,\n        startColumn: diag.range.start.character + 1,\n        endLineNumber: diag.range.end.line + 1,\n        endColumn: diag.range.end.character + 1,\n        message: diag.message,\n        code: code,\n        source: diag.source\n    };\n}\n// --- completion ------\nfunction fromPosition(position) {\n    if (!position) {\n        return void 0;\n    }\n    return { character: position.column - 1, line: position.lineNumber - 1 };\n}\nfunction fromRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return { start: { line: range.startLineNumber - 1, character: range.startColumn - 1 }, end: { line: range.endLineNumber - 1, character: range.endColumn - 1 } };\n}\nfunction toRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return new Range(range.start.line + 1, range.start.character + 1, range.end.line + 1, range.end.character + 1);\n}\nfunction toCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Text: return mItemKind.Text;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Method: return mItemKind.Method;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Function: return mItemKind.Function;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Constructor: return mItemKind.Constructor;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Field: return mItemKind.Field;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Variable: return mItemKind.Variable;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Class: return mItemKind.Class;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Interface: return mItemKind.Interface;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Module: return mItemKind.Module;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Property: return mItemKind.Property;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Unit: return mItemKind.Unit;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Value: return mItemKind.Value;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Enum: return mItemKind.Enum;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Keyword: return mItemKind.Keyword;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Snippet: return mItemKind.Snippet;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Color: return mItemKind.Color;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].File: return mItemKind.File;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Reference: return mItemKind.Reference;\n    }\n    return mItemKind.Property;\n}\nfunction fromCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case mItemKind.Text: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Text;\n        case mItemKind.Method: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Method;\n        case mItemKind.Function: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Function;\n        case mItemKind.Constructor: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Constructor;\n        case mItemKind.Field: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Field;\n        case mItemKind.Variable: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Variable;\n        case mItemKind.Class: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Class;\n        case mItemKind.Interface: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Interface;\n        case mItemKind.Module: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Module;\n        case mItemKind.Property: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Property;\n        case mItemKind.Unit: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Unit;\n        case mItemKind.Value: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Value;\n        case mItemKind.Enum: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Enum;\n        case mItemKind.Keyword: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Keyword;\n        case mItemKind.Snippet: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Snippet;\n        case mItemKind.Color: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Color;\n        case mItemKind.File: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].File;\n        case mItemKind.Reference: return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Reference;\n    }\n    return __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"a\" /* CompletionItemKind */].Property;\n}\nfunction toTextEdit(textEdit) {\n    if (!textEdit) {\n        return void 0;\n    }\n    return {\n        range: toRange(textEdit.range),\n        text: textEdit.newText\n    };\n}\nfunction toCompletionItem(entry) {\n    return {\n        label: entry.label,\n        insertText: entry.insertText,\n        sortText: entry.sortText,\n        filterText: entry.filterText,\n        documentation: entry.documentation,\n        detail: entry.detail,\n        kind: toCompletionItemKind(entry.kind),\n        textEdit: toTextEdit(entry.textEdit),\n        data: entry.data\n    };\n}\nfunction fromMarkdownString(entry) {\n    return {\n        kind: (typeof entry === 'string' ? __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"d\" /* MarkupKind */].PlainText : __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"d\" /* MarkupKind */].Markdown),\n        value: (typeof entry === 'string' ? entry : entry.value)\n    };\n}\nfunction fromCompletionItem(entry) {\n    var item = {\n        label: entry.label,\n        sortText: entry.sortText,\n        filterText: entry.filterText,\n        documentation: fromMarkdownString(entry.documentation),\n        detail: entry.detail,\n        kind: fromCompletionItemKind(entry.kind),\n        data: entry.data\n    };\n    if (typeof entry.insertText === 'object' && typeof entry.insertText.value === 'string') {\n        item.insertText = entry.insertText.value;\n        item.insertTextFormat = __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"c\" /* InsertTextFormat */].Snippet;\n    }\n    else {\n        item.insertText = entry.insertText;\n    }\n    if (entry.range) {\n        item.textEdit = __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"f\" /* TextEdit */].replace(fromRange(entry.range), item.insertText);\n    }\n    return item;\n}\nvar CompletionAdapter = /** @class */ (function () {\n    function CompletionAdapter(_worker) {\n        this._worker = _worker;\n    }\n    Object.defineProperty(CompletionAdapter.prototype, \"triggerCharacters\", {\n        get: function () {\n            return [' ', ':'];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CompletionAdapter.prototype.provideCompletionItems = function (model, position, token) {\n        var wordInfo = model.getWordUntilPosition(position);\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.doComplete(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            var items = info.items.map(function (entry) {\n                var item = {\n                    label: entry.label,\n                    insertText: entry.insertText,\n                    sortText: entry.sortText,\n                    filterText: entry.filterText,\n                    documentation: entry.documentation,\n                    detail: entry.detail,\n                    kind: toCompletionItemKind(entry.kind),\n                };\n                if (entry.textEdit) {\n                    item.range = toRange(entry.textEdit.range);\n                    item.insertText = entry.textEdit.newText;\n                }\n                if (entry.insertTextFormat === __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"c\" /* InsertTextFormat */].Snippet) {\n                    item.insertText = { value: item.insertText };\n                }\n                return item;\n            });\n            return {\n                isIncomplete: info.isIncomplete,\n                items: items\n            };\n        }));\n    };\n    return CompletionAdapter;\n}());\n\nfunction isMarkupContent(thing) {\n    return thing && typeof thing === 'object' && typeof thing.kind === 'string';\n}\nfunction toMarkdownString(entry) {\n    if (typeof entry === 'string') {\n        return {\n            value: entry\n        };\n    }\n    if (isMarkupContent(entry)) {\n        if (entry.kind === 'plaintext') {\n            return {\n                value: entry.value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&')\n            };\n        }\n        return {\n            value: entry.value\n        };\n    }\n    return { value: '```' + entry.language + '\\n' + entry.value + '\\n```\\n' };\n}\nfunction toMarkedStringArray(contents) {\n    if (!contents) {\n        return void 0;\n    }\n    if (Array.isArray(contents)) {\n        return contents.map(toMarkdownString);\n    }\n    return [toMarkdownString(contents)];\n}\n// --- hover ------\nvar HoverAdapter = /** @class */ (function () {\n    function HoverAdapter(_worker) {\n        this._worker = _worker;\n    }\n    HoverAdapter.prototype.provideHover = function (model, position, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.doHover(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            return {\n                range: toRange(info.range),\n                contents: toMarkedStringArray(info.contents)\n            };\n        }));\n    };\n    return HoverAdapter;\n}());\n\n// --- definition ------\nfunction toLocation(location) {\n    return {\n        uri: Uri.parse(location.uri),\n        range: toRange(location.range)\n    };\n}\n// --- document symbols ------\nfunction toSymbolKind(kind) {\n    var mKind = monaco.languages.SymbolKind;\n    switch (kind) {\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"e\" /* SymbolKind */].File: return mKind.Array;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"e\" /* SymbolKind */].Module: return mKind.Module;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"e\" /* SymbolKind */].Namespace: return mKind.Namespace;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"e\" /* SymbolKind */].Package: return mKind.Package;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"e\" /* SymbolKind */].Class: return mKind.Class;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"e\" /* SymbolKind */].Method: return mKind.Method;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"e\" /* SymbolKind */].Property: return mKind.Property;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"e\" /* SymbolKind */].Field: return mKind.Field;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"e\" /* SymbolKind */].Constructor: return mKind.Constructor;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"e\" /* SymbolKind */].Enum: return mKind.Enum;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"e\" /* SymbolKind */].Interface: return mKind.Interface;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"e\" /* SymbolKind */].Function: return mKind.Function;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"e\" /* SymbolKind */].Variable: return mKind.Variable;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"e\" /* SymbolKind */].Constant: return mKind.Constant;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"e\" /* SymbolKind */].String: return mKind.String;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"e\" /* SymbolKind */].Number: return mKind.Number;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"e\" /* SymbolKind */].Boolean: return mKind.Boolean;\n        case __WEBPACK_IMPORTED_MODULE_0__deps_vscode_languageserver_types_main_js__[\"e\" /* SymbolKind */].Array: return mKind.Array;\n    }\n    return mKind.Function;\n}\nvar DocumentSymbolAdapter = /** @class */ (function () {\n    function DocumentSymbolAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentSymbolAdapter.prototype.provideDocumentSymbols = function (model, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.findDocumentSymbols(resource.toString()); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            return items.map(function (item) { return ({\n                name: item.name,\n                containerName: item.containerName,\n                kind: toSymbolKind(item.kind),\n                location: toLocation(item.location)\n            }); });\n        }));\n    };\n    return DocumentSymbolAdapter;\n}());\n\nfunction fromFormattingOptions(options) {\n    return {\n        tabSize: options.tabSize,\n        insertSpaces: options.insertSpaces\n    };\n}\nvar DocumentFormattingEditProvider = /** @class */ (function () {\n    function DocumentFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentFormattingEditProvider.prototype.provideDocumentFormattingEdits = function (model, options, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), null, fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        }));\n    };\n    return DocumentFormattingEditProvider;\n}());\n\nvar DocumentRangeFormattingEditProvider = /** @class */ (function () {\n    function DocumentRangeFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentRangeFormattingEditProvider.prototype.provideDocumentRangeFormattingEdits = function (model, range, options, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), fromRange(range), fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        }));\n    };\n    return DocumentRangeFormattingEditProvider;\n}());\n\nvar DocumentColorAdapter = /** @class */ (function () {\n    function DocumentColorAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentColorAdapter.prototype.provideDocumentColors = function (model, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.findDocumentColors(resource.toString()); }).then(function (infos) {\n            if (!infos) {\n                return;\n            }\n            return infos.map(function (item) { return ({\n                color: item.color,\n                range: toRange(item.range)\n            }); });\n        }));\n    };\n    DocumentColorAdapter.prototype.provideColorPresentations = function (model, info, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.getColorPresentations(resource.toString(), info.color, fromRange(info.range)); }).then(function (presentations) {\n            if (!presentations) {\n                return;\n            }\n            return presentations.map(function (presentation) {\n                var item = {\n                    label: presentation.label,\n                };\n                if (presentation.textEdit) {\n                    item.textEdit = toTextEdit(presentation.textEdit);\n                }\n                if (presentation.additionalTextEdits) {\n                    item.additionalTextEdits = presentation.additionalTextEdits.map(toTextEdit);\n                }\n                return item;\n            });\n        }));\n    };\n    return DocumentColorAdapter;\n}());\n\n/**\n * Hook a cancellation token to a WinJS Promise\n */\nfunction wireCancellationToken(token, promise) {\n    if (promise.cancel) {\n        token.onCancellationRequested(function () { return promise.cancel(); });\n    }\n    return promise;\n}\n\n\n/***/ }),\n\n/***/ 854:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export Position */\n/* unused harmony export Range */\n/* unused harmony export Location */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return DiagnosticSeverity; });\n/* unused harmony export Diagnostic */\n/* unused harmony export Command */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return TextEdit; });\n/* unused harmony export TextDocumentEdit */\n/* unused harmony export WorkspaceChange */\n/* unused harmony export TextDocumentIdentifier */\n/* unused harmony export VersionedTextDocumentIdentifier */\n/* unused harmony export TextDocumentItem */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return MarkupKind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return CompletionItemKind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return InsertTextFormat; });\n/* unused harmony export CompletionItem */\n/* unused harmony export CompletionList */\n/* unused harmony export MarkedString */\n/* unused harmony export ParameterInformation */\n/* unused harmony export SignatureInformation */\n/* unused harmony export DocumentHighlightKind */\n/* unused harmony export DocumentHighlight */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return SymbolKind; });\n/* unused harmony export SymbolInformation */\n/* unused harmony export CodeActionContext */\n/* unused harmony export CodeLens */\n/* unused harmony export FormattingOptions */\n/* unused harmony export DocumentLink */\n/* unused harmony export EOL */\n/* unused harmony export TextDocument */\n/* unused harmony export TextDocumentSaveReason */\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n\n/**\n * The Position namespace provides helper functions to work with\n * [Position](#Position) literals.\n */\nvar Position;\n(function (Position) {\n    /**\n     * Creates a new Position literal from the given line and character.\n     * @param line The position's line.\n     * @param character The position's character.\n     */\n    function create(line, character) {\n        return { line: line, character: character };\n    }\n    Position.create = create;\n    /**\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\n    }\n    Position.is = is;\n})(Position || (Position = {}));\n/**\n * The Range namespace provides helper functions to work with\n * [Range](#Range) literals.\n */\nvar Range;\n(function (Range) {\n    function create(one, two, three, four) {\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\n            return { start: Position.create(one, two), end: Position.create(three, four) };\n        }\n        else if (Position.is(one) && Position.is(two)) {\n            return { start: one, end: two };\n        }\n        else {\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\n        }\n    }\n    Range.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n    }\n    Range.is = is;\n})(Range || (Range = {}));\n/**\n * The Location namespace provides helper functions to work with\n * [Location](#Location) literals.\n */\nvar Location;\n(function (Location) {\n    /**\n     * Creates a Location literal.\n     * @param uri The location's uri.\n     * @param range The location's range.\n     */\n    function create(uri, range) {\n        return { uri: uri, range: range };\n    }\n    Location.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n    }\n    Location.is = is;\n})(Location || (Location = {}));\n/**\n * The diagnostic's serverity.\n */\nvar DiagnosticSeverity;\n(function (DiagnosticSeverity) {\n    /**\n     * Reports an error.\n     */\n    DiagnosticSeverity.Error = 1;\n    /**\n     * Reports a warning.\n     */\n    DiagnosticSeverity.Warning = 2;\n    /**\n     * Reports an information.\n     */\n    DiagnosticSeverity.Information = 3;\n    /**\n     * Reports a hint.\n     */\n    DiagnosticSeverity.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\n/**\n * The Diagnostic namespace provides helper functions to work with\n * [Diagnostic](#Diagnostic) literals.\n */\nvar Diagnostic;\n(function (Diagnostic) {\n    /**\n     * Creates a new Diagnostic literal.\n     */\n    function create(range, message, severity, code, source) {\n        var result = { range: range, message: message };\n        if (Is.defined(severity)) {\n            result.severity = severity;\n        }\n        if (Is.defined(code)) {\n            result.code = code;\n        }\n        if (Is.defined(source)) {\n            result.source = source;\n        }\n        return result;\n    }\n    Diagnostic.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate)\n            && Range.is(candidate.range)\n            && Is.string(candidate.message)\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\n            && (Is.string(candidate.source) || Is.undefined(candidate.source));\n    }\n    Diagnostic.is = is;\n})(Diagnostic || (Diagnostic = {}));\n/**\n * The Command namespace provides helper functions to work with\n * [Command](#Command) literals.\n */\nvar Command;\n(function (Command) {\n    /**\n     * Creates a new Command literal.\n     */\n    function create(title, command) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var result = { title: title, command: command };\n        if (Is.defined(args) && args.length > 0) {\n            result.arguments = args;\n        }\n        return result;\n    }\n    Command.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.title);\n    }\n    Command.is = is;\n})(Command || (Command = {}));\n/**\n * The TextEdit namespace provides helper function to create replace,\n * insert and delete edits more easily.\n */\nvar TextEdit;\n(function (TextEdit) {\n    /**\n     * Creates a replace text edit.\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     */\n    function replace(range, newText) {\n        return { range: range, newText: newText };\n    }\n    TextEdit.replace = replace;\n    /**\n     * Creates a insert text edit.\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     */\n    function insert(position, newText) {\n        return { range: { start: position, end: position }, newText: newText };\n    }\n    TextEdit.insert = insert;\n    /**\n     * Creates a delete text edit.\n     * @param range The range of text to be deleted.\n     */\n    function del(range) {\n        return { range: range, newText: '' };\n    }\n    TextEdit.del = del;\n})(TextEdit || (TextEdit = {}));\n/**\n * The TextDocumentEdit namespace provides helper function to create\n * an edit that manipulates a text document.\n */\nvar TextDocumentEdit;\n(function (TextDocumentEdit) {\n    /**\n     * Creates a new `TextDocumentEdit`\n     */\n    function create(textDocument, edits) {\n        return { textDocument: textDocument, edits: edits };\n    }\n    TextDocumentEdit.create = create;\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate)\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\n            && Array.isArray(candidate.edits);\n    }\n    TextDocumentEdit.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\nvar TextEditChangeImpl = /** @class */ (function () {\n    function TextEditChangeImpl(edits) {\n        this.edits = edits;\n    }\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\n        this.edits.push(TextEdit.insert(position, newText));\n    };\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\n        this.edits.push(TextEdit.replace(range, newText));\n    };\n    TextEditChangeImpl.prototype.delete = function (range) {\n        this.edits.push(TextEdit.del(range));\n    };\n    TextEditChangeImpl.prototype.add = function (edit) {\n        this.edits.push(edit);\n    };\n    TextEditChangeImpl.prototype.all = function () {\n        return this.edits;\n    };\n    TextEditChangeImpl.prototype.clear = function () {\n        this.edits.splice(0, this.edits.length);\n    };\n    return TextEditChangeImpl;\n}());\n/**\n * A workspace change helps constructing changes to a workspace.\n */\nvar WorkspaceChange = /** @class */ (function () {\n    function WorkspaceChange(workspaceEdit) {\n        var _this = this;\n        this._textEditChanges = Object.create(null);\n        if (workspaceEdit) {\n            this._workspaceEdit = workspaceEdit;\n            if (workspaceEdit.documentChanges) {\n                workspaceEdit.documentChanges.forEach(function (textDocumentEdit) {\n                    var textEditChange = new TextEditChangeImpl(textDocumentEdit.edits);\n                    _this._textEditChanges[textDocumentEdit.textDocument.uri] = textEditChange;\n                });\n            }\n            else if (workspaceEdit.changes) {\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\n                    _this._textEditChanges[key] = textEditChange;\n                });\n            }\n        }\n    }\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\n        /**\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\n         * use to be returned from a workspace edit operation like rename.\n         */\n        get: function () {\n            return this._workspaceEdit;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\n        if (VersionedTextDocumentIdentifier.is(key)) {\n            if (!this._workspaceEdit) {\n                this._workspaceEdit = {\n                    documentChanges: []\n                };\n            }\n            if (!this._workspaceEdit.documentChanges) {\n                throw new Error('Workspace edit is not configured for versioned document changes.');\n            }\n            var textDocument = key;\n            var result = this._textEditChanges[textDocument.uri];\n            if (!result) {\n                var edits = [];\n                var textDocumentEdit = {\n                    textDocument: textDocument,\n                    edits: edits\n                };\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[textDocument.uri] = result;\n            }\n            return result;\n        }\n        else {\n            if (!this._workspaceEdit) {\n                this._workspaceEdit = {\n                    changes: Object.create(null)\n                };\n            }\n            if (!this._workspaceEdit.changes) {\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\n            }\n            var result = this._textEditChanges[key];\n            if (!result) {\n                var edits = [];\n                this._workspaceEdit.changes[key] = edits;\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[key] = result;\n            }\n            return result;\n        }\n    };\n    return WorkspaceChange;\n}());\n\n/**\n * The TextDocumentIdentifier namespace provides helper functions to work with\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\n */\nvar TextDocumentIdentifier;\n(function (TextDocumentIdentifier) {\n    /**\n     * Creates a new TextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     */\n    function create(uri) {\n        return { uri: uri };\n    }\n    TextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri);\n    }\n    TextDocumentIdentifier.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\n/**\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\n */\nvar VersionedTextDocumentIdentifier;\n(function (VersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new VersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param uri The document's text.\n     */\n    function create(uri, version) {\n        return { uri: uri, version: version };\n    }\n    VersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.number(candidate.version);\n    }\n    VersionedTextDocumentIdentifier.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\n/**\n * The TextDocumentItem namespace provides helper functions to work with\n * [TextDocumentItem](#TextDocumentItem) literals.\n */\nvar TextDocumentItem;\n(function (TextDocumentItem) {\n    /**\n     * Creates a new TextDocumentItem literal.\n     * @param uri The document's uri.\n     * @param languageId The document's language identifier.\n     * @param version The document's version number.\n     * @param text The document's text.\n     */\n    function create(uri, languageId, version, text) {\n        return { uri: uri, languageId: languageId, version: version, text: text };\n    }\n    TextDocumentItem.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\n    }\n    TextDocumentItem.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\n/**\n * Describes the content type that a client supports in various\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n *\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\n * are reserved for internal usage.\n */\nvar MarkupKind;\n(function (MarkupKind) {\n    /**\n     * Plain text is supported as a content format\n     */\n    MarkupKind.PlainText = 'plaintext';\n    /**\n     * Markdown is supported as a content format\n     */\n    MarkupKind.Markdown = 'markdown';\n})(MarkupKind || (MarkupKind = {}));\n/**\n * The kind of a completion entry.\n */\nvar CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind.Text = 1;\n    CompletionItemKind.Method = 2;\n    CompletionItemKind.Function = 3;\n    CompletionItemKind.Constructor = 4;\n    CompletionItemKind.Field = 5;\n    CompletionItemKind.Variable = 6;\n    CompletionItemKind.Class = 7;\n    CompletionItemKind.Interface = 8;\n    CompletionItemKind.Module = 9;\n    CompletionItemKind.Property = 10;\n    CompletionItemKind.Unit = 11;\n    CompletionItemKind.Value = 12;\n    CompletionItemKind.Enum = 13;\n    CompletionItemKind.Keyword = 14;\n    CompletionItemKind.Snippet = 15;\n    CompletionItemKind.Color = 16;\n    CompletionItemKind.File = 17;\n    CompletionItemKind.Reference = 18;\n    CompletionItemKind.Folder = 19;\n    CompletionItemKind.EnumMember = 20;\n    CompletionItemKind.Constant = 21;\n    CompletionItemKind.Struct = 22;\n    CompletionItemKind.Event = 23;\n    CompletionItemKind.Operator = 24;\n    CompletionItemKind.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\n/**\n * Defines whether the insert text in a completion item should be interpreted as\n * plain text or a snippet.\n */\nvar InsertTextFormat;\n(function (InsertTextFormat) {\n    /**\n     * The primary text to be inserted is treated as a plain string.\n     */\n    InsertTextFormat.PlainText = 1;\n    /**\n     * The primary text to be inserted is treated as a snippet.\n     *\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\n     * the end of the snippet. Placeholders with equal identifiers are linked,\n     * that is typing in one will update others too.\n     *\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\n     */\n    InsertTextFormat.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\n/**\n * The CompletionItem namespace provides functions to deal with\n * completion items.\n */\nvar CompletionItem;\n(function (CompletionItem) {\n    /**\n     * Create a completion item and seed it with a label.\n     * @param label The completion item's label\n     */\n    function create(label) {\n        return { label: label };\n    }\n    CompletionItem.create = create;\n})(CompletionItem || (CompletionItem = {}));\n/**\n * The CompletionList namespace provides functions to deal with\n * completion lists.\n */\nvar CompletionList;\n(function (CompletionList) {\n    /**\n     * Creates a new completion list.\n     *\n     * @param items The completion items.\n     * @param isIncomplete The list is not complete.\n     */\n    function create(items, isIncomplete) {\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\n    }\n    CompletionList.create = create;\n})(CompletionList || (CompletionList = {}));\nvar MarkedString;\n(function (MarkedString) {\n    /**\n     * Creates a marked string from plain text.\n     *\n     * @param plainText The plain text.\n     */\n    function fromPlainText(plainText) {\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    }\n    MarkedString.fromPlainText = fromPlainText;\n})(MarkedString || (MarkedString = {}));\n/**\n * The ParameterInformation namespace provides helper functions to work with\n * [ParameterInformation](#ParameterInformation) literals.\n */\nvar ParameterInformation;\n(function (ParameterInformation) {\n    /**\n     * Creates a new parameter information literal.\n     *\n     * @param label A label string.\n     * @param documentation A doc string.\n     */\n    function create(label, documentation) {\n        return documentation ? { label: label, documentation: documentation } : { label: label };\n    }\n    ParameterInformation.create = create;\n    ;\n})(ParameterInformation || (ParameterInformation = {}));\n/**\n * The SignatureInformation namespace provides helper functions to work with\n * [SignatureInformation](#SignatureInformation) literals.\n */\nvar SignatureInformation;\n(function (SignatureInformation) {\n    function create(label, documentation) {\n        var parameters = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            parameters[_i - 2] = arguments[_i];\n        }\n        var result = { label: label };\n        if (Is.defined(documentation)) {\n            result.documentation = documentation;\n        }\n        if (Is.defined(parameters)) {\n            result.parameters = parameters;\n        }\n        else {\n            result.parameters = [];\n        }\n        return result;\n    }\n    SignatureInformation.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\n/**\n * A document highlight kind.\n */\nvar DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrance.\n     */\n    DocumentHighlightKind.Text = 1;\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind.Read = 2;\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * DocumentHighlight namespace to provide helper functions to work with\n * [DocumentHighlight](#DocumentHighlight) literals.\n */\nvar DocumentHighlight;\n(function (DocumentHighlight) {\n    /**\n     * Create a DocumentHighlight object.\n     * @param range The range the highlight applies to.\n     */\n    function create(range, kind) {\n        var result = { range: range };\n        if (Is.number(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    DocumentHighlight.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\n/**\n * A symbol kind.\n */\nvar SymbolKind;\n(function (SymbolKind) {\n    SymbolKind.File = 1;\n    SymbolKind.Module = 2;\n    SymbolKind.Namespace = 3;\n    SymbolKind.Package = 4;\n    SymbolKind.Class = 5;\n    SymbolKind.Method = 6;\n    SymbolKind.Property = 7;\n    SymbolKind.Field = 8;\n    SymbolKind.Constructor = 9;\n    SymbolKind.Enum = 10;\n    SymbolKind.Interface = 11;\n    SymbolKind.Function = 12;\n    SymbolKind.Variable = 13;\n    SymbolKind.Constant = 14;\n    SymbolKind.String = 15;\n    SymbolKind.Number = 16;\n    SymbolKind.Boolean = 17;\n    SymbolKind.Array = 18;\n    SymbolKind.Object = 19;\n    SymbolKind.Key = 20;\n    SymbolKind.Null = 21;\n    SymbolKind.EnumMember = 22;\n    SymbolKind.Struct = 23;\n    SymbolKind.Event = 24;\n    SymbolKind.Operator = 25;\n    SymbolKind.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\nvar SymbolInformation;\n(function (SymbolInformation) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the location of the symbol.\n     * @param uri The resource of the location of symbol, defaults to the current document.\n     * @param containerName The name of the symbol containg the symbol.\n     */\n    function create(name, kind, range, uri, containerName) {\n        var result = {\n            name: name,\n            kind: kind,\n            location: { uri: uri, range: range }\n        };\n        if (containerName) {\n            result.containerName = containerName;\n        }\n        return result;\n    }\n    SymbolInformation.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\n/**\n * The CodeActionContext namespace provides helper functions to work with\n * [CodeActionContext](#CodeActionContext) literals.\n */\nvar CodeActionContext;\n(function (CodeActionContext) {\n    /**\n     * Creates a new CodeActionContext literal.\n     */\n    function create(diagnostics) {\n        return { diagnostics: diagnostics };\n    }\n    CodeActionContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is);\n    }\n    CodeActionContext.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\n/**\n * The CodeLens namespace provides helper functions to work with\n * [CodeLens](#CodeLens) literals.\n */\nvar CodeLens;\n(function (CodeLens) {\n    /**\n     * Creates a new CodeLens literal.\n     */\n    function create(range, data) {\n        var result = { range: range };\n        if (Is.defined(data))\n            result.data = data;\n        return result;\n    }\n    CodeLens.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n    }\n    CodeLens.is = is;\n})(CodeLens || (CodeLens = {}));\n/**\n * The FormattingOptions namespace provides helper functions to work with\n * [FormattingOptions](#FormattingOptions) literals.\n */\nvar FormattingOptions;\n(function (FormattingOptions) {\n    /**\n     * Creates a new FormattingOptions literal.\n     */\n    function create(tabSize, insertSpaces) {\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\n    }\n    FormattingOptions.create = create;\n    /**\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n    }\n    FormattingOptions.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\n/**\n * A document link is a range in a text document that links to an internal or external resource, like another\n * text document or a web site.\n */\nvar DocumentLink = /** @class */ (function () {\n    function DocumentLink() {\n    }\n    return DocumentLink;\n}());\n\n/**\n * The DocumentLink namespace provides helper functions to work with\n * [DocumentLink](#DocumentLink) literals.\n */\n(function (DocumentLink) {\n    /**\n     * Creates a new DocumentLink literal.\n     */\n    function create(range, target) {\n        return { range: range, target: target };\n    }\n    DocumentLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n    }\n    DocumentLink.is = is;\n})(DocumentLink || (DocumentLink = {}));\nvar EOL = ['\\n', '\\r\\n', '\\r'];\nvar TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new ITextDocument literal from the given uri and content.\n     * @param uri The document's uri.\n     * @param languageId  The document's language Id.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n    }\n    TextDocument.is = is;\n    function applyEdits(document, edits) {\n        var text = document.getText();\n        var sortedEdits = mergeSort(edits, function (a, b) {\n            var diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return 0;\n        });\n        var lastModifiedOffset = text.length;\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\n            var e = sortedEdits[i];\n            var startOffset = document.offsetAt(e.range.start);\n            var endOffset = document.offsetAt(e.range.end);\n            if (endOffset <= lastModifiedOffset) {\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n            }\n            else {\n                throw new Error('Ovelapping edit');\n            }\n            lastModifiedOffset = startOffset;\n        }\n        return text;\n    }\n    TextDocument.applyEdits = applyEdits;\n    function mergeSort(data, compare) {\n        if (data.length <= 1) {\n            // sorted\n            return data;\n        }\n        var p = (data.length / 2) | 0;\n        var left = data.slice(0, p);\n        var right = data.slice(p);\n        mergeSort(left, compare);\n        mergeSort(right, compare);\n        var leftIdx = 0;\n        var rightIdx = 0;\n        var i = 0;\n        while (leftIdx < left.length && rightIdx < right.length) {\n            var ret = compare(left[leftIdx], right[rightIdx]);\n            if (ret <= 0) {\n                // smaller_equal -> take left to preserve order\n                data[i++] = left[leftIdx++];\n            }\n            else {\n                // greater -> take right\n                data[i++] = right[rightIdx++];\n            }\n        }\n        while (leftIdx < left.length) {\n            data[i++] = left[leftIdx++];\n        }\n        while (rightIdx < right.length) {\n            data[i++] = right[rightIdx++];\n        }\n        return data;\n    }\n})(TextDocument || (TextDocument = {}));\n/**\n * Represents reasons why a text document is saved.\n */\nvar TextDocumentSaveReason;\n(function (TextDocumentSaveReason) {\n    /**\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\n     * or by an API call.\n     */\n    TextDocumentSaveReason.Manual = 1;\n    /**\n     * Automatic after a delay.\n     */\n    TextDocumentSaveReason.AfterDelay = 2;\n    /**\n     * When the editor lost focus.\n     */\n    TextDocumentSaveReason.FocusOut = 3;\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\nvar FullTextDocument = /** @class */ (function () {\n    function FullTextDocument(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = null;\n    }\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\n        get: function () {\n            return this._uri;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\n        get: function () {\n            return this._languageId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\n        get: function () {\n            return this._version;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FullTextDocument.prototype.getText = function (range) {\n        if (range) {\n            var start = this.offsetAt(range.start);\n            var end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    };\n    FullTextDocument.prototype.update = function (event, version) {\n        this._content = event.text;\n        this._version = version;\n        this._lineOffsets = null;\n    };\n    FullTextDocument.prototype.getLineOffsets = function () {\n        if (this._lineOffsets === null) {\n            var lineOffsets = [];\n            var text = this._content;\n            var isLineStart = true;\n            for (var i = 0; i < text.length; i++) {\n                if (isLineStart) {\n                    lineOffsets.push(i);\n                    isLineStart = false;\n                }\n                var ch = text.charAt(i);\n                isLineStart = (ch === '\\r' || ch === '\\n');\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                    i++;\n                }\n            }\n            if (isLineStart && text.length > 0) {\n                lineOffsets.push(text.length);\n            }\n            this._lineOffsets = lineOffsets;\n        }\n        return this._lineOffsets;\n    };\n    FullTextDocument.prototype.positionAt = function (offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        var lineOffsets = this.getLineOffsets();\n        var low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return Position.create(0, offset);\n        }\n        while (low < high) {\n            var mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        var line = low - 1;\n        return Position.create(line, offset - lineOffsets[line]);\n    };\n    FullTextDocument.prototype.offsetAt = function (position) {\n        var lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        var lineOffset = lineOffsets[position.line];\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n    };\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\n        get: function () {\n            return this.getLineOffsets().length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return FullTextDocument;\n}());\nvar Is;\n(function (Is) {\n    var toString = Object.prototype.toString;\n    function defined(value) {\n        return typeof value !== 'undefined';\n    }\n    Is.defined = defined;\n    function undefined(value) {\n        return typeof value === 'undefined';\n    }\n    Is.undefined = undefined;\n    function boolean(value) {\n        return value === true || value === false;\n    }\n    Is.boolean = boolean;\n    function string(value) {\n        return toString.call(value) === '[object String]';\n    }\n    Is.string = string;\n    function number(value) {\n        return toString.call(value) === '[object Number]';\n    }\n    Is.number = number;\n    function func(value) {\n        return toString.call(value) === '[object Function]';\n    }\n    Is.func = func;\n    function typedArray(value, check) {\n        return Array.isArray(value) && value.every(check);\n    }\n    Is.typedArray = typedArray;\n})(Is || (Is = {}));\n\n\n/***/ }),\n\n/***/ 855:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createTokenizationSupport;\n/* unused harmony export TOKEN_DELIM_OBJECT */\n/* unused harmony export TOKEN_DELIM_ARRAY */\n/* unused harmony export TOKEN_DELIM_COLON */\n/* unused harmony export TOKEN_DELIM_COMMA */\n/* unused harmony export TOKEN_VALUE_BOOLEAN */\n/* unused harmony export TOKEN_VALUE_NULL */\n/* unused harmony export TOKEN_VALUE_STRING */\n/* unused harmony export TOKEN_VALUE_NUMBER */\n/* unused harmony export TOKEN_PROPERTY_NAME */\n/* unused harmony export TOKEN_COMMENT_BLOCK */\n/* unused harmony export TOKEN_COMMENT_LINE */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__deps_jsonc_parser_main_js__ = __webpack_require__(856);\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nfunction createTokenizationSupport(supportComments) {\n    return {\n        getInitialState: function () { return new JSONState(null, null, false); },\n        tokenize: function (line, state, offsetDelta, stopAtOffset) { return tokenize(supportComments, line, state, offsetDelta, stopAtOffset); }\n    };\n}\nvar TOKEN_DELIM_OBJECT = 'delimiter.bracket.json';\nvar TOKEN_DELIM_ARRAY = 'delimiter.array.json';\nvar TOKEN_DELIM_COLON = 'delimiter.colon.json';\nvar TOKEN_DELIM_COMMA = 'delimiter.comma.json';\nvar TOKEN_VALUE_BOOLEAN = 'keyword.json';\nvar TOKEN_VALUE_NULL = 'keyword.json';\nvar TOKEN_VALUE_STRING = 'string.value.json';\nvar TOKEN_VALUE_NUMBER = 'number.json';\nvar TOKEN_PROPERTY_NAME = 'string.key.json';\nvar TOKEN_COMMENT_BLOCK = 'comment.block.json';\nvar TOKEN_COMMENT_LINE = 'comment.line.json';\nvar JSONState = /** @class */ (function () {\n    function JSONState(state, scanError, lastWasColon) {\n        this._state = state;\n        this.scanError = scanError;\n        this.lastWasColon = lastWasColon;\n    }\n    JSONState.prototype.clone = function () {\n        return new JSONState(this._state, this.scanError, this.lastWasColon);\n    };\n    JSONState.prototype.equals = function (other) {\n        if (other === this) {\n            return true;\n        }\n        if (!other || !(other instanceof JSONState)) {\n            return false;\n        }\n        return this.scanError === other.scanError &&\n            this.lastWasColon === other.lastWasColon;\n    };\n    JSONState.prototype.getStateData = function () {\n        return this._state;\n    };\n    JSONState.prototype.setStateData = function (state) {\n        this._state = state;\n    };\n    return JSONState;\n}());\nfunction tokenize(comments, line, state, offsetDelta, stopAtOffset) {\n    if (offsetDelta === void 0) { offsetDelta = 0; }\n    // handle multiline strings and block comments\n    var numberOfInsertedCharacters = 0, adjustOffset = false;\n    switch (state.scanError) {\n        case 2 /* UnexpectedEndOfString */:\n            line = '\"' + line;\n            numberOfInsertedCharacters = 1;\n            break;\n        case 1 /* UnexpectedEndOfComment */:\n            line = '/*' + line;\n            numberOfInsertedCharacters = 2;\n            break;\n    }\n    var scanner = __WEBPACK_IMPORTED_MODULE_0__deps_jsonc_parser_main_js__[\"a\" /* createScanner */](line), kind, ret, lastWasColon = state.lastWasColon;\n    ret = {\n        tokens: [],\n        endState: state.clone()\n    };\n    while (true) {\n        var offset = offsetDelta + scanner.getPosition(), type = '';\n        kind = scanner.scan();\n        if (kind === 17 /* EOF */) {\n            break;\n        }\n        // Check that the scanner has advanced\n        if (offset === offsetDelta + scanner.getPosition()) {\n            throw new Error('Scanner did not advance, next 3 characters are: ' + line.substr(scanner.getPosition(), 3));\n        }\n        // In case we inserted /* or \" character, we need to\n        // adjust the offset of all tokens (except the first)\n        if (adjustOffset) {\n            offset -= numberOfInsertedCharacters;\n        }\n        adjustOffset = numberOfInsertedCharacters > 0;\n        // brackets and type\n        switch (kind) {\n            case 1 /* OpenBraceToken */:\n                type = TOKEN_DELIM_OBJECT;\n                lastWasColon = false;\n                break;\n            case 2 /* CloseBraceToken */:\n                type = TOKEN_DELIM_OBJECT;\n                lastWasColon = false;\n                break;\n            case 3 /* OpenBracketToken */:\n                type = TOKEN_DELIM_ARRAY;\n                lastWasColon = false;\n                break;\n            case 4 /* CloseBracketToken */:\n                type = TOKEN_DELIM_ARRAY;\n                lastWasColon = false;\n                break;\n            case 6 /* ColonToken */:\n                type = TOKEN_DELIM_COLON;\n                lastWasColon = true;\n                break;\n            case 5 /* CommaToken */:\n                type = TOKEN_DELIM_COMMA;\n                lastWasColon = false;\n                break;\n            case 8 /* TrueKeyword */:\n            case 9 /* FalseKeyword */:\n                type = TOKEN_VALUE_BOOLEAN;\n                lastWasColon = false;\n                break;\n            case 7 /* NullKeyword */:\n                type = TOKEN_VALUE_NULL;\n                lastWasColon = false;\n                break;\n            case 10 /* StringLiteral */:\n                type = lastWasColon ? TOKEN_VALUE_STRING : TOKEN_PROPERTY_NAME;\n                lastWasColon = false;\n                break;\n            case 11 /* NumericLiteral */:\n                type = TOKEN_VALUE_NUMBER;\n                lastWasColon = false;\n                break;\n        }\n        // comments, iff enabled\n        if (comments) {\n            switch (kind) {\n                case 12 /* LineCommentTrivia */:\n                    type = TOKEN_COMMENT_LINE;\n                    break;\n                case 13 /* BlockCommentTrivia */:\n                    type = TOKEN_COMMENT_BLOCK;\n                    break;\n            }\n        }\n        ret.endState = new JSONState(state.getStateData(), scanner.getTokenError(), lastWasColon);\n        ret.tokens.push({\n            startIndex: offset,\n            scopes: type\n        });\n    }\n    return ret;\n}\n\n\n/***/ }),\n\n/***/ 856:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return createScanner; });\n/* unused harmony export getLocation */\n/* unused harmony export parse */\n/* unused harmony export parseTree */\n/* unused harmony export findNodeAtLocation */\n/* unused harmony export getNodeValue */\n/* unused harmony export visit */\n/* unused harmony export stripComments */\n/* unused harmony export format */\n/* unused harmony export modify */\n/* unused harmony export applyEdits */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__impl_format_js__ = __webpack_require__(750);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__impl_edit_js__ = __webpack_require__(857);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__impl_scanner_js__ = __webpack_require__(708);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__impl_parser_js__ = __webpack_require__(751);\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\n\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nvar createScanner = __WEBPACK_IMPORTED_MODULE_2__impl_scanner_js__[\"a\" /* createScanner */];\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nvar getLocation = __WEBPACK_IMPORTED_MODULE_3__impl_parser_js__[\"b\" /* getLocation */];\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nvar parse = __WEBPACK_IMPORTED_MODULE_3__impl_parser_js__[\"d\" /* parse */];\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nvar parseTree = __WEBPACK_IMPORTED_MODULE_3__impl_parser_js__[\"e\" /* parseTree */];\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nvar findNodeAtLocation = __WEBPACK_IMPORTED_MODULE_3__impl_parser_js__[\"a\" /* findNodeAtLocation */];\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nvar getNodeValue = __WEBPACK_IMPORTED_MODULE_3__impl_parser_js__[\"c\" /* getNodeValue */];\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nvar visit = __WEBPACK_IMPORTED_MODULE_3__impl_parser_js__[\"g\" /* visit */];\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nvar stripComments = __WEBPACK_IMPORTED_MODULE_3__impl_parser_js__[\"f\" /* stripComments */];\n/**\n * Computes the edits needed to format a JSON document.\n *\n * @param documentText The input text\n * @param range The range to format or `undefined` to format the full content\n * @param options The formatting options\n * @returns A list of edit operations describing the formatting changes to the original document. Edits can be either inserts, replacements or\n * removals of text segments. All offsets refer to the original state of the document. No two edits must change or remove the same range of\n * text in the original document. However, multiple edits can have\n * the same offset, for example multiple inserts, or an insert followed by a remove or replace. The order in the array defines which edit is applied first.\n * To apply edits to an input, you can use `applyEdits`\n */\nfunction format(documentText, range, options) {\n    return __WEBPACK_IMPORTED_MODULE_0__impl_format_js__[\"a\" /* format */](documentText, range, options);\n}\n/**\n * Computes the edits needed to modify a value in the JSON document.\n *\n * @param documentText The input text\n * @param path The path of the value to change. The path represents either to the document root, a property or an array item.\n * If the path points to an non-existing property or item, it will be created.\n * @param value The new value for the specified property or item. If the value is undefined,\n * the property or item will be removed.\n * @param options Options\n * @returns A list of edit operations describing the formatting changes to the original document. Edits can be either inserts, replacements or\n * removals of text segments. All offsets refer to the original state of the document. No two edits must change or remove the same range of\n * text in the original document. However, multiple edits can have\n * the same offset, for example multiple inserts, or an insert followed by a remove or replace. The order in the array defines which edit is applied first.\n * To apply edits to an input, you can use `applyEdits`\n */\nfunction modify(text, path, value, options) {\n    return __WEBPACK_IMPORTED_MODULE_1__impl_edit_js__[\"b\" /* setProperty */](text, path, value, options.formattingOptions, options.getInsertionIndex);\n}\n/**\n * Applies edits to a input string.\n */\nfunction applyEdits(text, edits) {\n    for (var i = edits.length - 1; i >= 0; i--) {\n        text = __WEBPACK_IMPORTED_MODULE_1__impl_edit_js__[\"a\" /* applyEdit */](text, edits[i]);\n    }\n    return text;\n}\n//# sourceMappingURL=main.js.map\n\n/***/ }),\n\n/***/ 857:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export removeProperty */\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = setProperty;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = applyEdit;\n/* unused harmony export isWS */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__format_js__ = __webpack_require__(750);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__parser_js__ = __webpack_require__(751);\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\nfunction removeProperty(text, path, formattingOptions) {\n    return setProperty(text, path, void 0, formattingOptions);\n}\nfunction setProperty(text, path, value, formattingOptions, getInsertionIndex) {\n    var errors = [];\n    var root = Object(__WEBPACK_IMPORTED_MODULE_1__parser_js__[\"e\" /* parseTree */])(text, errors);\n    var parent = void 0;\n    var lastSegment = void 0;\n    while (path.length > 0) {\n        lastSegment = path.pop();\n        parent = Object(__WEBPACK_IMPORTED_MODULE_1__parser_js__[\"a\" /* findNodeAtLocation */])(root, path);\n        if (parent === void 0 && value !== void 0) {\n            if (typeof lastSegment === 'string') {\n                value = (_a = {}, _a[lastSegment] = value, _a);\n            }\n            else {\n                value = [value];\n            }\n        }\n        else {\n            break;\n        }\n    }\n    if (!parent) {\n        // empty document\n        if (value === void 0) {\n            throw new Error('Can not delete in empty document');\n        }\n        return withFormatting(text, { offset: root ? root.offset : 0, length: root ? root.length : 0, content: JSON.stringify(value) }, formattingOptions);\n    }\n    else if (parent.type === 'object' && typeof lastSegment === 'string' && Array.isArray(parent.children)) {\n        var existing = Object(__WEBPACK_IMPORTED_MODULE_1__parser_js__[\"a\" /* findNodeAtLocation */])(parent, [lastSegment]);\n        if (existing !== void 0) {\n            if (value === void 0) {\n                if (!existing.parent) {\n                    throw new Error('Malformed AST');\n                }\n                var propertyIndex = parent.children.indexOf(existing.parent);\n                var removeBegin = void 0;\n                var removeEnd = existing.parent.offset + existing.parent.length;\n                if (propertyIndex > 0) {\n                    // remove the comma of the previous node\n                    var previous = parent.children[propertyIndex - 1];\n                    removeBegin = previous.offset + previous.length;\n                }\n                else {\n                    removeBegin = parent.offset + 1;\n                    if (parent.children.length > 1) {\n                        // remove the comma of the next node\n                        var next = parent.children[1];\n                        removeEnd = next.offset;\n                    }\n                }\n                return withFormatting(text, { offset: removeBegin, length: removeEnd - removeBegin, content: '' }, formattingOptions);\n            }\n            else {\n                // set value of existing property\n                return withFormatting(text, { offset: existing.offset, length: existing.length, content: JSON.stringify(value) }, formattingOptions);\n            }\n        }\n        else {\n            if (value === void 0) {\n                return []; // property does not exist, nothing to do\n            }\n            var newProperty = JSON.stringify(lastSegment) + \": \" + JSON.stringify(value);\n            var index = getInsertionIndex ? getInsertionIndex(parent.children.map(function (p) { return p.children[0].value; })) : parent.children.length;\n            var edit = void 0;\n            if (index > 0) {\n                var previous = parent.children[index - 1];\n                edit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n            }\n            else if (parent.children.length === 0) {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty };\n            }\n            else {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty + ',' };\n            }\n            return withFormatting(text, edit, formattingOptions);\n        }\n    }\n    else if (parent.type === 'array' && typeof lastSegment === 'number' && Array.isArray(parent.children)) {\n        var insertIndex = lastSegment;\n        if (insertIndex === -1) {\n            // Insert\n            var newProperty = \"\" + JSON.stringify(value);\n            var edit = void 0;\n            if (parent.children.length === 0) {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty };\n            }\n            else {\n                var previous = parent.children[parent.children.length - 1];\n                edit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n            }\n            return withFormatting(text, edit, formattingOptions);\n        }\n        else {\n            if (value === void 0 && parent.children.length >= 0) {\n                //Removal\n                var removalIndex = lastSegment;\n                var toRemove = parent.children[removalIndex];\n                var edit = void 0;\n                if (parent.children.length === 1) {\n                    // only item\n                    edit = { offset: parent.offset + 1, length: parent.length - 2, content: '' };\n                }\n                else if (parent.children.length - 1 === removalIndex) {\n                    // last item\n                    var previous = parent.children[removalIndex - 1];\n                    var offset = previous.offset + previous.length;\n                    var parentEndOffset = parent.offset + parent.length;\n                    edit = { offset: offset, length: parentEndOffset - 2 - offset, content: '' };\n                }\n                else {\n                    edit = { offset: toRemove.offset, length: parent.children[removalIndex + 1].offset - toRemove.offset, content: '' };\n                }\n                return withFormatting(text, edit, formattingOptions);\n            }\n            else {\n                throw new Error('Array modification not supported yet');\n            }\n        }\n    }\n    else {\n        throw new Error(\"Can not add \" + (typeof lastSegment !== 'number' ? 'index' : 'property') + \" to parent of type \" + parent.type);\n    }\n    var _a;\n}\nfunction withFormatting(text, edit, formattingOptions) {\n    // apply the edit\n    var newText = applyEdit(text, edit);\n    // format the new text\n    var begin = edit.offset;\n    var end = edit.offset + edit.content.length;\n    if (edit.length === 0 || edit.content.length === 0) {\n        while (begin > 0 && !Object(__WEBPACK_IMPORTED_MODULE_0__format_js__[\"b\" /* isEOL */])(newText, begin - 1)) {\n            begin--;\n        }\n        while (end < newText.length && !Object(__WEBPACK_IMPORTED_MODULE_0__format_js__[\"b\" /* isEOL */])(newText, end)) {\n            end++;\n        }\n    }\n    var edits = Object(__WEBPACK_IMPORTED_MODULE_0__format_js__[\"a\" /* format */])(newText, { offset: begin, length: end - begin }, formattingOptions);\n    // apply the formatting edits and track the begin and end offsets of the changes\n    for (var i = edits.length - 1; i >= 0; i--) {\n        var edit_1 = edits[i];\n        newText = applyEdit(newText, edit_1);\n        begin = Math.min(begin, edit_1.offset);\n        end = Math.max(end, edit_1.offset + edit_1.length);\n        end += edit_1.content.length - edit_1.length;\n    }\n    // create a single edit with all changes\n    var editLength = text.length - (newText.length - end) - begin;\n    return [{ offset: begin, length: editLength, content: newText.substring(begin, end) }];\n}\nfunction applyEdit(text, edit) {\n    return text.substring(0, edit.offset) + edit.content + text.substring(edit.offset + edit.length);\n}\nfunction isWS(text, offset) {\n    return '\\r\\n \\t'.indexOf(text.charAt(offset)) !== -1;\n}\n//# sourceMappingURL=edit.js.map\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/2.12d4252e.chunk.js","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { WorkerManager } from './workerManager.js';\nimport * as languageFeatures from './languageFeatures.js';\nimport { createTokenizationSupport } from './tokenization.js';\nexport function setupMode(defaults) {\n    var disposables = [];\n    var client = new WorkerManager(defaults);\n    disposables.push(client);\n    var worker = function () {\n        var uris = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            uris[_i] = arguments[_i];\n        }\n        return client.getLanguageServiceWorker.apply(client, uris);\n    };\n    var languageId = defaults.languageId;\n    disposables.push(monaco.languages.registerCompletionItemProvider(languageId, new languageFeatures.CompletionAdapter(worker)));\n    disposables.push(monaco.languages.registerHoverProvider(languageId, new languageFeatures.HoverAdapter(worker)));\n    disposables.push(monaco.languages.registerDocumentSymbolProvider(languageId, new languageFeatures.DocumentSymbolAdapter(worker)));\n    disposables.push(monaco.languages.registerDocumentFormattingEditProvider(languageId, new languageFeatures.DocumentFormattingEditProvider(worker)));\n    disposables.push(monaco.languages.registerDocumentRangeFormattingEditProvider(languageId, new languageFeatures.DocumentRangeFormattingEditProvider(worker)));\n    disposables.push(new languageFeatures.DiagnosticsAdapter(languageId, worker, defaults));\n    disposables.push(monaco.languages.setTokensProvider(languageId, createTokenizationSupport(true)));\n    disposables.push(monaco.languages.setLanguageConfiguration(languageId, richEditConfiguration));\n    disposables.push(monaco.languages.registerColorProvider(languageId, new languageFeatures.DocumentColorAdapter(worker)));\n}\nvar richEditConfiguration = {\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\[\\{\\]\\}\\:\\\"\\,\\s]+)/g,\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/']\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}', notIn: ['string'] },\n        { open: '[', close: ']', notIn: ['string'] },\n        { open: '\"', close: '\"', notIn: ['string'] }\n    ]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/json/jsonMode.js\n// module id = 627\n// module chunks = 2","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport function createScanner(text, ignoreTrivia) {\n    if (ignoreTrivia === void 0) { ignoreTrivia = false; }\n    var pos = 0, len = text.length, value = '', tokenOffset = 0, token = 16 /* Unknown */, scanError = 0 /* None */;\n    function scanHexDigits(count, exact) {\n        var digits = 0;\n        var value = 0;\n        while (digits < count || !exact) {\n            var ch = text.charCodeAt(pos);\n            if (ch >= 48 /* _0 */ && ch <= 57 /* _9 */) {\n                value = value * 16 + ch - 48 /* _0 */;\n            }\n            else if (ch >= 65 /* A */ && ch <= 70 /* F */) {\n                value = value * 16 + ch - 65 /* A */ + 10;\n            }\n            else if (ch >= 97 /* a */ && ch <= 102 /* f */) {\n                value = value * 16 + ch - 97 /* a */ + 10;\n            }\n            else {\n                break;\n            }\n            pos++;\n            digits++;\n        }\n        if (digits < count) {\n            value = -1;\n        }\n        return value;\n    }\n    function setPosition(newPosition) {\n        pos = newPosition;\n        value = '';\n        tokenOffset = 0;\n        token = 16 /* Unknown */;\n        scanError = 0 /* None */;\n    }\n    function scanNumber() {\n        var start = pos;\n        if (text.charCodeAt(pos) === 48 /* _0 */) {\n            pos++;\n        }\n        else {\n            pos++;\n            while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n            }\n        }\n        if (pos < text.length && text.charCodeAt(pos) === 46 /* dot */) {\n            pos++;\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n            }\n            else {\n                scanError = 3 /* UnexpectedEndOfNumber */;\n                return text.substring(start, pos);\n            }\n        }\n        var end = pos;\n        if (pos < text.length && (text.charCodeAt(pos) === 69 /* E */ || text.charCodeAt(pos) === 101 /* e */)) {\n            pos++;\n            if (pos < text.length && text.charCodeAt(pos) === 43 /* plus */ || text.charCodeAt(pos) === 45 /* minus */) {\n                pos++;\n            }\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n                end = pos;\n            }\n            else {\n                scanError = 3 /* UnexpectedEndOfNumber */;\n            }\n        }\n        return text.substring(start, end);\n    }\n    function scanString() {\n        var result = '', start = pos;\n        while (true) {\n            if (pos >= len) {\n                result += text.substring(start, pos);\n                scanError = 2 /* UnexpectedEndOfString */;\n                break;\n            }\n            var ch = text.charCodeAt(pos);\n            if (ch === 34 /* doubleQuote */) {\n                result += text.substring(start, pos);\n                pos++;\n                break;\n            }\n            if (ch === 92 /* backslash */) {\n                result += text.substring(start, pos);\n                pos++;\n                if (pos >= len) {\n                    scanError = 2 /* UnexpectedEndOfString */;\n                    break;\n                }\n                ch = text.charCodeAt(pos++);\n                switch (ch) {\n                    case 34 /* doubleQuote */:\n                        result += '\\\"';\n                        break;\n                    case 92 /* backslash */:\n                        result += '\\\\';\n                        break;\n                    case 47 /* slash */:\n                        result += '/';\n                        break;\n                    case 98 /* b */:\n                        result += '\\b';\n                        break;\n                    case 102 /* f */:\n                        result += '\\f';\n                        break;\n                    case 110 /* n */:\n                        result += '\\n';\n                        break;\n                    case 114 /* r */:\n                        result += '\\r';\n                        break;\n                    case 116 /* t */:\n                        result += '\\t';\n                        break;\n                    case 117 /* u */:\n                        var ch_1 = scanHexDigits(4, true);\n                        if (ch_1 >= 0) {\n                            result += String.fromCharCode(ch_1);\n                        }\n                        else {\n                            scanError = 4 /* InvalidUnicode */;\n                        }\n                        break;\n                    default:\n                        scanError = 5 /* InvalidEscapeCharacter */;\n                }\n                start = pos;\n                continue;\n            }\n            if (ch >= 0 && ch <= 0x1f) {\n                if (isLineBreak(ch)) {\n                    result += text.substring(start, pos);\n                    scanError = 2 /* UnexpectedEndOfString */;\n                    break;\n                }\n                else {\n                    scanError = 6 /* InvalidCharacter */;\n                    // mark as error but continue with string\n                }\n            }\n            pos++;\n        }\n        return result;\n    }\n    function scanNext() {\n        value = '';\n        scanError = 0 /* None */;\n        tokenOffset = pos;\n        if (pos >= len) {\n            // at the end\n            tokenOffset = len;\n            return token = 17 /* EOF */;\n        }\n        var code = text.charCodeAt(pos);\n        // trivia: whitespace\n        if (isWhiteSpace(code)) {\n            do {\n                pos++;\n                value += String.fromCharCode(code);\n                code = text.charCodeAt(pos);\n            } while (isWhiteSpace(code));\n            return token = 15 /* Trivia */;\n        }\n        // trivia: newlines\n        if (isLineBreak(code)) {\n            pos++;\n            value += String.fromCharCode(code);\n            if (code === 13 /* carriageReturn */ && text.charCodeAt(pos) === 10 /* lineFeed */) {\n                pos++;\n                value += '\\n';\n            }\n            return token = 14 /* LineBreakTrivia */;\n        }\n        switch (code) {\n            // tokens: []{}:,\n            case 123 /* openBrace */:\n                pos++;\n                return token = 1 /* OpenBraceToken */;\n            case 125 /* closeBrace */:\n                pos++;\n                return token = 2 /* CloseBraceToken */;\n            case 91 /* openBracket */:\n                pos++;\n                return token = 3 /* OpenBracketToken */;\n            case 93 /* closeBracket */:\n                pos++;\n                return token = 4 /* CloseBracketToken */;\n            case 58 /* colon */:\n                pos++;\n                return token = 6 /* ColonToken */;\n            case 44 /* comma */:\n                pos++;\n                return token = 5 /* CommaToken */;\n            // strings\n            case 34 /* doubleQuote */:\n                pos++;\n                value = scanString();\n                return token = 10 /* StringLiteral */;\n            // comments\n            case 47 /* slash */:\n                var start = pos - 1;\n                // Single-line comment\n                if (text.charCodeAt(pos + 1) === 47 /* slash */) {\n                    pos += 2;\n                    while (pos < len) {\n                        if (isLineBreak(text.charCodeAt(pos))) {\n                            break;\n                        }\n                        pos++;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 12 /* LineCommentTrivia */;\n                }\n                // Multi-line comment\n                if (text.charCodeAt(pos + 1) === 42 /* asterisk */) {\n                    pos += 2;\n                    var commentClosed = false;\n                    while (pos < len) {\n                        var ch = text.charCodeAt(pos);\n                        if (ch === 42 /* asterisk */ && (pos + 1 < len) && text.charCodeAt(pos + 1) === 47 /* slash */) {\n                            pos += 2;\n                            commentClosed = true;\n                            break;\n                        }\n                        pos++;\n                    }\n                    if (!commentClosed) {\n                        pos++;\n                        scanError = 1 /* UnexpectedEndOfComment */;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 13 /* BlockCommentTrivia */;\n                }\n                // just a single slash\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* Unknown */;\n            // numbers\n            case 45 /* minus */:\n                value += String.fromCharCode(code);\n                pos++;\n                if (pos === len || !isDigit(text.charCodeAt(pos))) {\n                    return token = 16 /* Unknown */;\n                }\n            // found a minus, followed by a number so\n            // we fall through to proceed with scanning\n            // numbers\n            case 48 /* _0 */:\n            case 49 /* _1 */:\n            case 50 /* _2 */:\n            case 51 /* _3 */:\n            case 52 /* _4 */:\n            case 53 /* _5 */:\n            case 54 /* _6 */:\n            case 55 /* _7 */:\n            case 56 /* _8 */:\n            case 57 /* _9 */:\n                value += scanNumber();\n                return token = 11 /* NumericLiteral */;\n            // literals and unknown symbols\n            default:\n                // is a literal? Read the full word.\n                while (pos < len && isUnknownContentCharacter(code)) {\n                    pos++;\n                    code = text.charCodeAt(pos);\n                }\n                if (tokenOffset !== pos) {\n                    value = text.substring(tokenOffset, pos);\n                    // keywords: true, false, null\n                    switch (value) {\n                        case 'true': return token = 8 /* TrueKeyword */;\n                        case 'false': return token = 9 /* FalseKeyword */;\n                        case 'null': return token = 7 /* NullKeyword */;\n                    }\n                    return token = 16 /* Unknown */;\n                }\n                // some\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* Unknown */;\n        }\n    }\n    function isUnknownContentCharacter(code) {\n        if (isWhiteSpace(code) || isLineBreak(code)) {\n            return false;\n        }\n        switch (code) {\n            case 125 /* closeBrace */:\n            case 93 /* closeBracket */:\n            case 123 /* openBrace */:\n            case 91 /* openBracket */:\n            case 34 /* doubleQuote */:\n            case 58 /* colon */:\n            case 44 /* comma */:\n                return false;\n        }\n        return true;\n    }\n    function scanNextNonTrivia() {\n        var result;\n        do {\n            result = scanNext();\n        } while (result >= 12 /* LineCommentTrivia */ && result <= 15 /* Trivia */);\n        return result;\n    }\n    return {\n        setPosition: setPosition,\n        getPosition: function () { return pos; },\n        scan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n        getToken: function () { return token; },\n        getTokenValue: function () { return value; },\n        getTokenOffset: function () { return tokenOffset; },\n        getTokenLength: function () { return pos - tokenOffset; },\n        getTokenError: function () { return scanError; }\n    };\n}\nfunction isWhiteSpace(ch) {\n    return ch === 32 /* space */ || ch === 9 /* tab */ || ch === 11 /* verticalTab */ || ch === 12 /* formFeed */ ||\n        ch === 160 /* nonBreakingSpace */ || ch === 5760 /* ogham */ || ch >= 8192 /* enQuad */ && ch <= 8203 /* zeroWidthSpace */ ||\n        ch === 8239 /* narrowNoBreakSpace */ || ch === 8287 /* mathematicalSpace */ || ch === 12288 /* ideographicSpace */ || ch === 65279 /* byteOrderMark */;\n}\nfunction isLineBreak(ch) {\n    return ch === 10 /* lineFeed */ || ch === 13 /* carriageReturn */ || ch === 8232 /* lineSeparator */ || ch === 8233 /* paragraphSeparator */;\n}\nfunction isDigit(ch) {\n    return ch >= 48 /* _0 */ && ch <= 57 /* _9 */;\n}\n//# sourceMappingURL=scanner.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/scanner.js\n// module id = 708\n// module chunks = 2","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { createScanner } from './scanner.js';\nexport function format(documentText, range, options) {\n    var initialIndentLevel;\n    var formatText;\n    var formatTextStart;\n    var rangeStart;\n    var rangeEnd;\n    if (range) {\n        rangeStart = range.offset;\n        rangeEnd = rangeStart + range.length;\n        formatTextStart = rangeStart;\n        while (formatTextStart > 0 && !isEOL(documentText, formatTextStart - 1)) {\n            formatTextStart--;\n        }\n        var endOffset = rangeEnd;\n        while (endOffset < documentText.length && !isEOL(documentText, endOffset)) {\n            endOffset++;\n        }\n        formatText = documentText.substring(formatTextStart, endOffset);\n        initialIndentLevel = computeIndentLevel(formatText, 0, options);\n    }\n    else {\n        formatText = documentText;\n        initialIndentLevel = 0;\n        formatTextStart = 0;\n        rangeStart = 0;\n        rangeEnd = documentText.length;\n    }\n    var eol = getEOL(options, documentText);\n    var lineBreak = false;\n    var indentLevel = 0;\n    var indentValue;\n    if (options.insertSpaces) {\n        indentValue = repeat(' ', options.tabSize || 4);\n    }\n    else {\n        indentValue = '\\t';\n    }\n    var scanner = createScanner(formatText, false);\n    var hasError = false;\n    function newLineAndIndent() {\n        return eol + repeat(indentValue, initialIndentLevel + indentLevel);\n    }\n    function scanNext() {\n        var token = scanner.scan();\n        lineBreak = false;\n        while (token === 15 /* Trivia */ || token === 14 /* LineBreakTrivia */) {\n            lineBreak = lineBreak || (token === 14 /* LineBreakTrivia */);\n            token = scanner.scan();\n        }\n        hasError = token === 16 /* Unknown */ || scanner.getTokenError() !== 0 /* None */;\n        return token;\n    }\n    var editOperations = [];\n    function addEdit(text, startOffset, endOffset) {\n        if (!hasError && startOffset < rangeEnd && endOffset > rangeStart && documentText.substring(startOffset, endOffset) !== text) {\n            editOperations.push({ offset: startOffset, length: endOffset - startOffset, content: text });\n        }\n    }\n    var firstToken = scanNext();\n    if (firstToken !== 17 /* EOF */) {\n        var firstTokenStart = scanner.getTokenOffset() + formatTextStart;\n        var initialIndent = repeat(indentValue, initialIndentLevel);\n        addEdit(initialIndent, formatTextStart, firstTokenStart);\n    }\n    while (firstToken !== 17 /* EOF */) {\n        var firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n        var secondToken = scanNext();\n        var replaceContent = '';\n        while (!lineBreak && (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */)) {\n            // comments on the same line: keep them on the same line, but ignore them otherwise\n            var commentTokenStart = scanner.getTokenOffset() + formatTextStart;\n            addEdit(' ', firstTokenEnd, commentTokenStart);\n            firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n            replaceContent = secondToken === 12 /* LineCommentTrivia */ ? newLineAndIndent() : '';\n            secondToken = scanNext();\n        }\n        if (secondToken === 2 /* CloseBraceToken */) {\n            if (firstToken !== 1 /* OpenBraceToken */) {\n                indentLevel--;\n                replaceContent = newLineAndIndent();\n            }\n        }\n        else if (secondToken === 4 /* CloseBracketToken */) {\n            if (firstToken !== 3 /* OpenBracketToken */) {\n                indentLevel--;\n                replaceContent = newLineAndIndent();\n            }\n        }\n        else {\n            switch (firstToken) {\n                case 3 /* OpenBracketToken */:\n                case 1 /* OpenBraceToken */:\n                    indentLevel++;\n                    replaceContent = newLineAndIndent();\n                    break;\n                case 5 /* CommaToken */:\n                case 12 /* LineCommentTrivia */:\n                    replaceContent = newLineAndIndent();\n                    break;\n                case 13 /* BlockCommentTrivia */:\n                    if (lineBreak) {\n                        replaceContent = newLineAndIndent();\n                    }\n                    else {\n                        // symbol following comment on the same line: keep on same line, separate with ' '\n                        replaceContent = ' ';\n                    }\n                    break;\n                case 6 /* ColonToken */:\n                    replaceContent = ' ';\n                    break;\n                case 10 /* StringLiteral */:\n                    if (secondToken === 6 /* ColonToken */) {\n                        replaceContent = '';\n                        break;\n                    }\n                // fall through\n                case 7 /* NullKeyword */:\n                case 8 /* TrueKeyword */:\n                case 9 /* FalseKeyword */:\n                case 11 /* NumericLiteral */:\n                case 2 /* CloseBraceToken */:\n                case 4 /* CloseBracketToken */:\n                    if (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */) {\n                        replaceContent = ' ';\n                    }\n                    else if (secondToken !== 5 /* CommaToken */ && secondToken !== 17 /* EOF */) {\n                        hasError = true;\n                    }\n                    break;\n                case 16 /* Unknown */:\n                    hasError = true;\n                    break;\n            }\n            if (lineBreak && (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */)) {\n                replaceContent = newLineAndIndent();\n            }\n        }\n        var secondTokenStart = scanner.getTokenOffset() + formatTextStart;\n        addEdit(replaceContent, firstTokenEnd, secondTokenStart);\n        firstToken = secondToken;\n    }\n    return editOperations;\n}\nfunction repeat(s, count) {\n    var result = '';\n    for (var i = 0; i < count; i++) {\n        result += s;\n    }\n    return result;\n}\nfunction computeIndentLevel(content, offset, options) {\n    var i = 0;\n    var nChars = 0;\n    var tabSize = options.tabSize || 4;\n    while (i < content.length) {\n        var ch = content.charAt(i);\n        if (ch === ' ') {\n            nChars++;\n        }\n        else if (ch === '\\t') {\n            nChars += tabSize;\n        }\n        else {\n            break;\n        }\n        i++;\n    }\n    return Math.floor(nChars / tabSize);\n}\nfunction getEOL(options, text) {\n    for (var i = 0; i < text.length; i++) {\n        var ch = text.charAt(i);\n        if (ch === '\\r') {\n            if (i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                return '\\r\\n';\n            }\n            return '\\r';\n        }\n        else if (ch === '\\n') {\n            return '\\n';\n        }\n    }\n    return (options && options.eol) || '\\n';\n}\nexport function isEOL(text, offset) {\n    return '\\r\\n'.indexOf(text.charAt(offset)) !== -1;\n}\n//# sourceMappingURL=format.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/format.js\n// module id = 750\n// module chunks = 2","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { createScanner } from './scanner.js';\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport function getLocation(text, position) {\n    var segments = []; // strings or numbers\n    var earlyReturnException = new Object();\n    var previousNode = void 0;\n    var previousNodeInst = {\n        value: {},\n        offset: 0,\n        length: 0,\n        type: 'object'\n    };\n    var isAtPropertyKey = false;\n    function setPreviousNode(value, offset, length, type) {\n        previousNodeInst.value = value;\n        previousNodeInst.offset = offset;\n        previousNodeInst.length = length;\n        previousNodeInst.type = type;\n        previousNodeInst.columnOffset = void 0;\n        previousNode = previousNodeInst;\n    }\n    try {\n        visit(text, {\n            onObjectBegin: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                isAtPropertyKey = position > offset;\n                segments.push(''); // push a placeholder (will be replaced)\n            },\n            onObjectProperty: function (name, offset, length) {\n                if (position < offset) {\n                    throw earlyReturnException;\n                }\n                setPreviousNode(name, offset, length, 'property');\n                segments[segments.length - 1] = name;\n                if (position <= offset + length) {\n                    throw earlyReturnException;\n                }\n            },\n            onObjectEnd: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                segments.pop();\n            },\n            onArrayBegin: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                segments.push(0);\n            },\n            onArrayEnd: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                segments.pop();\n            },\n            onLiteralValue: function (value, offset, length) {\n                if (position < offset) {\n                    throw earlyReturnException;\n                }\n                setPreviousNode(value, offset, length, getLiteralNodeType(value));\n                if (position <= offset + length) {\n                    throw earlyReturnException;\n                }\n            },\n            onSeparator: function (sep, offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                if (sep === ':' && previousNode && previousNode.type === 'property') {\n                    previousNode.columnOffset = offset;\n                    isAtPropertyKey = false;\n                    previousNode = void 0;\n                }\n                else if (sep === ',') {\n                    var last = segments[segments.length - 1];\n                    if (typeof last === 'number') {\n                        segments[segments.length - 1] = last + 1;\n                    }\n                    else {\n                        isAtPropertyKey = true;\n                        segments[segments.length - 1] = '';\n                    }\n                    previousNode = void 0;\n                }\n            }\n        });\n    }\n    catch (e) {\n        if (e !== earlyReturnException) {\n            throw e;\n        }\n    }\n    return {\n        path: segments,\n        previousNode: previousNode,\n        isAtPropertyKey: isAtPropertyKey,\n        matches: function (pattern) {\n            var k = 0;\n            for (var i = 0; k < pattern.length && i < segments.length; i++) {\n                if (pattern[k] === segments[i] || pattern[k] === '*') {\n                    k++;\n                }\n                else if (pattern[k] !== '**') {\n                    return false;\n                }\n            }\n            return k === pattern.length;\n        }\n    };\n}\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport function parse(text, errors, options) {\n    if (errors === void 0) { errors = []; }\n    var currentProperty = null;\n    var currentParent = [];\n    var previousParents = [];\n    function onValue(value) {\n        if (Array.isArray(currentParent)) {\n            currentParent.push(value);\n        }\n        else if (currentProperty) {\n            currentParent[currentProperty] = value;\n        }\n    }\n    var visitor = {\n        onObjectBegin: function () {\n            var object = {};\n            onValue(object);\n            previousParents.push(currentParent);\n            currentParent = object;\n            currentProperty = null;\n        },\n        onObjectProperty: function (name) {\n            currentProperty = name;\n        },\n        onObjectEnd: function () {\n            currentParent = previousParents.pop();\n        },\n        onArrayBegin: function () {\n            var array = [];\n            onValue(array);\n            previousParents.push(currentParent);\n            currentParent = array;\n            currentProperty = null;\n        },\n        onArrayEnd: function () {\n            currentParent = previousParents.pop();\n        },\n        onLiteralValue: onValue,\n        onError: function (error, offset, length) {\n            errors.push({ error: error, offset: offset, length: length });\n        }\n    };\n    visit(text, visitor, options);\n    return currentParent[0];\n}\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport function parseTree(text, errors, options) {\n    if (errors === void 0) { errors = []; }\n    var currentParent = { type: 'array', offset: -1, length: -1, children: [] }; // artificial root\n    function ensurePropertyComplete(endOffset) {\n        if (currentParent.type === 'property') {\n            currentParent.length = endOffset - currentParent.offset;\n            currentParent = currentParent.parent;\n        }\n    }\n    function onValue(valueNode) {\n        currentParent.children.push(valueNode);\n        return valueNode;\n    }\n    var visitor = {\n        onObjectBegin: function (offset) {\n            currentParent = onValue({ type: 'object', offset: offset, length: -1, parent: currentParent, children: [] });\n        },\n        onObjectProperty: function (name, offset, length) {\n            currentParent = onValue({ type: 'property', offset: offset, length: -1, parent: currentParent, children: [] });\n            currentParent.children.push({ type: 'string', value: name, offset: offset, length: length, parent: currentParent });\n        },\n        onObjectEnd: function (offset, length) {\n            currentParent.length = offset + length - currentParent.offset;\n            currentParent = currentParent.parent;\n            ensurePropertyComplete(offset + length);\n        },\n        onArrayBegin: function (offset, length) {\n            currentParent = onValue({ type: 'array', offset: offset, length: -1, parent: currentParent, children: [] });\n        },\n        onArrayEnd: function (offset, length) {\n            currentParent.length = offset + length - currentParent.offset;\n            currentParent = currentParent.parent;\n            ensurePropertyComplete(offset + length);\n        },\n        onLiteralValue: function (value, offset, length) {\n            onValue({ type: getLiteralNodeType(value), offset: offset, length: length, parent: currentParent, value: value });\n            ensurePropertyComplete(offset + length);\n        },\n        onSeparator: function (sep, offset, length) {\n            if (currentParent.type === 'property') {\n                if (sep === ':') {\n                    currentParent.columnOffset = offset;\n                }\n                else if (sep === ',') {\n                    ensurePropertyComplete(offset);\n                }\n            }\n        },\n        onError: function (error, offset, length) {\n            errors.push({ error: error, offset: offset, length: length });\n        }\n    };\n    visit(text, visitor, options);\n    var result = currentParent.children[0];\n    if (result) {\n        delete result.parent;\n    }\n    return result;\n}\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport function findNodeAtLocation(root, path) {\n    if (!root) {\n        return void 0;\n    }\n    var node = root;\n    for (var _i = 0, path_1 = path; _i < path_1.length; _i++) {\n        var segment = path_1[_i];\n        if (typeof segment === 'string') {\n            if (node.type !== 'object' || !Array.isArray(node.children)) {\n                return void 0;\n            }\n            var found = false;\n            for (var _a = 0, _b = node.children; _a < _b.length; _a++) {\n                var propertyNode = _b[_a];\n                if (Array.isArray(propertyNode.children) && propertyNode.children[0].value === segment) {\n                    node = propertyNode.children[1];\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) {\n                return void 0;\n            }\n        }\n        else {\n            var index = segment;\n            if (node.type !== 'array' || index < 0 || !Array.isArray(node.children) || index >= node.children.length) {\n                return void 0;\n            }\n            node = node.children[index];\n        }\n    }\n    return node;\n}\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport function getNodeValue(node) {\n    if (node.type === 'array') {\n        return node.children.map(getNodeValue);\n    }\n    else if (node.type === 'object') {\n        var obj = Object.create(null);\n        for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n            var prop = _a[_i];\n            obj[prop.children[0].value] = getNodeValue(prop.children[1]);\n        }\n        return obj;\n    }\n    return node.value;\n}\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport function visit(text, visitor, options) {\n    var _scanner = createScanner(text, false);\n    function toNoArgVisit(visitFunction) {\n        return visitFunction ? function () { return visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength()); } : function () { return true; };\n    }\n    function toOneArgVisit(visitFunction) {\n        return visitFunction ? function (arg) { return visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength()); } : function () { return true; };\n    }\n    var onObjectBegin = toNoArgVisit(visitor.onObjectBegin), onObjectProperty = toOneArgVisit(visitor.onObjectProperty), onObjectEnd = toNoArgVisit(visitor.onObjectEnd), onArrayBegin = toNoArgVisit(visitor.onArrayBegin), onArrayEnd = toNoArgVisit(visitor.onArrayEnd), onLiteralValue = toOneArgVisit(visitor.onLiteralValue), onSeparator = toOneArgVisit(visitor.onSeparator), onComment = toNoArgVisit(visitor.onComment), onError = toOneArgVisit(visitor.onError);\n    var disallowComments = options && options.disallowComments;\n    var allowTrailingComma = options && options.allowTrailingComma;\n    function scanNext() {\n        while (true) {\n            var token = _scanner.scan();\n            switch (_scanner.getTokenError()) {\n                case 4 /* InvalidUnicode */:\n                    handleError(14 /* InvalidUnicode */);\n                    break;\n                case 5 /* InvalidEscapeCharacter */:\n                    handleError(15 /* InvalidEscapeCharacter */);\n                    break;\n                case 3 /* UnexpectedEndOfNumber */:\n                    handleError(13 /* UnexpectedEndOfNumber */);\n                    break;\n                case 1 /* UnexpectedEndOfComment */:\n                    if (!disallowComments) {\n                        handleError(11 /* UnexpectedEndOfComment */);\n                    }\n                    break;\n                case 2 /* UnexpectedEndOfString */:\n                    handleError(12 /* UnexpectedEndOfString */);\n                    break;\n                case 6 /* InvalidCharacter */:\n                    handleError(16 /* InvalidCharacter */);\n                    break;\n            }\n            switch (token) {\n                case 12 /* LineCommentTrivia */:\n                case 13 /* BlockCommentTrivia */:\n                    if (disallowComments) {\n                        handleError(10 /* InvalidCommentToken */);\n                    }\n                    else {\n                        onComment();\n                    }\n                    break;\n                case 16 /* Unknown */:\n                    handleError(1 /* InvalidSymbol */);\n                    break;\n                case 15 /* Trivia */:\n                case 14 /* LineBreakTrivia */:\n                    break;\n                default:\n                    return token;\n            }\n        }\n    }\n    function handleError(error, skipUntilAfter, skipUntil) {\n        if (skipUntilAfter === void 0) { skipUntilAfter = []; }\n        if (skipUntil === void 0) { skipUntil = []; }\n        onError(error);\n        if (skipUntilAfter.length + skipUntil.length > 0) {\n            var token = _scanner.getToken();\n            while (token !== 17 /* EOF */) {\n                if (skipUntilAfter.indexOf(token) !== -1) {\n                    scanNext();\n                    break;\n                }\n                else if (skipUntil.indexOf(token) !== -1) {\n                    break;\n                }\n                token = scanNext();\n            }\n        }\n    }\n    function parseString(isValue) {\n        var value = _scanner.getTokenValue();\n        if (isValue) {\n            onLiteralValue(value);\n        }\n        else {\n            onObjectProperty(value);\n        }\n        scanNext();\n        return true;\n    }\n    function parseLiteral() {\n        switch (_scanner.getToken()) {\n            case 11 /* NumericLiteral */:\n                var value = 0;\n                try {\n                    value = JSON.parse(_scanner.getTokenValue());\n                    if (typeof value !== 'number') {\n                        handleError(2 /* InvalidNumberFormat */);\n                        value = 0;\n                    }\n                }\n                catch (e) {\n                    handleError(2 /* InvalidNumberFormat */);\n                }\n                onLiteralValue(value);\n                break;\n            case 7 /* NullKeyword */:\n                onLiteralValue(null);\n                break;\n            case 8 /* TrueKeyword */:\n                onLiteralValue(true);\n                break;\n            case 9 /* FalseKeyword */:\n                onLiteralValue(false);\n                break;\n            default:\n                return false;\n        }\n        scanNext();\n        return true;\n    }\n    function parseProperty() {\n        if (_scanner.getToken() !== 10 /* StringLiteral */) {\n            handleError(3 /* PropertyNameExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            return false;\n        }\n        parseString(false);\n        if (_scanner.getToken() === 6 /* ColonToken */) {\n            onSeparator(':');\n            scanNext(); // consume colon\n            if (!parseValue()) {\n                handleError(4 /* ValueExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            }\n        }\n        else {\n            handleError(5 /* ColonExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n        }\n        return true;\n    }\n    function parseObject() {\n        onObjectBegin();\n        scanNext(); // consume open brace\n        var needsComma = false;\n        while (_scanner.getToken() !== 2 /* CloseBraceToken */ && _scanner.getToken() !== 17 /* EOF */) {\n            if (_scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    handleError(4 /* ValueExpected */, [], []);\n                }\n                onSeparator(',');\n                scanNext(); // consume comma\n                if (_scanner.getToken() === 2 /* CloseBraceToken */ && allowTrailingComma) {\n                    break;\n                }\n            }\n            else if (needsComma) {\n                handleError(6 /* CommaExpected */, [], []);\n            }\n            if (!parseProperty()) {\n                handleError(4 /* ValueExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            }\n            needsComma = true;\n        }\n        onObjectEnd();\n        if (_scanner.getToken() !== 2 /* CloseBraceToken */) {\n            handleError(7 /* CloseBraceExpected */, [2 /* CloseBraceToken */], []);\n        }\n        else {\n            scanNext(); // consume close brace\n        }\n        return true;\n    }\n    function parseArray() {\n        onArrayBegin();\n        scanNext(); // consume open bracket\n        var needsComma = false;\n        while (_scanner.getToken() !== 4 /* CloseBracketToken */ && _scanner.getToken() !== 17 /* EOF */) {\n            if (_scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    handleError(4 /* ValueExpected */, [], []);\n                }\n                onSeparator(',');\n                scanNext(); // consume comma\n                if (_scanner.getToken() === 4 /* CloseBracketToken */ && allowTrailingComma) {\n                    break;\n                }\n            }\n            else if (needsComma) {\n                handleError(6 /* CommaExpected */, [], []);\n            }\n            if (!parseValue()) {\n                handleError(4 /* ValueExpected */, [], [4 /* CloseBracketToken */, 5 /* CommaToken */]);\n            }\n            needsComma = true;\n        }\n        onArrayEnd();\n        if (_scanner.getToken() !== 4 /* CloseBracketToken */) {\n            handleError(8 /* CloseBracketExpected */, [4 /* CloseBracketToken */], []);\n        }\n        else {\n            scanNext(); // consume close bracket\n        }\n        return true;\n    }\n    function parseValue() {\n        switch (_scanner.getToken()) {\n            case 3 /* OpenBracketToken */:\n                return parseArray();\n            case 1 /* OpenBraceToken */:\n                return parseObject();\n            case 10 /* StringLiteral */:\n                return parseString(true);\n            default:\n                return parseLiteral();\n        }\n    }\n    scanNext();\n    if (_scanner.getToken() === 17 /* EOF */) {\n        return true;\n    }\n    if (!parseValue()) {\n        handleError(4 /* ValueExpected */, [], []);\n        return false;\n    }\n    if (_scanner.getToken() !== 17 /* EOF */) {\n        handleError(9 /* EndOfFileExpected */, [], []);\n    }\n    return true;\n}\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport function stripComments(text, replaceCh) {\n    var _scanner = createScanner(text), parts = [], kind, offset = 0, pos;\n    do {\n        pos = _scanner.getPosition();\n        kind = _scanner.scan();\n        switch (kind) {\n            case 12 /* LineCommentTrivia */:\n            case 13 /* BlockCommentTrivia */:\n            case 17 /* EOF */:\n                if (offset !== pos) {\n                    parts.push(text.substring(offset, pos));\n                }\n                if (replaceCh !== void 0) {\n                    parts.push(_scanner.getTokenValue().replace(/[^\\r\\n]/g, replaceCh));\n                }\n                offset = _scanner.getPosition();\n                break;\n        }\n    } while (kind !== 17 /* EOF */);\n    return parts.join('');\n}\nfunction getLiteralNodeType(value) {\n    switch (typeof value) {\n        case 'boolean': return 'boolean';\n        case 'number': return 'number';\n        case 'string': return 'string';\n        default: return 'null';\n    }\n}\n//# sourceMappingURL=parser.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/parser.js\n// module id = 751\n// module chunks = 2","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar Promise = monaco.Promise;\nvar STOP_WHEN_IDLE_FOR = 2 * 60 * 1000; // 2min\nvar WorkerManager = /** @class */ (function () {\n    function WorkerManager(defaults) {\n        var _this = this;\n        this._defaults = defaults;\n        this._worker = null;\n        this._idleCheckInterval = setInterval(function () { return _this._checkIfIdle(); }, 30 * 1000);\n        this._lastUsedTime = 0;\n        this._configChangeListener = this._defaults.onDidChange(function () { return _this._stopWorker(); });\n    }\n    WorkerManager.prototype._stopWorker = function () {\n        if (this._worker) {\n            this._worker.dispose();\n            this._worker = null;\n        }\n        this._client = null;\n    };\n    WorkerManager.prototype.dispose = function () {\n        clearInterval(this._idleCheckInterval);\n        this._configChangeListener.dispose();\n        this._stopWorker();\n    };\n    WorkerManager.prototype._checkIfIdle = function () {\n        if (!this._worker) {\n            return;\n        }\n        var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\n        if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\n            this._stopWorker();\n        }\n    };\n    WorkerManager.prototype._getClient = function () {\n        this._lastUsedTime = Date.now();\n        if (!this._client) {\n            this._worker = monaco.editor.createWebWorker({\n                // module that exports the create() method and returns a `JSONWorker` instance\n                moduleId: 'vs/language/json/jsonWorker',\n                label: this._defaults.languageId,\n                // passed in to the create() method\n                createData: {\n                    languageSettings: this._defaults.diagnosticsOptions,\n                    languageId: this._defaults.languageId\n                }\n            });\n            this._client = this._worker.getProxy();\n        }\n        return this._client;\n    };\n    WorkerManager.prototype.getLanguageServiceWorker = function () {\n        var _this = this;\n        var resources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            resources[_i] = arguments[_i];\n        }\n        var _client;\n        return toShallowCancelPromise(this._getClient().then(function (client) {\n            _client = client;\n        }).then(function (_) {\n            return _this._worker.withSyncedResources(resources);\n        }).then(function (_) { return _client; }));\n    };\n    return WorkerManager;\n}());\nexport { WorkerManager };\nfunction toShallowCancelPromise(p) {\n    var completeCallback;\n    var errorCallback;\n    var r = new Promise(function (c, e) {\n        completeCallback = c;\n        errorCallback = e;\n    }, function () { });\n    p.then(completeCallback, errorCallback);\n    return r;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/json/workerManager.js\n// module id = 852\n// module chunks = 2","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as ls from './_deps/vscode-languageserver-types/main.js';\nvar Uri = monaco.Uri;\nvar Range = monaco.Range;\n// --- diagnostics --- ---\nvar DiagnosticsAdapter = /** @class */ (function () {\n    function DiagnosticsAdapter(_languageId, _worker, defaults) {\n        var _this = this;\n        this._languageId = _languageId;\n        this._worker = _worker;\n        this._disposables = [];\n        this._listener = Object.create(null);\n        var onModelAdd = function (model) {\n            var modeId = model.getModeId();\n            if (modeId !== _this._languageId) {\n                return;\n            }\n            var handle;\n            _this._listener[model.uri.toString()] = model.onDidChangeContent(function () {\n                clearTimeout(handle);\n                handle = setTimeout(function () { return _this._doValidate(model.uri, modeId); }, 500);\n            });\n            _this._doValidate(model.uri, modeId);\n        };\n        var onModelRemoved = function (model) {\n            monaco.editor.setModelMarkers(model, _this._languageId, []);\n            var uriStr = model.uri.toString();\n            var listener = _this._listener[uriStr];\n            if (listener) {\n                listener.dispose();\n                delete _this._listener[uriStr];\n            }\n        };\n        this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\n        this._disposables.push(monaco.editor.onWillDisposeModel(function (model) {\n            onModelRemoved(model);\n            _this._resetSchema(model.uri);\n        }));\n        this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\n            onModelRemoved(event.model);\n            onModelAdd(event.model);\n            _this._resetSchema(event.model.uri);\n        }));\n        this._disposables.push(defaults.onDidChange(function (_) {\n            monaco.editor.getModels().forEach(function (model) {\n                if (model.getModeId() === _this._languageId) {\n                    onModelRemoved(model);\n                    onModelAdd(model);\n                }\n            });\n        }));\n        this._disposables.push({\n            dispose: function () {\n                monaco.editor.getModels().forEach(onModelRemoved);\n                for (var key in _this._listener) {\n                    _this._listener[key].dispose();\n                }\n            }\n        });\n        monaco.editor.getModels().forEach(onModelAdd);\n    }\n    DiagnosticsAdapter.prototype.dispose = function () {\n        this._disposables.forEach(function (d) { return d && d.dispose(); });\n        this._disposables = [];\n    };\n    DiagnosticsAdapter.prototype._resetSchema = function (resource) {\n        this._worker().then(function (worker) {\n            worker.resetSchema(resource.toString());\n        });\n    };\n    DiagnosticsAdapter.prototype._doValidate = function (resource, languageId) {\n        this._worker(resource).then(function (worker) {\n            return worker.doValidation(resource.toString()).then(function (diagnostics) {\n                var markers = diagnostics.map(function (d) { return toDiagnostics(resource, d); });\n                var model = monaco.editor.getModel(resource);\n                if (model.getModeId() === languageId) {\n                    monaco.editor.setModelMarkers(model, languageId, markers);\n                }\n            });\n        }).then(undefined, function (err) {\n            console.error(err);\n        });\n    };\n    return DiagnosticsAdapter;\n}());\nexport { DiagnosticsAdapter };\nfunction toSeverity(lsSeverity) {\n    switch (lsSeverity) {\n        case ls.DiagnosticSeverity.Error: return monaco.MarkerSeverity.Error;\n        case ls.DiagnosticSeverity.Warning: return monaco.MarkerSeverity.Warning;\n        case ls.DiagnosticSeverity.Information: return monaco.MarkerSeverity.Info;\n        case ls.DiagnosticSeverity.Hint: return monaco.MarkerSeverity.Hint;\n        default:\n            return monaco.MarkerSeverity.Info;\n    }\n}\nfunction toDiagnostics(resource, diag) {\n    var code = typeof diag.code === 'number' ? String(diag.code) : diag.code;\n    return {\n        severity: toSeverity(diag.severity),\n        startLineNumber: diag.range.start.line + 1,\n        startColumn: diag.range.start.character + 1,\n        endLineNumber: diag.range.end.line + 1,\n        endColumn: diag.range.end.character + 1,\n        message: diag.message,\n        code: code,\n        source: diag.source\n    };\n}\n// --- completion ------\nfunction fromPosition(position) {\n    if (!position) {\n        return void 0;\n    }\n    return { character: position.column - 1, line: position.lineNumber - 1 };\n}\nfunction fromRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return { start: { line: range.startLineNumber - 1, character: range.startColumn - 1 }, end: { line: range.endLineNumber - 1, character: range.endColumn - 1 } };\n}\nfunction toRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return new Range(range.start.line + 1, range.start.character + 1, range.end.line + 1, range.end.character + 1);\n}\nfunction toCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case ls.CompletionItemKind.Text: return mItemKind.Text;\n        case ls.CompletionItemKind.Method: return mItemKind.Method;\n        case ls.CompletionItemKind.Function: return mItemKind.Function;\n        case ls.CompletionItemKind.Constructor: return mItemKind.Constructor;\n        case ls.CompletionItemKind.Field: return mItemKind.Field;\n        case ls.CompletionItemKind.Variable: return mItemKind.Variable;\n        case ls.CompletionItemKind.Class: return mItemKind.Class;\n        case ls.CompletionItemKind.Interface: return mItemKind.Interface;\n        case ls.CompletionItemKind.Module: return mItemKind.Module;\n        case ls.CompletionItemKind.Property: return mItemKind.Property;\n        case ls.CompletionItemKind.Unit: return mItemKind.Unit;\n        case ls.CompletionItemKind.Value: return mItemKind.Value;\n        case ls.CompletionItemKind.Enum: return mItemKind.Enum;\n        case ls.CompletionItemKind.Keyword: return mItemKind.Keyword;\n        case ls.CompletionItemKind.Snippet: return mItemKind.Snippet;\n        case ls.CompletionItemKind.Color: return mItemKind.Color;\n        case ls.CompletionItemKind.File: return mItemKind.File;\n        case ls.CompletionItemKind.Reference: return mItemKind.Reference;\n    }\n    return mItemKind.Property;\n}\nfunction fromCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case mItemKind.Text: return ls.CompletionItemKind.Text;\n        case mItemKind.Method: return ls.CompletionItemKind.Method;\n        case mItemKind.Function: return ls.CompletionItemKind.Function;\n        case mItemKind.Constructor: return ls.CompletionItemKind.Constructor;\n        case mItemKind.Field: return ls.CompletionItemKind.Field;\n        case mItemKind.Variable: return ls.CompletionItemKind.Variable;\n        case mItemKind.Class: return ls.CompletionItemKind.Class;\n        case mItemKind.Interface: return ls.CompletionItemKind.Interface;\n        case mItemKind.Module: return ls.CompletionItemKind.Module;\n        case mItemKind.Property: return ls.CompletionItemKind.Property;\n        case mItemKind.Unit: return ls.CompletionItemKind.Unit;\n        case mItemKind.Value: return ls.CompletionItemKind.Value;\n        case mItemKind.Enum: return ls.CompletionItemKind.Enum;\n        case mItemKind.Keyword: return ls.CompletionItemKind.Keyword;\n        case mItemKind.Snippet: return ls.CompletionItemKind.Snippet;\n        case mItemKind.Color: return ls.CompletionItemKind.Color;\n        case mItemKind.File: return ls.CompletionItemKind.File;\n        case mItemKind.Reference: return ls.CompletionItemKind.Reference;\n    }\n    return ls.CompletionItemKind.Property;\n}\nfunction toTextEdit(textEdit) {\n    if (!textEdit) {\n        return void 0;\n    }\n    return {\n        range: toRange(textEdit.range),\n        text: textEdit.newText\n    };\n}\nfunction toCompletionItem(entry) {\n    return {\n        label: entry.label,\n        insertText: entry.insertText,\n        sortText: entry.sortText,\n        filterText: entry.filterText,\n        documentation: entry.documentation,\n        detail: entry.detail,\n        kind: toCompletionItemKind(entry.kind),\n        textEdit: toTextEdit(entry.textEdit),\n        data: entry.data\n    };\n}\nfunction fromMarkdownString(entry) {\n    return {\n        kind: (typeof entry === 'string' ? ls.MarkupKind.PlainText : ls.MarkupKind.Markdown),\n        value: (typeof entry === 'string' ? entry : entry.value)\n    };\n}\nfunction fromCompletionItem(entry) {\n    var item = {\n        label: entry.label,\n        sortText: entry.sortText,\n        filterText: entry.filterText,\n        documentation: fromMarkdownString(entry.documentation),\n        detail: entry.detail,\n        kind: fromCompletionItemKind(entry.kind),\n        data: entry.data\n    };\n    if (typeof entry.insertText === 'object' && typeof entry.insertText.value === 'string') {\n        item.insertText = entry.insertText.value;\n        item.insertTextFormat = ls.InsertTextFormat.Snippet;\n    }\n    else {\n        item.insertText = entry.insertText;\n    }\n    if (entry.range) {\n        item.textEdit = ls.TextEdit.replace(fromRange(entry.range), item.insertText);\n    }\n    return item;\n}\nvar CompletionAdapter = /** @class */ (function () {\n    function CompletionAdapter(_worker) {\n        this._worker = _worker;\n    }\n    Object.defineProperty(CompletionAdapter.prototype, \"triggerCharacters\", {\n        get: function () {\n            return [' ', ':'];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CompletionAdapter.prototype.provideCompletionItems = function (model, position, token) {\n        var wordInfo = model.getWordUntilPosition(position);\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.doComplete(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            var items = info.items.map(function (entry) {\n                var item = {\n                    label: entry.label,\n                    insertText: entry.insertText,\n                    sortText: entry.sortText,\n                    filterText: entry.filterText,\n                    documentation: entry.documentation,\n                    detail: entry.detail,\n                    kind: toCompletionItemKind(entry.kind),\n                };\n                if (entry.textEdit) {\n                    item.range = toRange(entry.textEdit.range);\n                    item.insertText = entry.textEdit.newText;\n                }\n                if (entry.insertTextFormat === ls.InsertTextFormat.Snippet) {\n                    item.insertText = { value: item.insertText };\n                }\n                return item;\n            });\n            return {\n                isIncomplete: info.isIncomplete,\n                items: items\n            };\n        }));\n    };\n    return CompletionAdapter;\n}());\nexport { CompletionAdapter };\nfunction isMarkupContent(thing) {\n    return thing && typeof thing === 'object' && typeof thing.kind === 'string';\n}\nfunction toMarkdownString(entry) {\n    if (typeof entry === 'string') {\n        return {\n            value: entry\n        };\n    }\n    if (isMarkupContent(entry)) {\n        if (entry.kind === 'plaintext') {\n            return {\n                value: entry.value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&')\n            };\n        }\n        return {\n            value: entry.value\n        };\n    }\n    return { value: '```' + entry.language + '\\n' + entry.value + '\\n```\\n' };\n}\nfunction toMarkedStringArray(contents) {\n    if (!contents) {\n        return void 0;\n    }\n    if (Array.isArray(contents)) {\n        return contents.map(toMarkdownString);\n    }\n    return [toMarkdownString(contents)];\n}\n// --- hover ------\nvar HoverAdapter = /** @class */ (function () {\n    function HoverAdapter(_worker) {\n        this._worker = _worker;\n    }\n    HoverAdapter.prototype.provideHover = function (model, position, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.doHover(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            return {\n                range: toRange(info.range),\n                contents: toMarkedStringArray(info.contents)\n            };\n        }));\n    };\n    return HoverAdapter;\n}());\nexport { HoverAdapter };\n// --- definition ------\nfunction toLocation(location) {\n    return {\n        uri: Uri.parse(location.uri),\n        range: toRange(location.range)\n    };\n}\n// --- document symbols ------\nfunction toSymbolKind(kind) {\n    var mKind = monaco.languages.SymbolKind;\n    switch (kind) {\n        case ls.SymbolKind.File: return mKind.Array;\n        case ls.SymbolKind.Module: return mKind.Module;\n        case ls.SymbolKind.Namespace: return mKind.Namespace;\n        case ls.SymbolKind.Package: return mKind.Package;\n        case ls.SymbolKind.Class: return mKind.Class;\n        case ls.SymbolKind.Method: return mKind.Method;\n        case ls.SymbolKind.Property: return mKind.Property;\n        case ls.SymbolKind.Field: return mKind.Field;\n        case ls.SymbolKind.Constructor: return mKind.Constructor;\n        case ls.SymbolKind.Enum: return mKind.Enum;\n        case ls.SymbolKind.Interface: return mKind.Interface;\n        case ls.SymbolKind.Function: return mKind.Function;\n        case ls.SymbolKind.Variable: return mKind.Variable;\n        case ls.SymbolKind.Constant: return mKind.Constant;\n        case ls.SymbolKind.String: return mKind.String;\n        case ls.SymbolKind.Number: return mKind.Number;\n        case ls.SymbolKind.Boolean: return mKind.Boolean;\n        case ls.SymbolKind.Array: return mKind.Array;\n    }\n    return mKind.Function;\n}\nvar DocumentSymbolAdapter = /** @class */ (function () {\n    function DocumentSymbolAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentSymbolAdapter.prototype.provideDocumentSymbols = function (model, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.findDocumentSymbols(resource.toString()); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            return items.map(function (item) { return ({\n                name: item.name,\n                containerName: item.containerName,\n                kind: toSymbolKind(item.kind),\n                location: toLocation(item.location)\n            }); });\n        }));\n    };\n    return DocumentSymbolAdapter;\n}());\nexport { DocumentSymbolAdapter };\nfunction fromFormattingOptions(options) {\n    return {\n        tabSize: options.tabSize,\n        insertSpaces: options.insertSpaces\n    };\n}\nvar DocumentFormattingEditProvider = /** @class */ (function () {\n    function DocumentFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentFormattingEditProvider.prototype.provideDocumentFormattingEdits = function (model, options, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), null, fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        }));\n    };\n    return DocumentFormattingEditProvider;\n}());\nexport { DocumentFormattingEditProvider };\nvar DocumentRangeFormattingEditProvider = /** @class */ (function () {\n    function DocumentRangeFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentRangeFormattingEditProvider.prototype.provideDocumentRangeFormattingEdits = function (model, range, options, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), fromRange(range), fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        }));\n    };\n    return DocumentRangeFormattingEditProvider;\n}());\nexport { DocumentRangeFormattingEditProvider };\nvar DocumentColorAdapter = /** @class */ (function () {\n    function DocumentColorAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentColorAdapter.prototype.provideDocumentColors = function (model, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.findDocumentColors(resource.toString()); }).then(function (infos) {\n            if (!infos) {\n                return;\n            }\n            return infos.map(function (item) { return ({\n                color: item.color,\n                range: toRange(item.range)\n            }); });\n        }));\n    };\n    DocumentColorAdapter.prototype.provideColorPresentations = function (model, info, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.getColorPresentations(resource.toString(), info.color, fromRange(info.range)); }).then(function (presentations) {\n            if (!presentations) {\n                return;\n            }\n            return presentations.map(function (presentation) {\n                var item = {\n                    label: presentation.label,\n                };\n                if (presentation.textEdit) {\n                    item.textEdit = toTextEdit(presentation.textEdit);\n                }\n                if (presentation.additionalTextEdits) {\n                    item.additionalTextEdits = presentation.additionalTextEdits.map(toTextEdit);\n                }\n                return item;\n            });\n        }));\n    };\n    return DocumentColorAdapter;\n}());\nexport { DocumentColorAdapter };\n/**\n * Hook a cancellation token to a WinJS Promise\n */\nfunction wireCancellationToken(token, promise) {\n    if (promise.cancel) {\n        token.onCancellationRequested(function () { return promise.cancel(); });\n    }\n    return promise;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/json/languageFeatures.js\n// module id = 853\n// module chunks = 2","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\n/**\n * The Position namespace provides helper functions to work with\n * [Position](#Position) literals.\n */\nexport var Position;\n(function (Position) {\n    /**\n     * Creates a new Position literal from the given line and character.\n     * @param line The position's line.\n     * @param character The position's character.\n     */\n    function create(line, character) {\n        return { line: line, character: character };\n    }\n    Position.create = create;\n    /**\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\n    }\n    Position.is = is;\n})(Position || (Position = {}));\n/**\n * The Range namespace provides helper functions to work with\n * [Range](#Range) literals.\n */\nexport var Range;\n(function (Range) {\n    function create(one, two, three, four) {\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\n            return { start: Position.create(one, two), end: Position.create(three, four) };\n        }\n        else if (Position.is(one) && Position.is(two)) {\n            return { start: one, end: two };\n        }\n        else {\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\n        }\n    }\n    Range.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n    }\n    Range.is = is;\n})(Range || (Range = {}));\n/**\n * The Location namespace provides helper functions to work with\n * [Location](#Location) literals.\n */\nexport var Location;\n(function (Location) {\n    /**\n     * Creates a Location literal.\n     * @param uri The location's uri.\n     * @param range The location's range.\n     */\n    function create(uri, range) {\n        return { uri: uri, range: range };\n    }\n    Location.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n    }\n    Location.is = is;\n})(Location || (Location = {}));\n/**\n * The diagnostic's serverity.\n */\nexport var DiagnosticSeverity;\n(function (DiagnosticSeverity) {\n    /**\n     * Reports an error.\n     */\n    DiagnosticSeverity.Error = 1;\n    /**\n     * Reports a warning.\n     */\n    DiagnosticSeverity.Warning = 2;\n    /**\n     * Reports an information.\n     */\n    DiagnosticSeverity.Information = 3;\n    /**\n     * Reports a hint.\n     */\n    DiagnosticSeverity.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\n/**\n * The Diagnostic namespace provides helper functions to work with\n * [Diagnostic](#Diagnostic) literals.\n */\nexport var Diagnostic;\n(function (Diagnostic) {\n    /**\n     * Creates a new Diagnostic literal.\n     */\n    function create(range, message, severity, code, source) {\n        var result = { range: range, message: message };\n        if (Is.defined(severity)) {\n            result.severity = severity;\n        }\n        if (Is.defined(code)) {\n            result.code = code;\n        }\n        if (Is.defined(source)) {\n            result.source = source;\n        }\n        return result;\n    }\n    Diagnostic.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate)\n            && Range.is(candidate.range)\n            && Is.string(candidate.message)\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\n            && (Is.string(candidate.source) || Is.undefined(candidate.source));\n    }\n    Diagnostic.is = is;\n})(Diagnostic || (Diagnostic = {}));\n/**\n * The Command namespace provides helper functions to work with\n * [Command](#Command) literals.\n */\nexport var Command;\n(function (Command) {\n    /**\n     * Creates a new Command literal.\n     */\n    function create(title, command) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var result = { title: title, command: command };\n        if (Is.defined(args) && args.length > 0) {\n            result.arguments = args;\n        }\n        return result;\n    }\n    Command.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.title);\n    }\n    Command.is = is;\n})(Command || (Command = {}));\n/**\n * The TextEdit namespace provides helper function to create replace,\n * insert and delete edits more easily.\n */\nexport var TextEdit;\n(function (TextEdit) {\n    /**\n     * Creates a replace text edit.\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     */\n    function replace(range, newText) {\n        return { range: range, newText: newText };\n    }\n    TextEdit.replace = replace;\n    /**\n     * Creates a insert text edit.\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     */\n    function insert(position, newText) {\n        return { range: { start: position, end: position }, newText: newText };\n    }\n    TextEdit.insert = insert;\n    /**\n     * Creates a delete text edit.\n     * @param range The range of text to be deleted.\n     */\n    function del(range) {\n        return { range: range, newText: '' };\n    }\n    TextEdit.del = del;\n})(TextEdit || (TextEdit = {}));\n/**\n * The TextDocumentEdit namespace provides helper function to create\n * an edit that manipulates a text document.\n */\nexport var TextDocumentEdit;\n(function (TextDocumentEdit) {\n    /**\n     * Creates a new `TextDocumentEdit`\n     */\n    function create(textDocument, edits) {\n        return { textDocument: textDocument, edits: edits };\n    }\n    TextDocumentEdit.create = create;\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate)\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\n            && Array.isArray(candidate.edits);\n    }\n    TextDocumentEdit.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\nvar TextEditChangeImpl = /** @class */ (function () {\n    function TextEditChangeImpl(edits) {\n        this.edits = edits;\n    }\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\n        this.edits.push(TextEdit.insert(position, newText));\n    };\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\n        this.edits.push(TextEdit.replace(range, newText));\n    };\n    TextEditChangeImpl.prototype.delete = function (range) {\n        this.edits.push(TextEdit.del(range));\n    };\n    TextEditChangeImpl.prototype.add = function (edit) {\n        this.edits.push(edit);\n    };\n    TextEditChangeImpl.prototype.all = function () {\n        return this.edits;\n    };\n    TextEditChangeImpl.prototype.clear = function () {\n        this.edits.splice(0, this.edits.length);\n    };\n    return TextEditChangeImpl;\n}());\n/**\n * A workspace change helps constructing changes to a workspace.\n */\nvar WorkspaceChange = /** @class */ (function () {\n    function WorkspaceChange(workspaceEdit) {\n        var _this = this;\n        this._textEditChanges = Object.create(null);\n        if (workspaceEdit) {\n            this._workspaceEdit = workspaceEdit;\n            if (workspaceEdit.documentChanges) {\n                workspaceEdit.documentChanges.forEach(function (textDocumentEdit) {\n                    var textEditChange = new TextEditChangeImpl(textDocumentEdit.edits);\n                    _this._textEditChanges[textDocumentEdit.textDocument.uri] = textEditChange;\n                });\n            }\n            else if (workspaceEdit.changes) {\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\n                    _this._textEditChanges[key] = textEditChange;\n                });\n            }\n        }\n    }\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\n        /**\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\n         * use to be returned from a workspace edit operation like rename.\n         */\n        get: function () {\n            return this._workspaceEdit;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\n        if (VersionedTextDocumentIdentifier.is(key)) {\n            if (!this._workspaceEdit) {\n                this._workspaceEdit = {\n                    documentChanges: []\n                };\n            }\n            if (!this._workspaceEdit.documentChanges) {\n                throw new Error('Workspace edit is not configured for versioned document changes.');\n            }\n            var textDocument = key;\n            var result = this._textEditChanges[textDocument.uri];\n            if (!result) {\n                var edits = [];\n                var textDocumentEdit = {\n                    textDocument: textDocument,\n                    edits: edits\n                };\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[textDocument.uri] = result;\n            }\n            return result;\n        }\n        else {\n            if (!this._workspaceEdit) {\n                this._workspaceEdit = {\n                    changes: Object.create(null)\n                };\n            }\n            if (!this._workspaceEdit.changes) {\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\n            }\n            var result = this._textEditChanges[key];\n            if (!result) {\n                var edits = [];\n                this._workspaceEdit.changes[key] = edits;\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[key] = result;\n            }\n            return result;\n        }\n    };\n    return WorkspaceChange;\n}());\nexport { WorkspaceChange };\n/**\n * The TextDocumentIdentifier namespace provides helper functions to work with\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\n */\nexport var TextDocumentIdentifier;\n(function (TextDocumentIdentifier) {\n    /**\n     * Creates a new TextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     */\n    function create(uri) {\n        return { uri: uri };\n    }\n    TextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri);\n    }\n    TextDocumentIdentifier.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\n/**\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\n */\nexport var VersionedTextDocumentIdentifier;\n(function (VersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new VersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param uri The document's text.\n     */\n    function create(uri, version) {\n        return { uri: uri, version: version };\n    }\n    VersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.number(candidate.version);\n    }\n    VersionedTextDocumentIdentifier.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\n/**\n * The TextDocumentItem namespace provides helper functions to work with\n * [TextDocumentItem](#TextDocumentItem) literals.\n */\nexport var TextDocumentItem;\n(function (TextDocumentItem) {\n    /**\n     * Creates a new TextDocumentItem literal.\n     * @param uri The document's uri.\n     * @param languageId The document's language identifier.\n     * @param version The document's version number.\n     * @param text The document's text.\n     */\n    function create(uri, languageId, version, text) {\n        return { uri: uri, languageId: languageId, version: version, text: text };\n    }\n    TextDocumentItem.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\n    }\n    TextDocumentItem.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\n/**\n * Describes the content type that a client supports in various\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n *\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\n * are reserved for internal usage.\n */\nexport var MarkupKind;\n(function (MarkupKind) {\n    /**\n     * Plain text is supported as a content format\n     */\n    MarkupKind.PlainText = 'plaintext';\n    /**\n     * Markdown is supported as a content format\n     */\n    MarkupKind.Markdown = 'markdown';\n})(MarkupKind || (MarkupKind = {}));\n/**\n * The kind of a completion entry.\n */\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind.Text = 1;\n    CompletionItemKind.Method = 2;\n    CompletionItemKind.Function = 3;\n    CompletionItemKind.Constructor = 4;\n    CompletionItemKind.Field = 5;\n    CompletionItemKind.Variable = 6;\n    CompletionItemKind.Class = 7;\n    CompletionItemKind.Interface = 8;\n    CompletionItemKind.Module = 9;\n    CompletionItemKind.Property = 10;\n    CompletionItemKind.Unit = 11;\n    CompletionItemKind.Value = 12;\n    CompletionItemKind.Enum = 13;\n    CompletionItemKind.Keyword = 14;\n    CompletionItemKind.Snippet = 15;\n    CompletionItemKind.Color = 16;\n    CompletionItemKind.File = 17;\n    CompletionItemKind.Reference = 18;\n    CompletionItemKind.Folder = 19;\n    CompletionItemKind.EnumMember = 20;\n    CompletionItemKind.Constant = 21;\n    CompletionItemKind.Struct = 22;\n    CompletionItemKind.Event = 23;\n    CompletionItemKind.Operator = 24;\n    CompletionItemKind.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\n/**\n * Defines whether the insert text in a completion item should be interpreted as\n * plain text or a snippet.\n */\nexport var InsertTextFormat;\n(function (InsertTextFormat) {\n    /**\n     * The primary text to be inserted is treated as a plain string.\n     */\n    InsertTextFormat.PlainText = 1;\n    /**\n     * The primary text to be inserted is treated as a snippet.\n     *\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\n     * the end of the snippet. Placeholders with equal identifiers are linked,\n     * that is typing in one will update others too.\n     *\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\n     */\n    InsertTextFormat.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\n/**\n * The CompletionItem namespace provides functions to deal with\n * completion items.\n */\nexport var CompletionItem;\n(function (CompletionItem) {\n    /**\n     * Create a completion item and seed it with a label.\n     * @param label The completion item's label\n     */\n    function create(label) {\n        return { label: label };\n    }\n    CompletionItem.create = create;\n})(CompletionItem || (CompletionItem = {}));\n/**\n * The CompletionList namespace provides functions to deal with\n * completion lists.\n */\nexport var CompletionList;\n(function (CompletionList) {\n    /**\n     * Creates a new completion list.\n     *\n     * @param items The completion items.\n     * @param isIncomplete The list is not complete.\n     */\n    function create(items, isIncomplete) {\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\n    }\n    CompletionList.create = create;\n})(CompletionList || (CompletionList = {}));\nexport var MarkedString;\n(function (MarkedString) {\n    /**\n     * Creates a marked string from plain text.\n     *\n     * @param plainText The plain text.\n     */\n    function fromPlainText(plainText) {\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    }\n    MarkedString.fromPlainText = fromPlainText;\n})(MarkedString || (MarkedString = {}));\n/**\n * The ParameterInformation namespace provides helper functions to work with\n * [ParameterInformation](#ParameterInformation) literals.\n */\nexport var ParameterInformation;\n(function (ParameterInformation) {\n    /**\n     * Creates a new parameter information literal.\n     *\n     * @param label A label string.\n     * @param documentation A doc string.\n     */\n    function create(label, documentation) {\n        return documentation ? { label: label, documentation: documentation } : { label: label };\n    }\n    ParameterInformation.create = create;\n    ;\n})(ParameterInformation || (ParameterInformation = {}));\n/**\n * The SignatureInformation namespace provides helper functions to work with\n * [SignatureInformation](#SignatureInformation) literals.\n */\nexport var SignatureInformation;\n(function (SignatureInformation) {\n    function create(label, documentation) {\n        var parameters = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            parameters[_i - 2] = arguments[_i];\n        }\n        var result = { label: label };\n        if (Is.defined(documentation)) {\n            result.documentation = documentation;\n        }\n        if (Is.defined(parameters)) {\n            result.parameters = parameters;\n        }\n        else {\n            result.parameters = [];\n        }\n        return result;\n    }\n    SignatureInformation.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrance.\n     */\n    DocumentHighlightKind.Text = 1;\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind.Read = 2;\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * DocumentHighlight namespace to provide helper functions to work with\n * [DocumentHighlight](#DocumentHighlight) literals.\n */\nexport var DocumentHighlight;\n(function (DocumentHighlight) {\n    /**\n     * Create a DocumentHighlight object.\n     * @param range The range the highlight applies to.\n     */\n    function create(range, kind) {\n        var result = { range: range };\n        if (Is.number(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    DocumentHighlight.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n    SymbolKind.File = 1;\n    SymbolKind.Module = 2;\n    SymbolKind.Namespace = 3;\n    SymbolKind.Package = 4;\n    SymbolKind.Class = 5;\n    SymbolKind.Method = 6;\n    SymbolKind.Property = 7;\n    SymbolKind.Field = 8;\n    SymbolKind.Constructor = 9;\n    SymbolKind.Enum = 10;\n    SymbolKind.Interface = 11;\n    SymbolKind.Function = 12;\n    SymbolKind.Variable = 13;\n    SymbolKind.Constant = 14;\n    SymbolKind.String = 15;\n    SymbolKind.Number = 16;\n    SymbolKind.Boolean = 17;\n    SymbolKind.Array = 18;\n    SymbolKind.Object = 19;\n    SymbolKind.Key = 20;\n    SymbolKind.Null = 21;\n    SymbolKind.EnumMember = 22;\n    SymbolKind.Struct = 23;\n    SymbolKind.Event = 24;\n    SymbolKind.Operator = 25;\n    SymbolKind.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\nexport var SymbolInformation;\n(function (SymbolInformation) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the location of the symbol.\n     * @param uri The resource of the location of symbol, defaults to the current document.\n     * @param containerName The name of the symbol containg the symbol.\n     */\n    function create(name, kind, range, uri, containerName) {\n        var result = {\n            name: name,\n            kind: kind,\n            location: { uri: uri, range: range }\n        };\n        if (containerName) {\n            result.containerName = containerName;\n        }\n        return result;\n    }\n    SymbolInformation.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\n/**\n * The CodeActionContext namespace provides helper functions to work with\n * [CodeActionContext](#CodeActionContext) literals.\n */\nexport var CodeActionContext;\n(function (CodeActionContext) {\n    /**\n     * Creates a new CodeActionContext literal.\n     */\n    function create(diagnostics) {\n        return { diagnostics: diagnostics };\n    }\n    CodeActionContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is);\n    }\n    CodeActionContext.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\n/**\n * The CodeLens namespace provides helper functions to work with\n * [CodeLens](#CodeLens) literals.\n */\nexport var CodeLens;\n(function (CodeLens) {\n    /**\n     * Creates a new CodeLens literal.\n     */\n    function create(range, data) {\n        var result = { range: range };\n        if (Is.defined(data))\n            result.data = data;\n        return result;\n    }\n    CodeLens.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n    }\n    CodeLens.is = is;\n})(CodeLens || (CodeLens = {}));\n/**\n * The FormattingOptions namespace provides helper functions to work with\n * [FormattingOptions](#FormattingOptions) literals.\n */\nexport var FormattingOptions;\n(function (FormattingOptions) {\n    /**\n     * Creates a new FormattingOptions literal.\n     */\n    function create(tabSize, insertSpaces) {\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\n    }\n    FormattingOptions.create = create;\n    /**\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n    }\n    FormattingOptions.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\n/**\n * A document link is a range in a text document that links to an internal or external resource, like another\n * text document or a web site.\n */\nvar DocumentLink = /** @class */ (function () {\n    function DocumentLink() {\n    }\n    return DocumentLink;\n}());\nexport { DocumentLink };\n/**\n * The DocumentLink namespace provides helper functions to work with\n * [DocumentLink](#DocumentLink) literals.\n */\n(function (DocumentLink) {\n    /**\n     * Creates a new DocumentLink literal.\n     */\n    function create(range, target) {\n        return { range: range, target: target };\n    }\n    DocumentLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n    }\n    DocumentLink.is = is;\n})(DocumentLink || (DocumentLink = {}));\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new ITextDocument literal from the given uri and content.\n     * @param uri The document's uri.\n     * @param languageId  The document's language Id.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n    }\n    TextDocument.is = is;\n    function applyEdits(document, edits) {\n        var text = document.getText();\n        var sortedEdits = mergeSort(edits, function (a, b) {\n            var diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return 0;\n        });\n        var lastModifiedOffset = text.length;\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\n            var e = sortedEdits[i];\n            var startOffset = document.offsetAt(e.range.start);\n            var endOffset = document.offsetAt(e.range.end);\n            if (endOffset <= lastModifiedOffset) {\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n            }\n            else {\n                throw new Error('Ovelapping edit');\n            }\n            lastModifiedOffset = startOffset;\n        }\n        return text;\n    }\n    TextDocument.applyEdits = applyEdits;\n    function mergeSort(data, compare) {\n        if (data.length <= 1) {\n            // sorted\n            return data;\n        }\n        var p = (data.length / 2) | 0;\n        var left = data.slice(0, p);\n        var right = data.slice(p);\n        mergeSort(left, compare);\n        mergeSort(right, compare);\n        var leftIdx = 0;\n        var rightIdx = 0;\n        var i = 0;\n        while (leftIdx < left.length && rightIdx < right.length) {\n            var ret = compare(left[leftIdx], right[rightIdx]);\n            if (ret <= 0) {\n                // smaller_equal -> take left to preserve order\n                data[i++] = left[leftIdx++];\n            }\n            else {\n                // greater -> take right\n                data[i++] = right[rightIdx++];\n            }\n        }\n        while (leftIdx < left.length) {\n            data[i++] = left[leftIdx++];\n        }\n        while (rightIdx < right.length) {\n            data[i++] = right[rightIdx++];\n        }\n        return data;\n    }\n})(TextDocument || (TextDocument = {}));\n/**\n * Represents reasons why a text document is saved.\n */\nexport var TextDocumentSaveReason;\n(function (TextDocumentSaveReason) {\n    /**\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\n     * or by an API call.\n     */\n    TextDocumentSaveReason.Manual = 1;\n    /**\n     * Automatic after a delay.\n     */\n    TextDocumentSaveReason.AfterDelay = 2;\n    /**\n     * When the editor lost focus.\n     */\n    TextDocumentSaveReason.FocusOut = 3;\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\nvar FullTextDocument = /** @class */ (function () {\n    function FullTextDocument(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = null;\n    }\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\n        get: function () {\n            return this._uri;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\n        get: function () {\n            return this._languageId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\n        get: function () {\n            return this._version;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FullTextDocument.prototype.getText = function (range) {\n        if (range) {\n            var start = this.offsetAt(range.start);\n            var end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    };\n    FullTextDocument.prototype.update = function (event, version) {\n        this._content = event.text;\n        this._version = version;\n        this._lineOffsets = null;\n    };\n    FullTextDocument.prototype.getLineOffsets = function () {\n        if (this._lineOffsets === null) {\n            var lineOffsets = [];\n            var text = this._content;\n            var isLineStart = true;\n            for (var i = 0; i < text.length; i++) {\n                if (isLineStart) {\n                    lineOffsets.push(i);\n                    isLineStart = false;\n                }\n                var ch = text.charAt(i);\n                isLineStart = (ch === '\\r' || ch === '\\n');\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                    i++;\n                }\n            }\n            if (isLineStart && text.length > 0) {\n                lineOffsets.push(text.length);\n            }\n            this._lineOffsets = lineOffsets;\n        }\n        return this._lineOffsets;\n    };\n    FullTextDocument.prototype.positionAt = function (offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        var lineOffsets = this.getLineOffsets();\n        var low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return Position.create(0, offset);\n        }\n        while (low < high) {\n            var mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        var line = low - 1;\n        return Position.create(line, offset - lineOffsets[line]);\n    };\n    FullTextDocument.prototype.offsetAt = function (position) {\n        var lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        var lineOffset = lineOffsets[position.line];\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n    };\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\n        get: function () {\n            return this.getLineOffsets().length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return FullTextDocument;\n}());\nvar Is;\n(function (Is) {\n    var toString = Object.prototype.toString;\n    function defined(value) {\n        return typeof value !== 'undefined';\n    }\n    Is.defined = defined;\n    function undefined(value) {\n        return typeof value === 'undefined';\n    }\n    Is.undefined = undefined;\n    function boolean(value) {\n        return value === true || value === false;\n    }\n    Is.boolean = boolean;\n    function string(value) {\n        return toString.call(value) === '[object String]';\n    }\n    Is.string = string;\n    function number(value) {\n        return toString.call(value) === '[object Number]';\n    }\n    Is.number = number;\n    function func(value) {\n        return toString.call(value) === '[object Function]';\n    }\n    Is.func = func;\n    function typedArray(value, check) {\n        return Array.isArray(value) && value.every(check);\n    }\n    Is.typedArray = typedArray;\n})(Is || (Is = {}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-languageserver-types/main.js\n// module id = 854\n// module chunks = 2","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as json from './_deps/jsonc-parser/main.js';\nexport function createTokenizationSupport(supportComments) {\n    return {\n        getInitialState: function () { return new JSONState(null, null, false); },\n        tokenize: function (line, state, offsetDelta, stopAtOffset) { return tokenize(supportComments, line, state, offsetDelta, stopAtOffset); }\n    };\n}\nexport var TOKEN_DELIM_OBJECT = 'delimiter.bracket.json';\nexport var TOKEN_DELIM_ARRAY = 'delimiter.array.json';\nexport var TOKEN_DELIM_COLON = 'delimiter.colon.json';\nexport var TOKEN_DELIM_COMMA = 'delimiter.comma.json';\nexport var TOKEN_VALUE_BOOLEAN = 'keyword.json';\nexport var TOKEN_VALUE_NULL = 'keyword.json';\nexport var TOKEN_VALUE_STRING = 'string.value.json';\nexport var TOKEN_VALUE_NUMBER = 'number.json';\nexport var TOKEN_PROPERTY_NAME = 'string.key.json';\nexport var TOKEN_COMMENT_BLOCK = 'comment.block.json';\nexport var TOKEN_COMMENT_LINE = 'comment.line.json';\nvar JSONState = /** @class */ (function () {\n    function JSONState(state, scanError, lastWasColon) {\n        this._state = state;\n        this.scanError = scanError;\n        this.lastWasColon = lastWasColon;\n    }\n    JSONState.prototype.clone = function () {\n        return new JSONState(this._state, this.scanError, this.lastWasColon);\n    };\n    JSONState.prototype.equals = function (other) {\n        if (other === this) {\n            return true;\n        }\n        if (!other || !(other instanceof JSONState)) {\n            return false;\n        }\n        return this.scanError === other.scanError &&\n            this.lastWasColon === other.lastWasColon;\n    };\n    JSONState.prototype.getStateData = function () {\n        return this._state;\n    };\n    JSONState.prototype.setStateData = function (state) {\n        this._state = state;\n    };\n    return JSONState;\n}());\nfunction tokenize(comments, line, state, offsetDelta, stopAtOffset) {\n    if (offsetDelta === void 0) { offsetDelta = 0; }\n    // handle multiline strings and block comments\n    var numberOfInsertedCharacters = 0, adjustOffset = false;\n    switch (state.scanError) {\n        case 2 /* UnexpectedEndOfString */:\n            line = '\"' + line;\n            numberOfInsertedCharacters = 1;\n            break;\n        case 1 /* UnexpectedEndOfComment */:\n            line = '/*' + line;\n            numberOfInsertedCharacters = 2;\n            break;\n    }\n    var scanner = json.createScanner(line), kind, ret, lastWasColon = state.lastWasColon;\n    ret = {\n        tokens: [],\n        endState: state.clone()\n    };\n    while (true) {\n        var offset = offsetDelta + scanner.getPosition(), type = '';\n        kind = scanner.scan();\n        if (kind === 17 /* EOF */) {\n            break;\n        }\n        // Check that the scanner has advanced\n        if (offset === offsetDelta + scanner.getPosition()) {\n            throw new Error('Scanner did not advance, next 3 characters are: ' + line.substr(scanner.getPosition(), 3));\n        }\n        // In case we inserted /* or \" character, we need to\n        // adjust the offset of all tokens (except the first)\n        if (adjustOffset) {\n            offset -= numberOfInsertedCharacters;\n        }\n        adjustOffset = numberOfInsertedCharacters > 0;\n        // brackets and type\n        switch (kind) {\n            case 1 /* OpenBraceToken */:\n                type = TOKEN_DELIM_OBJECT;\n                lastWasColon = false;\n                break;\n            case 2 /* CloseBraceToken */:\n                type = TOKEN_DELIM_OBJECT;\n                lastWasColon = false;\n                break;\n            case 3 /* OpenBracketToken */:\n                type = TOKEN_DELIM_ARRAY;\n                lastWasColon = false;\n                break;\n            case 4 /* CloseBracketToken */:\n                type = TOKEN_DELIM_ARRAY;\n                lastWasColon = false;\n                break;\n            case 6 /* ColonToken */:\n                type = TOKEN_DELIM_COLON;\n                lastWasColon = true;\n                break;\n            case 5 /* CommaToken */:\n                type = TOKEN_DELIM_COMMA;\n                lastWasColon = false;\n                break;\n            case 8 /* TrueKeyword */:\n            case 9 /* FalseKeyword */:\n                type = TOKEN_VALUE_BOOLEAN;\n                lastWasColon = false;\n                break;\n            case 7 /* NullKeyword */:\n                type = TOKEN_VALUE_NULL;\n                lastWasColon = false;\n                break;\n            case 10 /* StringLiteral */:\n                type = lastWasColon ? TOKEN_VALUE_STRING : TOKEN_PROPERTY_NAME;\n                lastWasColon = false;\n                break;\n            case 11 /* NumericLiteral */:\n                type = TOKEN_VALUE_NUMBER;\n                lastWasColon = false;\n                break;\n        }\n        // comments, iff enabled\n        if (comments) {\n            switch (kind) {\n                case 12 /* LineCommentTrivia */:\n                    type = TOKEN_COMMENT_LINE;\n                    break;\n                case 13 /* BlockCommentTrivia */:\n                    type = TOKEN_COMMENT_BLOCK;\n                    break;\n            }\n        }\n        ret.endState = new JSONState(state.getStateData(), scanner.getTokenError(), lastWasColon);\n        ret.tokens.push({\n            startIndex: offset,\n            scopes: type\n        });\n    }\n    return ret;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/json/tokenization.js\n// module id = 855\n// module chunks = 2","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as formatter from './impl/format.js';\nimport * as edit from './impl/edit.js';\nimport * as scanner from './impl/scanner.js';\nimport * as parser from './impl/parser.js';\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport var createScanner = scanner.createScanner;\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport var getLocation = parser.getLocation;\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport var parse = parser.parse;\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport var parseTree = parser.parseTree;\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport var findNodeAtLocation = parser.findNodeAtLocation;\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport var getNodeValue = parser.getNodeValue;\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport var visit = parser.visit;\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport var stripComments = parser.stripComments;\n/**\n * Computes the edits needed to format a JSON document.\n *\n * @param documentText The input text\n * @param range The range to format or `undefined` to format the full content\n * @param options The formatting options\n * @returns A list of edit operations describing the formatting changes to the original document. Edits can be either inserts, replacements or\n * removals of text segments. All offsets refer to the original state of the document. No two edits must change or remove the same range of\n * text in the original document. However, multiple edits can have\n * the same offset, for example multiple inserts, or an insert followed by a remove or replace. The order in the array defines which edit is applied first.\n * To apply edits to an input, you can use `applyEdits`\n */\nexport function format(documentText, range, options) {\n    return formatter.format(documentText, range, options);\n}\n/**\n * Computes the edits needed to modify a value in the JSON document.\n *\n * @param documentText The input text\n * @param path The path of the value to change. The path represents either to the document root, a property or an array item.\n * If the path points to an non-existing property or item, it will be created.\n * @param value The new value for the specified property or item. If the value is undefined,\n * the property or item will be removed.\n * @param options Options\n * @returns A list of edit operations describing the formatting changes to the original document. Edits can be either inserts, replacements or\n * removals of text segments. All offsets refer to the original state of the document. No two edits must change or remove the same range of\n * text in the original document. However, multiple edits can have\n * the same offset, for example multiple inserts, or an insert followed by a remove or replace. The order in the array defines which edit is applied first.\n * To apply edits to an input, you can use `applyEdits`\n */\nexport function modify(text, path, value, options) {\n    return edit.setProperty(text, path, value, options.formattingOptions, options.getInsertionIndex);\n}\n/**\n * Applies edits to a input string.\n */\nexport function applyEdits(text, edits) {\n    for (var i = edits.length - 1; i >= 0; i--) {\n        text = edit.applyEdit(text, edits[i]);\n    }\n    return text;\n}\n//# sourceMappingURL=main.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/main.js\n// module id = 856\n// module chunks = 2","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { format, isEOL } from './format.js';\nimport { parseTree, findNodeAtLocation } from './parser.js';\nexport function removeProperty(text, path, formattingOptions) {\n    return setProperty(text, path, void 0, formattingOptions);\n}\nexport function setProperty(text, path, value, formattingOptions, getInsertionIndex) {\n    var errors = [];\n    var root = parseTree(text, errors);\n    var parent = void 0;\n    var lastSegment = void 0;\n    while (path.length > 0) {\n        lastSegment = path.pop();\n        parent = findNodeAtLocation(root, path);\n        if (parent === void 0 && value !== void 0) {\n            if (typeof lastSegment === 'string') {\n                value = (_a = {}, _a[lastSegment] = value, _a);\n            }\n            else {\n                value = [value];\n            }\n        }\n        else {\n            break;\n        }\n    }\n    if (!parent) {\n        // empty document\n        if (value === void 0) {\n            throw new Error('Can not delete in empty document');\n        }\n        return withFormatting(text, { offset: root ? root.offset : 0, length: root ? root.length : 0, content: JSON.stringify(value) }, formattingOptions);\n    }\n    else if (parent.type === 'object' && typeof lastSegment === 'string' && Array.isArray(parent.children)) {\n        var existing = findNodeAtLocation(parent, [lastSegment]);\n        if (existing !== void 0) {\n            if (value === void 0) {\n                if (!existing.parent) {\n                    throw new Error('Malformed AST');\n                }\n                var propertyIndex = parent.children.indexOf(existing.parent);\n                var removeBegin = void 0;\n                var removeEnd = existing.parent.offset + existing.parent.length;\n                if (propertyIndex > 0) {\n                    // remove the comma of the previous node\n                    var previous = parent.children[propertyIndex - 1];\n                    removeBegin = previous.offset + previous.length;\n                }\n                else {\n                    removeBegin = parent.offset + 1;\n                    if (parent.children.length > 1) {\n                        // remove the comma of the next node\n                        var next = parent.children[1];\n                        removeEnd = next.offset;\n                    }\n                }\n                return withFormatting(text, { offset: removeBegin, length: removeEnd - removeBegin, content: '' }, formattingOptions);\n            }\n            else {\n                // set value of existing property\n                return withFormatting(text, { offset: existing.offset, length: existing.length, content: JSON.stringify(value) }, formattingOptions);\n            }\n        }\n        else {\n            if (value === void 0) {\n                return []; // property does not exist, nothing to do\n            }\n            var newProperty = JSON.stringify(lastSegment) + \": \" + JSON.stringify(value);\n            var index = getInsertionIndex ? getInsertionIndex(parent.children.map(function (p) { return p.children[0].value; })) : parent.children.length;\n            var edit = void 0;\n            if (index > 0) {\n                var previous = parent.children[index - 1];\n                edit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n            }\n            else if (parent.children.length === 0) {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty };\n            }\n            else {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty + ',' };\n            }\n            return withFormatting(text, edit, formattingOptions);\n        }\n    }\n    else if (parent.type === 'array' && typeof lastSegment === 'number' && Array.isArray(parent.children)) {\n        var insertIndex = lastSegment;\n        if (insertIndex === -1) {\n            // Insert\n            var newProperty = \"\" + JSON.stringify(value);\n            var edit = void 0;\n            if (parent.children.length === 0) {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty };\n            }\n            else {\n                var previous = parent.children[parent.children.length - 1];\n                edit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n            }\n            return withFormatting(text, edit, formattingOptions);\n        }\n        else {\n            if (value === void 0 && parent.children.length >= 0) {\n                //Removal\n                var removalIndex = lastSegment;\n                var toRemove = parent.children[removalIndex];\n                var edit = void 0;\n                if (parent.children.length === 1) {\n                    // only item\n                    edit = { offset: parent.offset + 1, length: parent.length - 2, content: '' };\n                }\n                else if (parent.children.length - 1 === removalIndex) {\n                    // last item\n                    var previous = parent.children[removalIndex - 1];\n                    var offset = previous.offset + previous.length;\n                    var parentEndOffset = parent.offset + parent.length;\n                    edit = { offset: offset, length: parentEndOffset - 2 - offset, content: '' };\n                }\n                else {\n                    edit = { offset: toRemove.offset, length: parent.children[removalIndex + 1].offset - toRemove.offset, content: '' };\n                }\n                return withFormatting(text, edit, formattingOptions);\n            }\n            else {\n                throw new Error('Array modification not supported yet');\n            }\n        }\n    }\n    else {\n        throw new Error(\"Can not add \" + (typeof lastSegment !== 'number' ? 'index' : 'property') + \" to parent of type \" + parent.type);\n    }\n    var _a;\n}\nfunction withFormatting(text, edit, formattingOptions) {\n    // apply the edit\n    var newText = applyEdit(text, edit);\n    // format the new text\n    var begin = edit.offset;\n    var end = edit.offset + edit.content.length;\n    if (edit.length === 0 || edit.content.length === 0) {\n        while (begin > 0 && !isEOL(newText, begin - 1)) {\n            begin--;\n        }\n        while (end < newText.length && !isEOL(newText, end)) {\n            end++;\n        }\n    }\n    var edits = format(newText, { offset: begin, length: end - begin }, formattingOptions);\n    // apply the formatting edits and track the begin and end offsets of the changes\n    for (var i = edits.length - 1; i >= 0; i--) {\n        var edit_1 = edits[i];\n        newText = applyEdit(newText, edit_1);\n        begin = Math.min(begin, edit_1.offset);\n        end = Math.max(end, edit_1.offset + edit_1.length);\n        end += edit_1.content.length - edit_1.length;\n    }\n    // create a single edit with all changes\n    var editLength = text.length - (newText.length - end) - begin;\n    return [{ offset: begin, length: editLength, content: newText.substring(begin, end) }];\n}\nexport function applyEdit(text, edit) {\n    return text.substring(0, edit.offset) + edit.content + text.substring(edit.offset + edit.length);\n}\nexport function isWS(text, offset) {\n    return '\\r\\n \\t'.indexOf(text.charAt(offset)) !== -1;\n}\n//# sourceMappingURL=edit.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/edit.js\n// module id = 857\n// module chunks = 2"],"sourceRoot":""}